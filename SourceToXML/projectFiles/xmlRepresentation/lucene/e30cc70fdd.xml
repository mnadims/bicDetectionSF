<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/lucene/e30cc70fdd.java"><expr><name>From</name> <name>e30cc70fddcdd6fddb5eedf9f38e77fcb3f33bd1</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Andrzej</name> <name><name>Bialecki</name> <argument_list type="generic">&lt;<argument><name>ab</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Tue</name></expr><operator>,</operator> <expr><literal type="number">11</literal> <name>Apr</name> <literal type="number">2017</literal> <literal type="number">19</literal><operator>:</operator><literal type="number">22</literal><operator>:</operator><literal type="number">23</literal> <operator>+</operator><literal type="number">0200</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>SOLR</name><operator>-</operator><literal type="number">9959</literal><operator>:</operator> <name>SolrInfoMBean</name><operator>-</operator><name>s</name> <name>category</name> <name>and</name> <name>hierarchy</name> <name><name>cleanup</name><operator>.</operator></name>

--
 <operator>...</operator><operator>/</operator><operator>.</operator><name>idea</name><operator>/</operator><name>libraries</name><operator>/</operator><name><name>Solr_DIH_core_library</name><operator>.</operator><name>xml</name></name> <operator>|</operator>  <literal type="number">10</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name><name>dataimporthandler</name><operator>.</operator><name>iml</name></name>   <operator>|</operator>   <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <name>lucene</name><operator>/</operator><name>tools</name><operator>/</operator><name>junit4</name><operator>/</operator><name>cached</name><operator>-</operator><name><name>timehints</name><operator>.</operator><name>txt</name></name>      <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <name>solr</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>                              <operator>|</operator>  <literal type="number">17</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>plugin</name><operator>/</operator><name><name>AnalyticsStatisticsCollector</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">31</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>AnalyticsComponent</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">16</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>DataImportHandler</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">57</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>CoreContainer</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">65</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>DirectoryFactory</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">8</literal> <operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>HdfsDirectoryFactory</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">10</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>JmxMonitoredMap</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">478</literal> <operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>PluginBag</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrConfig</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">52</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrCore</name><operator>.</operator><name>java</name></name>   <operator>|</operator> <literal type="number">171</literal> <operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrInfoBean</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">95</literal> <operator>++</operator><operator>++</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrInfoMBean</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">76</literal> <operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrInfoMBeanWrapper</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">62</literal> <operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrResourceLoader</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">18</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrXmlConfig</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">36</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>AnalyzeEvaluator</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">3</literal> <operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>MoreLikeThisHandler</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">10</literal> <operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>RealTimeGetHandler</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">6</literal> <operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>ReplicationHandler</name><operator>.</operator><name>java</name></name>      <operator>|</operator> <literal type="number">109</literal> <operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>RequestHandlerBase</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">62</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>SolrConfigHandler</name><operator>.</operator><name>java</name></name>       <operator>|</operator>   <literal type="number">6</literal> <operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>StandardRequestHandler</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">11</literal> <operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CoreAdminHandler</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>LukeRequestHandler</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">10</literal> <operator>-</operator>
 <operator>...</operator><operator>/</operator><name>admin</name><operator>/</operator><name><name>MetricsCollectorHandler</name><operator>.</operator><name>java</name></name>        <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>MetricsHandler</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">42</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>PluginInfoHandler</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">27</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>SolrInfoMBeanHandler</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">32</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>SystemInfoHandler</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">66</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>DebugComponent</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">8</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>ExpandComponent</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">15</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>FacetComponent</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">8</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>HighlightComponent</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">8</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>component</name><operator>/</operator><name><name>HttpShardHandlerFactory</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>component</name><operator>/</operator><name><name>MoreLikeThisComponent</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">8</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>QueryComponent</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">8</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>component</name><operator>/</operator><name><name>QueryElevationComponent</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">14</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>component</name><operator>/</operator><name><name>RealTimeGetComponent</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">10</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>SearchComponent</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">31</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>component</name><operator>/</operator><name><name>SpellCheckComponent</name><operator>.</operator><name>java</name></name>        <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>StatsComponent</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>SuggestComponent</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">27</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>highlight</name><operator>/</operator><name><name>DefaultSolrHighlighter</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">30</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>GapFragmenter</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>highlight</name><operator>/</operator><name><name>HighlightingPluginBase</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">41</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>HtmlFormatter</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>RegexFragmenter</name><operator>.</operator><name>java</name></name>       <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>SimpleFragListBuilder</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>SingleFragListBuilder</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>SolrBoundaryScanner</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>SolrEncoder</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>SolrFormatter</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>SolrFragListBuilder</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>SolrFragmenter</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>SolrFragmentsBuilder</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>highlight</name><operator>/</operator><name><name>WeightedFragListBuilder</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>AltBufferPoolMetricSet</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">47</literal> <operator>++</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>MetricsMap</name><operator>.</operator><name>java</name></name>   <operator>|</operator> <literal type="number">184</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator>
 <operator>...</operator><operator>/</operator><name>metrics</name><operator>/</operator><name><name>OperatingSystemMetricSet</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">66</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrCoreMetricManager</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">27</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrMetricInfo</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">23</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrMetricManager</name><operator>.</operator><name>java</name></name>       <operator>|</operator> <literal type="number">144</literal> <operator>++</operator><operator>++</operator><operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrMetricReporter</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">12</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>reporters</name><operator>/</operator><name><name>JmxObjectNameFactory</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">63</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>reporters</name><operator>/</operator><name><name>ReporterClientCache</name><operator>.</operator><name>java</name></name>        <operator>|</operator>  <literal type="number">84</literal> <operator>++</operator><operator>+</operator>
 <operator>...</operator><operator>/</operator><name>reporters</name><operator>/</operator><name><name>SolrGangliaReporter</name><operator>.</operator><name>java</name></name>        <operator>|</operator>  <literal type="number">48</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>reporters</name><operator>/</operator><name><name>SolrGraphiteReporter</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">46</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name><name>SolrJmxReporter</name><operator>.</operator><name>java</name></name>    <operator>|</operator> <literal type="number">206</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name><name>SolrSlf4jReporter</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">29</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>reporters</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrClusterReporter</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">28</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>reporters</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrShardReporter</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">17</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>SolrRequestHandler</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>FastLRUCache</name><operator>.</operator><name>java</name></name>  <operator>|</operator> <literal type="number">126</literal> <operator>++</operator><operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>LFUCache</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">147</literal> <operator>++</operator><operator>+</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>LRUCache</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">82</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>QParserPlugin</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">22</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrCache</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">5</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrCacheBase</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">7</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrFieldCacheBean</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">77</literal> <operator>++</operator><operator>+</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrFieldCacheMBean</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">78</literal> <operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrIndexSearcher</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">76</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>facet</name><operator>/</operator><name><name>FacetModule</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">6</literal> <operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>servlet</name><operator>/</operator><name><name>SolrDispatchFilter</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">13</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>store</name><operator>/</operator><name>blockcache</name><operator>/</operator><name><name>Metrics</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">124</literal> <operator>++</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>store</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsLocalityReporter</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">141</literal> <operator>++</operator><operator>+</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>DirectUpdateHandler2</name><operator>.</operator><name>java</name></name>     <operator>|</operator> <literal type="number">116</literal> <operator>++</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>HdfsUpdateLog</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>PeerSync</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">10</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>SolrIndexWriter</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">26</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>UpdateHandler</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">18</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>UpdateLog</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">16</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>UpdateShardHandler</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">45</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>util</name><operator>/</operator><name><name>JmxUtil</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">3</literal> <operator>-</operator>
 <operator>...</operator><name><name>tedPoolingHttpClientConnectionManager</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">8</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>util</name><operator>/</operator><name>stats</name><operator>/</operator><name><name>MetricUtils</name><operator>.</operator><name>java</name></name>   <operator>|</operator> <literal type="number">439</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>-</operator><name>files</name><operator>/</operator><name>solr</name><operator>/</operator><name>solr</name><operator>-</operator><name><name>jmxreporter</name><operator>.</operator><name>xml</name></name>  <operator>|</operator>  <literal type="number">43</literal> <operator>++</operator>
 <operator>...</operator><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>-</operator><name>files</name><operator>/</operator><name>solr</name><operator>/</operator><name>solr</name><operator>-</operator><name><name>solrreporter</name><operator>.</operator><name>xml</name></name> <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>BasicFunctionalityTest</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">17</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>CursorPagingTest</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">22</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><name><name>foMBeanTest</name><operator>.</operator><name>java</name></name> <operator>=</operator><operator>&gt;</operator> <name><name>SolrInfoBeanTest</name><operator>.</operator><name>java</name></name></expr>} |  <expr><literal type="number">22</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>BasicDistributedZkTest</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">24</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>BasicZkTest</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">15</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>CollectionsAPIDistributedZkTest</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">36</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ReplicationFactorTest</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">9</literal> <operator>-</operator>
 <operator>...</operator><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestRandomRequestDistribution</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">19</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>core</name><operator>/</operator><name><name>ExitableDirectoryReaderTest</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">26</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>HdfsDirectoryFactoryTest</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">29</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>MockInfoBean</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">71</literal> <operator>++</operator><operator>+</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>MockInfoMBean</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">69</literal> <operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>MockQuerySenderListenerReqHandler</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">15</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>RequestHandlersTest</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">21</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrCoreTest</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestJmxIntegration</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">94</literal> <operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestJmxMonitoredMap</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">217</literal> <operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestSolrDynamicMBean</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">87</literal> <operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>MBeansHandlerTest</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">14</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>MetricsHandlerTest</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">15</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>StatsReloadRaceTest</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">40</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>SystemInfoHandlerTest</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">8</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>ResourceSharingTestComponent</name><operator>.</operator><name>java</name></name>         <operator>|</operator>   <literal type="number">5</literal> <operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>JvmMetricsTest</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">53</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrCoreMetricManagerTest</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">6</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrMetricManagerTest</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">44</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrMetricReporterTest</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">1</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrMetricTestUtils</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">12</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrMetricsIntegrationTest</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">17</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>reporters</name><operator>/</operator><name><name>SolrGangliaReporterTest</name><operator>.</operator><name>java</name></name>    <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>reporters</name><operator>/</operator><name><name>SolrGraphiteReporterTest</name><operator>.</operator><name>java</name></name>   <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>reporters</name><operator>/</operator><name><name>SolrJmxReporterTest</name><operator>.</operator><name>java</name></name>        <operator>|</operator>  <literal type="number">66</literal> <operator>++</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>reporters</name><operator>/</operator><name><name>SolrSlf4jReporterTest</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrCloudReportersTest</name><operator>.</operator><name>java</name></name>          <operator>|</operator>   <literal type="number">7</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>MockSearchComponent</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">6</literal> <operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestFastLRUCache</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">32</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestIndexSearcher</name><operator>.</operator><name>java</name></name> <operator>|</operator>   <literal type="number">9</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestLFUCache</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">21</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestLRUCache</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">16</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestReRankQParserPlugin</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">15</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSolr4Spatial2</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">11</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><name><name>MBean</name><operator>.</operator><name>java</name></name> <operator>=</operator><operator>&gt;</operator> <name><name>TestSolrFieldCacheBean</name><operator>.</operator><name>java</name></name></expr>} |  <expr_stmt><expr><literal type="number">38</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSolrQueryParser</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">38</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>join</name><operator>/</operator><name><name>BJQParserTest</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">28</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>search</name><operator>/</operator><name>join</name><operator>/</operator><name><name>TestScoreJoinQPScore</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">52</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>store</name><operator>/</operator><name>blockcache</name><operator>/</operator><name><name>BufferStoreTest</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">15</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>util</name><operator>/</operator><name>stats</name><operator>/</operator><name><name>MetricUtilsTest</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">11</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solrj</name><operator>/</operator><name>impl</name><operator>/</operator><name><name>CloudSolrClientTest</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">24</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrTestCaseJ4</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">14</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>cloud</name><operator>/</operator><name><name>AbstractFullDistribZkTestBase</name><operator>.</operator><name>java</name></name>  <operator>|</operator>   <literal type="number">8</literal> <operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>MiniSolrCloudCluster</name><operator>.</operator><name>java</name></name>      <operator>|</operator>   <literal type="number">5</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestHarness</name><operator>.</operator><name>java</name></name>     <operator>|</operator>   <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <name>solr</name><operator>/</operator><name>webapp</name><operator>/</operator><name>web</name><operator>/</operator><name>css</name><operator>/</operator><name>angular</name><operator>/</operator><name><name>plugins</name><operator>.</operator><name>css</name></name>       <operator>|</operator>  <literal type="number">10</literal> <operator>+</operator><operator>-</operator>
 <name>solr</name><operator>/</operator><name>webapp</name><operator>/</operator><name>web</name><operator>/</operator><name>partials</name><operator>/</operator><name><name>plugins</name><operator>.</operator><name>html</name></name>         <operator>|</operator>   <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <literal type="number">155</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">3067</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">2906</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>dev</name><operator>-</operator><name>tools</name><operator>/</operator><name>idea</name><operator>/</operator><operator>.</operator><name>idea</name><operator>/</operator><name>libraries</name><operator>/</operator><name><name>Solr_DIH_core_library</name><operator>.</operator><name>xml</name></name>
 <name>delete</name> <name>mode</name> <literal type="number">100644</literal> <name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>JmxMonitoredMap</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrInfoBean</name><operator>.</operator><name>java</name></name>
 <name>delete</name> <name>mode</name> <literal type="number">100644</literal> <name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrInfoMBean</name><operator>.</operator><name>java</name></name>
 <name>delete</name> <name>mode</name> <literal type="number">100644</literal> <name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrInfoMBeanWrapper</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>AltBufferPoolMetricSet</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>MetricsMap</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name><name>ReporterClientCache</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrFieldCacheBean</name><operator>.</operator><name>java</name></name>
 <name>delete</name> <name>mode</name> <literal type="number">100644</literal> <name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrFieldCacheMBean</name><operator>.</operator><name>java</name></name>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>-</operator><name>files</name><operator>/</operator><name>solr</name><operator>/</operator><name>solr</name><operator>-</operator><name><name>jmxreporter</name><operator>.</operator><name>xml</name></name>
 <name>rename</name> <name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><block>{<expr><name><name>SolrInfoMBeanTest</name><operator>.</operator><name>java</name></name> <operator>=</operator><operator>&gt;</operator> <name><name>SolrInfoBeanTest</name><operator>.</operator><name>java</name></name></expr>}</block> <operator>(</operator><literal type="number">82</literal><operator>%</operator><operator>)</operator>
 <name>create</name> <name>mode</name> <literal type="number">100644</literal> <name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>MockInfoBean</name><operator>.</operator><name>java</name></name>
 <name>delete</name> <name>mode</name> <literal type="number">100644</literal> <name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>MockInfoMBean</name><operator>.</operator><name>java</name></name>
 <name>delete</name> <name>mode</name> <literal type="number">100644</literal> <name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestJmxMonitoredMap</name><operator>.</operator><name>java</name></name>
 <name>delete</name> <name>mode</name> <literal type="number">100644</literal> <name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestSolrDynamicMBean</name><operator>.</operator><name>java</name></name>
 <name>rename</name> <name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><block>{<expr><name><name>TestSolrFieldCacheMBean</name><operator>.</operator><name>java</name></name> <operator>=</operator><operator>&gt;</operator> <name><name>TestSolrFieldCacheBean</name><operator>.</operator><name>java</name></name></expr>}</block> <operator>(</operator><literal type="number">59</literal><operator>%</operator><operator>)</operator>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>dev</name><operator>-</operator><name>tools</name><operator>/</operator><name>idea</name><operator>/</operator><operator>.</operator><name>idea</name><operator>/</operator><name>libraries</name><operator>/</operator><name><name>Solr_DIH_core_library</name><operator>.</operator><name>xml</name></name> <name>b</name><operator>/</operator><name>dev</name><operator>-</operator><name>tools</name><operator>/</operator><name>idea</name><operator>/</operator><operator>.</operator><name>idea</name><operator>/</operator><name>libraries</name><operator>/</operator><name><name>Solr_DIH_core_library</name><operator>.</operator><name>xml</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">00000000000..d363b92ecd0</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>dev</name><operator>-</operator><name>tools</name><operator>/</operator><name>idea</name><operator>/</operator><operator>.</operator><name>idea</name><operator>/</operator><name>libraries</name><operator>/</operator><name><name>Solr_DIH_core_library</name><operator>.</operator><name>xml</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@
<operator>&lt;</operator><name>component</name> <name>name</name><operator>=</operator><literal type="string">"libraryTable"</literal><operator>&gt;</operator>
  <operator>&lt;</operator><name>library</name> <name>name</name><operator>=</operator><literal type="string">"Solr DIH core library"</literal><operator>&gt;</operator>
    <operator>&lt;</operator><name>CLASSES</name><operator>&gt;</operator>
      <operator>&lt;</operator><name>root</name> <name>url</name><operator>=</operator><literal type="string">"file://$PROJECT_DIR$/solr/contrib/dataimporthandler/lib"</literal> <operator>/</operator><operator>&gt;</operator>
    <operator>&lt;</operator><operator>/</operator><name>CLASSES</name><operator>&gt;</operator>
    <operator>&lt;</operator><name>JAVADOC</name> <operator>/</operator><operator>&gt;</operator>
    <operator>&lt;</operator><name>SOURCES</name> <operator>/</operator><operator>&gt;</operator>
    <operator>&lt;</operator><name>jarDirectory</name> <name>url</name><operator>=</operator><literal type="string">"file://$PROJECT_DIR$/solr/contrib/dataimporthandler/lib"</literal> <name>recursive</name><operator>=</operator><literal type="string">"false"</literal> <operator>/</operator><operator>&gt;</operator>
  <operator>&lt;</operator><operator>/</operator><name>library</name><operator>&gt;</operator>
<operator>&lt;</operator><operator>/</operator><name>component</name><operator>&gt;</operator>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>dev</name><operator>-</operator><name>tools</name><operator>/</operator><name>idea</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name><name>dataimporthandler</name><operator>.</operator><name>iml</name></name> <name>b</name><operator>/</operator><name>dev</name><operator>-</operator><name>tools</name><operator>/</operator><name>idea</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name><name>dataimporthandler</name><operator>.</operator><name>iml</name></name>
<name>index</name> <literal type="number">62682476351..8240ff2c8ee</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>dev</name><operator>-</operator><name>tools</name><operator>/</operator><name>idea</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name><name>dataimporthandler</name><operator>.</operator><name>iml</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>dev</name><operator>-</operator><name>tools</name><operator>/</operator><name>idea</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name><name>dataimporthandler</name><operator>.</operator><name>iml</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@
     <operator>&lt;</operator><name>orderEntry</name> <name>type</name><operator>=</operator><literal type="string">"library"</literal> <name>scope</name><operator>=</operator><literal type="string">"TEST"</literal> <name>name</name><operator>=</operator><literal type="string">"HSQLDB"</literal> <name>level</name><operator>=</operator><literal type="string">"project"</literal> <operator>/</operator><operator>&gt;</operator>
     <operator>&lt;</operator><name>orderEntry</name> <name>type</name><operator>=</operator><literal type="string">"library"</literal> <name>scope</name><operator>=</operator><literal type="string">"TEST"</literal> <name>name</name><operator>=</operator><literal type="string">"Derby"</literal> <name>level</name><operator>=</operator><literal type="string">"project"</literal> <operator>/</operator><operator>&gt;</operator>
     <operator>&lt;</operator><name>orderEntry</name> <name>type</name><operator>=</operator><literal type="string">"library"</literal> <name>scope</name><operator>=</operator><literal type="string">"TEST"</literal> <name>name</name><operator>=</operator><literal type="string">"Solr DIH test library"</literal> <name>level</name><operator>=</operator><literal type="string">"project"</literal> <operator>/</operator><operator>&gt;</operator>
    <operator>&lt;</operator><name>orderEntry</name> <name>type</name><operator>=</operator><literal type="string">"library"</literal> <name>scope</name><operator>=</operator><literal type="string">"TEST"</literal> <name>name</name><operator>=</operator><literal type="string">"Solr example library"</literal> <name>level</name><operator>=</operator><literal type="string">"project"</literal> <operator>/</operator><operator>&gt;</operator>
    <operator>&lt;</operator><name>orderEntry</name> <name>type</name><operator>=</operator><literal type="string">"library"</literal> <name>name</name><operator>=</operator><literal type="string">"Solr example library"</literal> <name>level</name><operator>=</operator><literal type="string">"project"</literal> <operator>/</operator><operator>&gt;</operator>
     <operator>&lt;</operator><name>orderEntry</name> <name>type</name><operator>=</operator><literal type="string">"library"</literal> <name>name</name><operator>=</operator><literal type="string">"Solr core library"</literal> <name>level</name><operator>=</operator><literal type="string">"project"</literal> <operator>/</operator><operator>&gt;</operator>
     <operator>&lt;</operator><name>orderEntry</name> <name>type</name><operator>=</operator><literal type="string">"library"</literal> <name>name</name><operator>=</operator><literal type="string">"Solrj library"</literal> <name>level</name><operator>=</operator><literal type="string">"project"</literal> <operator>/</operator><operator>&gt;</operator>
    <operator>&lt;</operator><name>orderEntry</name> <name>type</name><operator>=</operator><literal type="string">"library"</literal> <name>name</name><operator>=</operator><literal type="string">"Solr DIH core library"</literal> <name>level</name><operator>=</operator><literal type="string">"project"</literal> <operator>/</operator><operator>&gt;</operator>
     <operator>&lt;</operator><name>orderEntry</name> <name>type</name><operator>=</operator><literal type="string">"module"</literal> <name>scope</name><operator>=</operator><literal type="string">"TEST"</literal> <name>module</name><operator>-</operator><name>name</name><operator>=</operator><literal type="string">"lucene-test-framework"</literal> <operator>/</operator><operator>&gt;</operator>
     <operator>&lt;</operator><name>orderEntry</name> <name>type</name><operator>=</operator><literal type="string">"module"</literal> <name>scope</name><operator>=</operator><literal type="string">"TEST"</literal> <name>module</name><operator>-</operator><name>name</name><operator>=</operator><literal type="string">"solr-test-framework"</literal> <operator>/</operator><operator>&gt;</operator>
     <operator>&lt;</operator><name>orderEntry</name> <name>type</name><operator>=</operator><literal type="string">"module"</literal> <name>module</name><operator>-</operator><name>name</name><operator>=</operator><literal type="string">"solr-core"</literal> <operator>/</operator><operator>&gt;</operator>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>tools</name><operator>/</operator><name>junit4</name><operator>/</operator><name>cached</name><operator>-</operator><name><name>timehints</name><operator>.</operator><name>txt</name></name> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>tools</name><operator>/</operator><name>junit4</name><operator>/</operator><name>cached</name><operator>-</operator><name><name>timehints</name><operator>.</operator><name>txt</name></name>
<name>index</name> <name>f2b8974a600</name><operator>..</operator><name>cb3da9964d1</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>lucene</name><operator>/</operator><name>tools</name><operator>/</operator><name>junit4</name><operator>/</operator><name>cached</name><operator>-</operator><name><name>timehints</name><operator>.</operator><name>txt</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>lucene</name><operator>/</operator><name>tools</name><operator>/</operator><name>junit4</name><operator>/</operator><name>cached</name><operator>-</operator><name><name>timehints</name><operator>.</operator><name>txt</name></name>
@@ <operator>-</operator><literal type="number">813</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">813</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>EchoParamsTest</name></name><operator>=</operator><literal type="number">136</literal></expr><operator>,</operator><expr><literal type="number">170</literal></expr><operator>,</operator><expr><literal type="number">349</literal></expr><operator>,</operator><expr><literal type="number">124</literal></expr><operator>,</operator><expr><literal type="number">140</literal></expr><operator>,</operator><expr><literal type="number">142</literal></expr><operator>,</operator><expr><literal type="number">284</literal>
 <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>MinimalSchemaTest</name></name><operator>=</operator><literal type="number">304</literal></expr><operator>,</operator><expr><literal type="number">316</literal></expr><operator>,</operator><expr><literal type="number">467</literal></expr><operator>,</operator><expr><literal type="number">304</literal></expr><operator>,</operator><expr><literal type="number">297</literal></expr><operator>,</operator><expr><literal type="number">755</literal></expr><operator>,</operator><expr><literal type="number">309</literal>
 <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>OutputWriterTest</name></name><operator>=</operator><literal type="number">302</literal></expr><operator>,</operator><expr><literal type="number">276</literal></expr><operator>,</operator><expr><literal type="number">265</literal></expr><operator>,</operator><expr><literal type="number">314</literal></expr><operator>,</operator><expr><literal type="number">244</literal></expr><operator>,</operator><expr><literal type="number">211</literal></expr><operator>,</operator><expr><literal type="number">268</literal>
 <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>SampleTest</name></name><operator>=</operator><literal type="number">339</literal></expr><operator>,</operator><expr><literal type="number">290</literal></expr><operator>,</operator><expr><literal type="number">266</literal></expr><operator>,</operator><expr><literal type="number">243</literal></expr><operator>,</operator><expr><literal type="number">333</literal></expr><operator>,</operator><expr><literal type="number">414</literal></expr><operator>,</operator><expr><literal type="number">355</literal>
<name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>SolrInfoMBeanTest</name></name><operator>=</operator><literal type="number">1090</literal></expr><operator>,</operator><expr><literal type="number">1132</literal></expr><operator>,</operator><expr><literal type="number">644</literal></expr><operator>,</operator><expr><literal type="number">629</literal></expr><operator>,</operator><expr><literal type="number">637</literal></expr><operator>,</operator><expr><literal type="number">1023</literal></expr><operator>,</operator><expr><literal type="number">735</literal>
<name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>SolrInfoBeanTest</name></name><operator>=</operator><literal type="number">1090</literal></expr><operator>,</operator><expr><literal type="number">1132</literal></expr><operator>,</operator><expr><literal type="number">644</literal></expr><operator>,</operator><expr><literal type="number">629</literal></expr><operator>,</operator><expr><literal type="number">637</literal></expr><operator>,</operator><expr><literal type="number">1023</literal></expr><operator>,</operator><expr><literal type="number">735</literal>
 <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>TestDistributedGrouping</name></name><operator>=</operator><literal type="number">13095</literal></expr><operator>,</operator><expr><literal type="number">9478</literal></expr><operator>,</operator><expr><literal type="number">8420</literal></expr><operator>,</operator><expr><literal type="number">9633</literal></expr><operator>,</operator><expr><literal type="number">10692</literal></expr><operator>,</operator><expr><literal type="number">9265</literal></expr><operator>,</operator><expr><literal type="number">10893</literal>
 <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>TestDistributedSearch</name></name><operator>=</operator><literal type="number">11199</literal></expr><operator>,</operator><expr><literal type="number">9886</literal></expr><operator>,</operator><expr><literal type="number">16211</literal></expr><operator>,</operator><expr><literal type="number">11367</literal></expr><operator>,</operator><expr><literal type="number">11325</literal></expr><operator>,</operator><expr><literal type="number">10717</literal></expr><operator>,</operator><expr><literal type="number">10392</literal>
 <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>TestDocumentBuilder</name></name><operator>=</operator><literal type="number">10</literal></expr><operator>,</operator><expr><literal type="number">10</literal></expr><operator>,</operator><expr><literal type="number">9</literal></expr><operator>,</operator><expr><literal type="number">13</literal></expr><operator>,</operator><expr><literal type="number">10</literal></expr><operator>,</operator><expr><literal type="number">9</literal></expr><operator>,</operator><expr><literal type="number">10</literal>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<name>index</name> <literal type="number">7752a160c09</literal><operator>..</operator><literal type="number">128e386dec1</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
@@ <operator>-</operator><literal type="number">52</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">52</literal></expr><operator>,</operator><expr><literal type="number">19</literal> @@ <name>Upgrading</name> <name>from</name> <name>Solr</name> <literal type="number">6.x</literal>
 
 <operator>*</operator> <name>Deprecated</name> <name>method</name> <call><name>getNumericType</name><argument_list>()</argument_list></call> <name>has</name> <name>been</name> <name>removed</name> <name>from</name> <name><name>FieldType</name><operator>.</operator> <name>Use</name></name> <call><name>getNumberType</name><argument_list>()</argument_list></call> <name>instead</name>
 
<operator>*</operator> <name>MBean</name> <name>names</name> <name>and</name> <name>attributes</name> <name>now</name> <name>follow</name> <name>hierarchical</name> <name>names</name> <name>used</name> <name>in</name> <name><name>metrics</name><operator>.</operator> <name>This</name></name> <name>is</name> <name>reflected</name> <name>also</name> <name>in</name>
  <operator>/</operator><name>admin</name><operator>/</operator><name>mbeans</name> <name>and</name> <operator>/</operator><name>admin</name><operator>/</operator><name>plugins</name> <name>output</name></expr><operator>,</operator> <expr><name>and</name> <name>can</name> <name>be</name> <name>observed</name> <name>in</name> <name>the</name> <name>UI</name> <name>Plugins</name> <name>tab</name></expr><operator>,</operator> <expr><name>because</name> <name>now</name> <name>all</name> <name>these</name>
  <name>APIs</name> <name>get</name> <name>their</name> <name>data</name> <name>from</name> <name>the</name> <name>metrics</name> <name><name>API</name><operator>.</operator> <name>The</name></name> <call><name>old</name> <argument_list>(<argument><expr><name>mostly</name> <name>flat</name></expr></argument>)</argument_list></call> <name>JMX</name> <name>view</name> <name>has</name> <name>been</name> <name><name>removed</name><operator>.</operator></name>

* <operator>&lt;</operator><name>jmx</name><operator>&gt;</operator> <name>element</name> <name>in</name> <name><name>solrconfig</name><operator>.</operator><name>xml</name></name> <name>is</name> <name>no</name> <name>longer</name> <name><name>supported</name><operator>.</operator> <name>Equivalent</name></name> <name>functionality</name> <name>can</name> <name>be</name> <name>configured</name> <name>in</name>
  <name><name>solr</name><operator>.</operator><name>xml</name></name> <name><name>using</name> <argument_list type="generic">&lt;<argument><name>metrics</name></argument>&gt;</argument_list></name><operator>&lt;</operator><name>reporter</name> <operator>...</operator><operator>&gt;</operator> <name>element</name> <name>and</name> <name>SolrJmxReporter</name> <name><name>implementation</name><operator>.</operator> <name>Limited</name></name> <name>back</name><operator>-</operator><name>compatibility</name>
  <name>is</name> <name>offered</name> <name>by</name> <name>automatically</name> <name>adding</name> <name>a</name> default <name>instance</name> <name>of</name> <name>SolrJmxReporter</name></expr></expr_stmt> <if_stmt><if>if it's missing, AND when a local
  MBean server is found (which can be activated either via ENABLE_REMOTE_JMX_OPTS in solr.in.sh or via system
  properties, eg. -Dcom.sun.management.jmxremote). This default instance exports all Solr metrics from all
  registries as hierarchical MBeans. This behavior can be also disabled by specifying a SolrJmxReporter
  configuration with a boolean init arg "enabled" set to "false". For a more fine-grained control users
  should explicitly specify at least one SolrJmxReporter configuration.

 New Features
 ----------------------
 * SOLR-9857, SOLR-9858: Collect aggregated metrics from nodes and shard leaders in overseer. (ab)
@@ -96,6 +109,10 @@ Other Changes
 * SOLR-10347: Removed index level boost support from "documents" section of the admin UI (Amrit Sarkar via
   TomÃ¡s FernÃ¡ndez LÃ¶bbe)
 
* SOLR-9959: SolrInfoMBean category and hierarchy cleanup. Per-component statistics are now obtained from
  the metrics API, legacy JMX support has been replaced with SolrJmxReporter functionality. Several reporter
  improvements (support for multiple prefix filters, "enabled" flag, reuse of service clients). (ab)

 ----------------------
 
 ==================  6.6.0 ==================
diff --git a/solr/contrib/analytics/src/java/org/apache/solr/analytics/plugin/AnalyticsStatisticsCollector.java b/solr/contrib/analytics/src/java/org/apache/solr/analytics/plugin/AnalyticsStatisticsCollector.java
index b22dcb5bdf4..657768f4ad4 100644
-- a/solr/contrib/analytics/src/java/org/apache/solr/analytics/plugin/AnalyticsStatisticsCollector.java
++ b/solr/contrib/analytics/src/java/org/apache/solr/analytics/plugin/AnalyticsStatisticsCollector.java
@@ -16,11 +16,11 @@
  */
 package org.apache.solr.analytics.plugin;
 
import java.util.HashMap;
import java.util.Map;
 import java.util.concurrent.atomic.AtomicLong;
 
 import com.codahale.metrics.Timer;
import org.apache.solr.common.util.NamedList;
import org.apache.solr.common.util.SimpleOrderedMap;
 import org.apache.solr.util.stats.MetricUtils;
 
 public class AnalyticsStatisticsCollector {
@@ -85,17 +85,20 @@ public class AnalyticsStatisticsCollector {
     currentTimer.stop();
   }
 
  public NamedList&lt;Object&gt; getStatistics() {
    NamedList&lt;Object&gt; lst = new SimpleOrderedMap&lt;&gt;();
    lst.add("requests", numRequests.longValue());
    lst.add("analyticsRequests", numAnalyticsRequests.longValue());
    lst.add("statsRequests", numStatsRequests.longValue());
    lst.add("statsCollected", numCollectedStats.longValue());
    lst.add("fieldFacets", numFieldFacets.longValue());
    lst.add("rangeFacets", numRangeFacets.longValue());
    lst.add("queryFacets", numQueryFacets.longValue());
    lst.add("queriesInQueryFacets", numQueries.longValue());
    MetricUtils.addMetrics(lst, requestTimes);
    return lst;
  public Map&lt;String, Object&gt; getStatistics() {

    Map&lt;String, Object&gt; map = new HashMap&lt;&gt;();
    MetricUtils.convertTimer("", requestTimes, false, false, (k, v) -&gt; {
      map.putAll((Map&lt;String, Object&gt;)v);
    });
    map.put("requests", numRequests.longValue());
    map.put("analyticsRequests", numAnalyticsRequests.longValue());
    map.put("statsRequests", numStatsRequests.longValue());
    map.put("statsCollected", numCollectedStats.longValue());
    map.put("fieldFacets", numFieldFacets.longValue());
    map.put("rangeFacets", numRangeFacets.longValue());
    map.put("queryFacets", numQueryFacets.longValue());
    map.put("queriesInQueryFacets", numQueries.longValue());
    return map;
   }
 }
diff --git a/solr/contrib/analytics/src/java/org/apache/solr/handler/component/AnalyticsComponent.java b/solr/contrib/analytics/src/java/org/apache/solr/handler/component/AnalyticsComponent.java
index f33b6c7a6dc..505533b1cc5 100644
-- a/solr/contrib/analytics/src/java/org/apache/solr/handler/component/AnalyticsComponent.java
++ b/solr/contrib/analytics/src/java/org/apache/solr/handler/component/AnalyticsComponent.java
@@ -22,9 +22,11 @@ import org.apache.solr.analytics.plugin.AnalyticsStatisticsCollector;
 import org.apache.solr.analytics.request.AnalyticsStats;
 import org.apache.solr.analytics.util.AnalyticsParams;
 import org.apache.solr.common.params.SolrParams;
import org.apache.solr.common.util.NamedList;
import org.apache.solr.metrics.MetricsMap;
import org.apache.solr.metrics.SolrMetricManager;
import org.apache.solr.metrics.SolrMetricProducer;
 
public class AnalyticsComponent extends SearchComponent {
public class AnalyticsComponent extends SearchComponent implements SolrMetricProducer {
   public static final String COMPONENT_NAME = "analytics";
   private final AnalyticsStatisticsCollector analyticsCollector = new AnalyticsStatisticsCollector();;
 
@@ -80,12 +82,8 @@ public class AnalyticsComponent extends SearchComponent {
   }
 
   @Override
  public String getVersion() {
    return getClass().getPackage().getSpecificationVersion();
  }

  @Override
  public NamedList getStatistics() {
    return analyticsCollector.getStatistics();
  public void initializeMetrics(SolrMetricManager manager, String registry, String scope) {
    MetricsMap metrics = new MetricsMap((detailed, map) -&gt; map.putAll(analyticsCollector.getStatistics()));
    manager.registerGauge(this, registry, metrics, true, getClass().getSimpleName(), getCategory().toString(), scope);
   }
 }
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImportHandler.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImportHandler.java
index 0766c7f838e..faea3baab18 100644
-- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImportHandler.java
++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImportHandler.java
@@ -26,12 +26,13 @@ import org.apache.solr.common.params.ModifiableSolrParams;
 import org.apache.solr.common.params.SolrParams;
 import org.apache.solr.common.util.ContentStreamBase;
 import org.apache.solr.common.util.NamedList;
import org.apache.solr.common.util.SimpleOrderedMap;
 import org.apache.solr.common.util.ContentStream;
 import org.apache.solr.common.util.StrUtils;
 import org.apache.solr.core.SolrCore;
 import org.apache.solr.core.SolrResourceLoader;
 import org.apache.solr.handler.RequestHandlerBase;
import org.apache.solr.metrics.MetricsMap;
import org.apache.solr.metrics.SolrMetricManager;
 import org.apache.solr.response.RawResponseWriter;
 import org.apache.solr.request.SolrQueryRequest;
 import org.apache.solr.response.SolrQueryResponse;
@@ -74,6 +75,8 @@ public class DataImportHandler extends RequestHandlerBase implements
 
   private String myName = "dataimport";
 
  private MetricsMap metrics;

   private static final String PARAM_WRITER_IMPL = "writerImpl";
   private static final String DEFAULT_WRITER_NAME = "SolrWriter";
 
@@ -260,41 +263,33 @@ public class DataImportHandler extends RequestHandlerBase implements
       };
     }
   }
  
  @Override
  @SuppressWarnings("unchecked")
  public NamedList getStatistics() {
    if (importer == null)
      return super.getStatistics();
 
    DocBuilder.Statistics cumulative = importer.cumulativeStatistics;
    SimpleOrderedMap result = new SimpleOrderedMap();

    result.add("Status", importer.getStatus().toString());
  @Override
  public void initializeMetrics(SolrMetricManager manager, String registryName, String scope) {
    super.initializeMetrics(manager, registryName, scope);
    metrics = new MetricsMap((detailed, map) -&gt; {
      if (importer != null) {
        DocBuilder.Statistics cumulative = importer.cumulativeStatistics;
 
    if (importer.docBuilder != null) {
      DocBuilder.Statistics running = importer.docBuilder.importStatistics;
      result.add("Documents Processed", running.docCount);
      result.add("Requests made to DataSource", running.queryCount);
      result.add("Rows Fetched", running.rowsCount);
      result.add("Documents Deleted", running.deletedDocCount);
      result.add("Documents Skipped", running.skipDocCount);
    }
        map.put("Status", importer.getStatus().toString());
 
    result.add(DataImporter.MSG.TOTAL_DOC_PROCESSED, cumulative.docCount);
    result.add(DataImporter.MSG.TOTAL_QUERIES_EXECUTED, cumulative.queryCount);
    result.add(DataImporter.MSG.TOTAL_ROWS_EXECUTED, cumulative.rowsCount);
    result.add(DataImporter.MSG.TOTAL_DOCS_DELETED, cumulative.deletedDocCount);
    result.add(DataImporter.MSG.TOTAL_DOCS_SKIPPED, cumulative.skipDocCount);
        if (importer.docBuilder != null) {
          DocBuilder.Statistics running = importer.docBuilder.importStatistics;
          map.put("Documents Processed", running.docCount);
          map.put("Requests made to DataSource", running.queryCount);
          map.put("Rows Fetched", running.rowsCount);
          map.put("Documents Deleted", running.deletedDocCount);
          map.put("Documents Skipped", running.skipDocCount);
        }
 
    NamedList requestStatistics = super.getStatistics();
    if (requestStatistics != null) {
      for (int i = 0; i &lt; requestStatistics.size(); i++) {
        result.add(requestStatistics.getName(i), requestStatistics.getVal(i));
        map.put(DataImporter.MSG.TOTAL_DOC_PROCESSED, cumulative.docCount);
        map.put(DataImporter.MSG.TOTAL_QUERIES_EXECUTED, cumulative.queryCount);
        map.put(DataImporter.MSG.TOTAL_ROWS_EXECUTED, cumulative.rowsCount);
        map.put(DataImporter.MSG.TOTAL_DOCS_DELETED, cumulative.deletedDocCount);
        map.put(DataImporter.MSG.TOTAL_DOCS_SKIPPED, cumulative.skipDocCount);
       }
    }

    return result;
    });
    manager.registerGauge(this, registryName, metrics, true, "importer", getCategory().toString(), scope);
   }
 
   // //////////////////////SolrInfoMBeans methods //////////////////////
diff --git a/solr/core/src/java/org/apache/solr/core/CoreContainer.java b/solr/core/src/java/org/apache/solr/core/CoreContainer.java
index 1ef036aa232..f1e28dd76c9 100644
-- a/solr/core/src/java/org/apache/solr/core/CoreContainer.java
++ b/solr/core/src/java/org/apache/solr/core/CoreContainer.java
@@ -81,6 +81,7 @@ import org.apache.solr.metrics.SolrCoreMetricManager;
 import org.apache.solr.metrics.SolrMetricManager;
 import org.apache.solr.metrics.SolrMetricProducer;
 import org.apache.solr.request.SolrRequestHandler;
import org.apache.solr.search.SolrFieldCacheBean;
 import org.apache.solr.security.AuthenticationPlugin;
 import org.apache.solr.security.AuthorizationPlugin;
 import org.apache.solr.security.HttpClientBuilderPlugin;
@@ -482,18 +483,18 @@ public class CoreContainer {
     metricManager = new SolrMetricManager();
 
     coreContainerWorkExecutor = MetricUtils.instrumentedExecutorService(
        coreContainerWorkExecutor,
        metricManager.registry(SolrMetricManager.getRegistryName(SolrInfoMBean.Group.node)),
        SolrMetricManager.mkName("coreContainerWorkExecutor", SolrInfoMBean.Category.CONTAINER.toString(), "threadPool"));
        coreContainerWorkExecutor, null,
        metricManager.registry(SolrMetricManager.getRegistryName(SolrInfoBean.Group.node)),
        SolrMetricManager.mkName("coreContainerWorkExecutor", SolrInfoBean.Category.CONTAINER.toString(), "threadPool"));
 
     shardHandlerFactory = ShardHandlerFactory.newInstance(cfg.getShardHandlerFactoryPluginInfo(), loader);
     if (shardHandlerFactory instanceof SolrMetricProducer) {
       SolrMetricProducer metricProducer = (SolrMetricProducer) shardHandlerFactory;
      metricProducer.initializeMetrics(metricManager, SolrInfoMBean.Group.node.toString(), "httpShardHandler");
      metricProducer.initializeMetrics(metricManager, SolrInfoBean.Group.node.toString(), "httpShardHandler");
     }
 
     updateShardHandler = new UpdateShardHandler(cfg.getUpdateShardHandlerConfig());
    updateShardHandler.initializeMetrics(metricManager, SolrInfoMBean.Group.node.toString(), "updateShardHandler");
    updateShardHandler.initializeMetrics(metricManager, SolrInfoBean.Group.node.toString(), "updateShardHandler");
 
     transientCoreCache = TransientSolrCoreCacheFactory.newInstance(loader, this);
 
@@ -520,14 +521,14 @@ public class CoreContainer {
     // may want to add some configuration here in the future
     metricsCollectorHandler.init(null);
     containerHandlers.put(AUTHZ_PATH, securityConfHandler);
    securityConfHandler.initializeMetrics(metricManager, SolrInfoMBean.Group.node.toString(), AUTHZ_PATH);
    securityConfHandler.initializeMetrics(metricManager, SolrInfoBean.Group.node.toString(), AUTHZ_PATH);
     containerHandlers.put(AUTHC_PATH, securityConfHandler);
     if(pkiAuthenticationPlugin != null)
       containerHandlers.put(PKIAuthenticationPlugin.PATH, pkiAuthenticationPlugin.getRequestHandler());
 
    metricManager.loadReporters(cfg.getMetricReporterPlugins(), loader, null, SolrInfoMBean.Group.node);
    metricManager.loadReporters(cfg.getMetricReporterPlugins(), loader, null, SolrInfoMBean.Group.jvm);
    metricManager.loadReporters(cfg.getMetricReporterPlugins(), loader, null, SolrInfoMBean.Group.jetty);
    metricManager.loadReporters(cfg.getMetricReporterPlugins(), loader, null, SolrInfoBean.Group.node);
    metricManager.loadReporters(cfg.getMetricReporterPlugins(), loader, null, SolrInfoBean.Group.jvm);
    metricManager.loadReporters(cfg.getMetricReporterPlugins(), loader, null, SolrInfoBean.Group.jetty);
 
     coreConfigService = ConfigSetService.createConfigSetService(cfg, loader, zkSys.zkController);
 
@@ -535,17 +536,25 @@ public class CoreContainer {
 
     // initialize gauges for reporting the number of cores and disk total/free
 
    String registryName = SolrMetricManager.getRegistryName(SolrInfoMBean.Group.node);
    metricManager.registerGauge(registryName, () -&gt; solrCores.getCores().size(),
        true, "loaded", SolrInfoMBean.Category.CONTAINER.toString(), "cores");
    metricManager.registerGauge(registryName, () -&gt; solrCores.getLoadedCoreNames().size() - solrCores.getCores().size(),
        true, "lazy",SolrInfoMBean.Category.CONTAINER.toString(), "cores");
    metricManager.registerGauge(registryName, () -&gt; solrCores.getAllCoreNames().size() - solrCores.getLoadedCoreNames().size(),
        true, "unloaded",SolrInfoMBean.Category.CONTAINER.toString(), "cores");
    metricManager.registerGauge(registryName, () -&gt; cfg.getCoreRootDirectory().toFile().getTotalSpace(),
        true, "totalSpace", SolrInfoMBean.Category.CONTAINER.toString(), "fs");
    metricManager.registerGauge(registryName, () -&gt; cfg.getCoreRootDirectory().toFile().getUsableSpace(),
        true, "usableSpace", SolrInfoMBean.Category.CONTAINER.toString(), "fs");
    String registryName = SolrMetricManager.getRegistryName(SolrInfoBean.Group.node);
    metricManager.registerGauge(null, registryName, () -&gt; solrCores.getCores().size(),
        true, "loaded", SolrInfoBean.Category.CONTAINER.toString(), "cores");
    metricManager.registerGauge(null, registryName, () -&gt; solrCores.getLoadedCoreNames().size() - solrCores.getCores().size(),
        true, "lazy", SolrInfoBean.Category.CONTAINER.toString(), "cores");
    metricManager.registerGauge(null, registryName, () -&gt; solrCores.getAllCoreNames().size() - solrCores.getLoadedCoreNames().size(),
        true, "unloaded", SolrInfoBean.Category.CONTAINER.toString(), "cores");
    metricManager.registerGauge(null, registryName, () -&gt; cfg.getCoreRootDirectory().toFile().getTotalSpace(),
        true, "totalSpace", SolrInfoBean.Category.CONTAINER.toString(), "fs");
    metricManager.registerGauge(null, registryName, () -&gt; cfg.getCoreRootDirectory().toFile().getUsableSpace(),
        true, "usableSpace", SolrInfoBean.Category.CONTAINER.toString(), "fs");
    // add version information
    metricManager.registerGauge(null, registryName, () -&gt; this.getClass().getPackage().getSpecificationVersion(),
        true, "specification", SolrInfoBean.Category.CONTAINER.toString(), "version");
    metricManager.registerGauge(null, registryName, () -&gt; this.getClass().getPackage().getImplementationVersion(),
        true, "implementation", SolrInfoBean.Category.CONTAINER.toString(), "version");

    SolrFieldCacheBean fieldCacheBean = new SolrFieldCacheBean();
    fieldCacheBean.initializeMetrics(metricManager, registryName, null);
 
     if (isZooKeeperAware()) {
       metricManager.loadClusterReporters(cfg.getMetricReporterPlugins(), this);
@@ -555,9 +564,9 @@ public class CoreContainer {
     ExecutorService coreLoadExecutor = MetricUtils.instrumentedExecutorService(
         ExecutorUtil.newMDCAwareFixedThreadPool(
             cfg.getCoreLoadThreadCount(isZooKeeperAware()),
            new DefaultSolrThreadFactory("coreLoadExecutor")),
        metricManager.registry(SolrMetricManager.getRegistryName(SolrInfoMBean.Group.node)),
        SolrMetricManager.mkName("coreLoadExecutor",SolrInfoMBean.Category.CONTAINER.toString(), "threadPool"));
            new DefaultSolrThreadFactory("coreLoadExecutor")), null,
        metricManager.registry(SolrMetricManager.getRegistryName(SolrInfoBean.Group.node)),
        SolrMetricManager.mkName("coreLoadExecutor", SolrInfoBean.Category.CONTAINER.toString(), "threadPool"));
     final List&lt;Future&lt;SolrCore&gt;&gt; futures = new ArrayList&lt;&gt;();
     try {
       List&lt;CoreDescriptor&gt; cds = coresLocator.discover(this);
@@ -685,14 +694,16 @@ public class CoreContainer {
 
     ExecutorUtil.shutdownAndAwaitTermination(coreContainerWorkExecutor);
     if (metricManager != null) {
      metricManager.closeReporters(SolrMetricManager.getRegistryName(SolrInfoMBean.Group.node));
      metricManager.closeReporters(SolrMetricManager.getRegistryName(SolrInfoBean.Group.node));
      metricManager.closeReporters(SolrMetricManager.getRegistryName(SolrInfoBean.Group.jvm));
      metricManager.closeReporters(SolrMetricManager.getRegistryName(SolrInfoBean.Group.jetty));
     }
 
     if (isZooKeeperAware()) {
       cancelCoreRecoveries();
       zkSys.zkController.publishNodeAsDown(zkSys.zkController.getNodeName());
       if (metricManager != null) {
        metricManager.closeReporters(SolrMetricManager.getRegistryName(SolrInfoMBean.Group.cluster));
        metricManager.closeReporters(SolrMetricManager.getRegistryName(SolrInfoBean.Group.cluster));
       }
     }
 
@@ -1058,7 +1069,7 @@ public class CoreContainer {
   private void resetIndexDirectory(CoreDescriptor dcore, ConfigSet coreConfig) {
     SolrConfig config = coreConfig.getSolrConfig();
 
    String registryName = SolrMetricManager.getRegistryName(SolrInfoMBean.Group.core, dcore.getName());
    String registryName = SolrMetricManager.getRegistryName(SolrInfoBean.Group.core, dcore.getName());
     DirectoryFactory df = DirectoryFactory.loadDirectoryFactory(config, this, registryName);
     String dataDir = SolrCore.findDataDir(df, null, config, dcore);
 
@@ -1376,7 +1387,7 @@ public class CoreContainer {
       containerHandlers.put(path, (SolrRequestHandler)handler);
     }
     if (handler instanceof SolrMetricProducer) {
      ((SolrMetricProducer)handler).initializeMetrics(metricManager, SolrInfoMBean.Group.node.toString(), path);
      ((SolrMetricProducer)handler).initializeMetrics(metricManager, SolrInfoBean.Group.node.toString(), path);
     }
     return handler;
   }
diff --git a/solr/core/src/java/org/apache/solr/core/DirectoryFactory.java b/solr/core/src/java/org/apache/solr/core/DirectoryFactory.java
index cc24e6c6ab3..20824ab29c5 100644
-- a/solr/core/src/java/org/apache/solr/core/DirectoryFactory.java
++ b/solr/core/src/java/org/apache/solr/core/DirectoryFactory.java
@@ -24,7 +24,6 @@ import java.io.IOException;
 import java.lang.invoke.MethodHandles;
 import java.nio.file.NoSuchFileException;
 import java.util.Arrays;
import java.util.Collection;
 import java.util.Collections;
 import java.util.List;
 
@@ -321,13 +320,6 @@ public abstract class DirectoryFactory implements NamedListInitializedPlugin,
     return cd.getInstanceDir().resolve(cd.getDataDir()).toAbsolutePath().toString();
   }
 
  /**
   * Optionally allow the DirectoryFactory to request registration of some MBeans.
   */
  public Collection&lt;SolrInfoMBean&gt; offerMBeans() {
    return Collections.emptySet();
  }

   public void cleanupOldIndexDirectories(final String dataDirPath, final String currentIndexDirPath, boolean afterCoreReload) {
     File dataDir = new File(dataDirPath);
     if (!dataDir.isDirectory()) {
diff --git a/solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory.java b/solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory.java
index db953d38b1e..754fed3be3d 100644
-- a/solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory.java
++ b/solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory.java
@@ -22,7 +22,6 @@ import java.io.IOException;
 import java.lang.invoke.MethodHandles;
 import java.net.URLEncoder;
 import java.util.ArrayList;
import java.util.Arrays;
 import java.util.Collection;
 import java.util.Collections;
 import java.util.List;
@@ -51,6 +50,8 @@ import org.apache.solr.common.SolrException.ErrorCode;
 import org.apache.solr.common.params.SolrParams;
 import org.apache.solr.common.util.IOUtils;
 import org.apache.solr.common.util.NamedList;
import org.apache.solr.metrics.SolrMetricManager;
import org.apache.solr.metrics.SolrMetricProducer;
 import org.apache.solr.store.blockcache.BlockCache;
 import org.apache.solr.store.blockcache.BlockDirectory;
 import org.apache.solr.store.blockcache.BlockDirectoryCache;
@@ -70,7 +71,7 @@ import com.google.common.cache.CacheBuilder;
 import com.google.common.cache.RemovalListener;
 import com.google.common.cache.RemovalNotification;
 
public class HdfsDirectoryFactory extends CachingDirectoryFactory implements SolrCoreAware {
public class HdfsDirectoryFactory extends CachingDirectoryFactory implements SolrCoreAware, SolrMetricProducer {
   private static final Logger LOG = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());
   
   public static final String BLOCKCACHE_SLAB_COUNT = "solr.hdfs.blockcache.slab.count";
@@ -493,8 +494,9 @@ public class HdfsDirectoryFactory extends CachingDirectoryFactory implements Sol
   }
 
   @Override
  public Collection&lt;SolrInfoMBean&gt; offerMBeans() {
    return Arrays.&lt;SolrInfoMBean&gt;asList(MetricsHolder.metrics, LocalityHolder.reporter);
  public void initializeMetrics(SolrMetricManager manager, String registry, String scope) {
    MetricsHolder.metrics.initializeMetrics(manager, registry, scope);
    LocalityHolder.reporter.initializeMetrics(manager, registry, scope);
   }
 
   @Override
diff --git a/solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.java b/solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.java
deleted file mode 100644
index 4fb0dcd4d63..00000000000
-- a/solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.java
++ /dev/null
@@ -1,478 +0,0 @@
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.solr.core;

import javax.management.Attribute;
import javax.management.AttributeList;
import javax.management.AttributeNotFoundException;
import javax.management.DynamicMBean;
import javax.management.InstanceNotFoundException;
import javax.management.InvalidAttributeValueException;
import javax.management.MBeanAttributeInfo;
import javax.management.MBeanException;
import javax.management.MBeanInfo;
import javax.management.MBeanServer;
import javax.management.MBeanServerFactory;
import javax.management.MalformedObjectNameException;
import javax.management.ObjectName;
import javax.management.Query;
import javax.management.QueryExp;
import javax.management.ReflectionException;
import javax.management.openmbean.OpenMBeanAttributeInfoSupport;
import javax.management.openmbean.OpenType;
import javax.management.openmbean.SimpleType;
import javax.management.remote.JMXConnectorServer;
import javax.management.remote.JMXConnectorServerFactory;
import javax.management.remote.JMXServiceURL;
import java.lang.invoke.MethodHandles;
import java.lang.reflect.Field;
import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Hashtable;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.concurrent.ConcurrentHashMap;

import org.apache.lucene.store.AlreadyClosedException;
import org.apache.solr.common.SolrException;
import org.apache.solr.common.util.NamedList;
import org.apache.solr.core.SolrConfig.JmxConfiguration;
import org.apache.solr.metrics.reporters.JmxObjectNameFactory;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import static org.apache.solr.common.params.CommonParams.ID;
import static org.apache.solr.common.params.CommonParams.NAME;

/**
 * &lt;p&gt;
 * Responsible for finding (or creating) a MBeanServer from given configuration
 * and registering all SolrInfoMBean objects with JMX.
 * &lt;/p&gt;
 * &lt;p&gt;
 * Please see http://wiki.apache.org/solr/SolrJmx for instructions on usage and configuration
 * &lt;/p&gt;
 *
 *
 * @see org.apache.solr.core.SolrConfig.JmxConfiguration
 * @since solr 1.3
 */
public class JmxMonitoredMap&lt;K, V&gt; extends
        ConcurrentHashMap&lt;String, SolrInfoMBean&gt; {
  private static final Logger log = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());

  private static final String REPORTER_NAME = "_jmx_";

  // set to true to use cached statistics NamedLists between getMBeanInfo calls to work
  // around over calling getStatistics on MBeanInfos when iterating over all attributes (SOLR-6586)
  private final boolean useCachedStatsBetweenGetMBeanInfoCalls = Boolean.getBoolean("useCachedStatsBetweenGetMBeanInfoCalls");
  
  private final MBeanServer server;

  private final String jmxRootName;

  private final String coreHashCode;

  private final JmxObjectNameFactory nameFactory;

  private final String registryName;

  public JmxMonitoredMap(String coreName, String coreHashCode, String registryName,
                         final JmxConfiguration jmxConfig) {
    this.coreHashCode = coreHashCode;
    this.registryName = registryName;
    jmxRootName = (null != jmxConfig.rootName ?
                   jmxConfig.rootName
                   : ("solr" + (null != coreName ? "/" + coreName : "")));
      
    if (jmxConfig.serviceUrl == null) {
      List&lt;MBeanServer&gt; servers = null;

      if (jmxConfig.agentId == null) {
        // Try to find the first MBeanServer
        servers = MBeanServerFactory.findMBeanServer(null);
      } else if (jmxConfig.agentId != null) {
        // Try to find the first MBean server with the given agentId
        servers = MBeanServerFactory.findMBeanServer(jmxConfig.agentId);
        // throw Exception if no servers were found with the given agentId
        if (servers == null || servers.isEmpty())
          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,
                  "No JMX Servers found with agentId: " + jmxConfig.agentId);
      }

      if (servers == null || servers.isEmpty()) {
        server = null;
        nameFactory = null;
        log.debug("No JMX servers found, not exposing Solr information with JMX.");
        return;
      }
      server = servers.get(0);
      log.info("JMX monitoring is enabled. Adding Solr mbeans to JMX Server: "
               + server);
    } else {
      MBeanServer newServer = null;
      try {
        // Create a new MBeanServer with the given serviceUrl
        newServer = MBeanServerFactory.newMBeanServer();
        JMXConnectorServer connector = JMXConnectorServerFactory
                .newJMXConnectorServer(new JMXServiceURL(jmxConfig.serviceUrl),
                        null, newServer);
        connector.start();
        log.info("JMX monitoring is enabled at " + jmxConfig.serviceUrl);
      } catch (Exception e) {
        // Release the reference
        throw new RuntimeException("Could not start JMX monitoring ", e);
      }
      server = newServer;
    }
    nameFactory = new JmxObjectNameFactory(REPORTER_NAME + coreHashCode, registryName);
  }

  /**
   * Clears the map and unregisters all SolrInfoMBeans in the map from
   * MBeanServer
   */
  @Override
  public void clear() {
    if (server != null) {
      QueryExp exp = Query.or(Query.eq(Query.attr("coreHashCode"), Query.value(coreHashCode)),
                            Query.eq(Query.attr("reporter"), Query.value(REPORTER_NAME + coreHashCode)));
      
      Set&lt;ObjectName&gt; objectNames = null;
      try {
        objectNames = server.queryNames(null, exp);
      } catch (Exception e) {
        log.warn("Exception querying for mbeans", e);
      }
      
      if (objectNames != null)  {
        for (ObjectName name : objectNames) {
          try {
            server.unregisterMBean(name);
          } catch (InstanceNotFoundException ie) {
            // ignore - someone else already deleted this one
          } catch (Exception e) {
            log.warn("Exception un-registering mbean {}", name, e);
          }
        }
      }
    }

    super.clear();
  }

  /**
   * Adds the SolrInfoMBean to the map and registers the given SolrInfoMBean
   * instance with the MBeanServer defined for this core. If a SolrInfoMBean is
   * already registered with the MBeanServer then it is unregistered and then
   * re-registered.
   *
   * @param key      the JMX type name for this SolrInfoMBean
   * @param infoBean the SolrInfoMBean instance to be registered
   */
  @Override
  public SolrInfoMBean put(String key, SolrInfoMBean infoBean) {
    if (server != null &amp;&amp; infoBean != null) {
      try {
        // back-compat name
        ObjectName name = getObjectName(key, infoBean);
        if (server.isRegistered(name))
          server.unregisterMBean(name);
        SolrDynamicMBean mbean = new SolrDynamicMBean(coreHashCode, infoBean, useCachedStatsBetweenGetMBeanInfoCalls);
        server.registerMBean(mbean, name);
        // now register it also under new name
        String beanName = createBeanName(infoBean, key);
        name = nameFactory.createName(null, registryName, beanName);
        if (server.isRegistered(name))
          server.unregisterMBean(name);
        server.registerMBean(mbean, name);
      } catch (Exception e) {
        log.warn( "Failed to register info bean: key=" + key + ", infoBean=" + infoBean, e);
      }
    }

    return super.put(key, infoBean);
  }

  private String createBeanName(SolrInfoMBean infoBean, String key) {
    if (infoBean.getCategory() == null) {
      throw new IllegalArgumentException("SolrInfoMBean.category must never be null: " + infoBean);
    }
    StringBuilder sb = new StringBuilder();
    sb.append(infoBean.getCategory().toString());
    sb.append('.');
    sb.append(key);
    sb.append('.');
    sb.append(infoBean.getName());
    return sb.toString();
  }

  /**
   * Removes the SolrInfoMBean object at the given key and unregisters it from
   * MBeanServer
   *
   * @param key the JMX type name for this SolrInfoMBean
   */
  @Override
  public SolrInfoMBean remove(Object key) {
    SolrInfoMBean infoBean = get(key);
    if (infoBean != null) {
      try {
        unregister((String) key, infoBean);
      } catch (RuntimeException e) {
        log.warn( "Failed to unregister info bean: " + key, e);
      }
    }
    return super.remove(key);
  }

  private void unregister(String key, SolrInfoMBean infoBean) {
    if (server == null)
      return;

    try {
      // remove legacy name
      ObjectName name = getObjectName(key, infoBean);
      if (server.isRegistered(name) &amp;&amp; coreHashCode.equals(server.getAttribute(name, "coreHashCode"))) {
        server.unregisterMBean(name);
      }
      // remove new name
      String beanName = createBeanName(infoBean, key);
      name = nameFactory.createName(null, registryName, beanName);
      if (server.isRegistered(name)) {
        server.unregisterMBean(name);
      }
    } catch (Exception e) {
      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,
              "Failed to unregister info bean: " + key, e);
    }
  }

  private ObjectName getObjectName(String key, SolrInfoMBean infoBean)
          throws MalformedObjectNameException {
    Hashtable&lt;String, String&gt; map = new Hashtable&lt;&gt;();
    map.put("type", key);
    if (infoBean.getName() != null &amp;&amp; !"".equals(infoBean.getName())) {
      map.put(ID, infoBean.getName());
    }
    return ObjectName.getInstance(jmxRootName, map);
  }

  /** For test verification */
  public MBeanServer getServer() {
    return server;
  }

  /**
   * DynamicMBean is used to dynamically expose all SolrInfoMBean
   * getStatistics() NameList keys as String getters.
   */
  static class SolrDynamicMBean implements DynamicMBean {
    private SolrInfoMBean infoBean;

    private HashSet&lt;String&gt; staticStats;

    private String coreHashCode;
    
    private volatile NamedList cachedDynamicStats;
    
    private boolean useCachedStatsBetweenGetMBeanInfoCalls;
    
    public SolrDynamicMBean(String coreHashCode, SolrInfoMBean managedResource) {
      this(coreHashCode, managedResource, false);
    }

    public SolrDynamicMBean(String coreHashCode, SolrInfoMBean managedResource, boolean useCachedStatsBetweenGetMBeanInfoCalls) {
      this.useCachedStatsBetweenGetMBeanInfoCalls = useCachedStatsBetweenGetMBeanInfoCalls;
      if (managedResource instanceof JmxAugmentedSolrInfoMBean) {
        final JmxAugmentedSolrInfoMBean jmxSpecific = (JmxAugmentedSolrInfoMBean)managedResource;
        this.infoBean = new SolrInfoMBeanWrapper(jmxSpecific) {
          @Override
          public NamedList getStatistics() { return jmxSpecific.getStatisticsForJmx(); }
        };
      } else {
        this.infoBean = managedResource;
      }
      staticStats = new HashSet&lt;&gt;();

      // For which getters are already available in SolrInfoMBean
      staticStats.add(NAME);
      staticStats.add("version");
      staticStats.add("description");
      staticStats.add("category");
      staticStats.add("source");
      this.coreHashCode = coreHashCode;
    }

    @Override
    public MBeanInfo getMBeanInfo() {
      ArrayList&lt;MBeanAttributeInfo&gt; attrInfoList = new ArrayList&lt;&gt;();

      for (String stat : staticStats) {
        attrInfoList.add(new MBeanAttributeInfo(stat, String.class.getName(),
                null, true, false, false));
      }

      // add core's hashcode
      attrInfoList.add<condition>(<expr><operator>new</operator> <call><name>MBeanAttributeInfo</name><argument_list>(<argument><expr><literal type="string">"coreHashCode"</literal></expr></argument>, <argument><expr><call><name><name>String</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>,
                <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content><empty_stmt>;</empty_stmt></block_content></block></if></if_stmt>

      <try>try <block>{<block_content>
        <decl_stmt><decl><type><name>NamedList</name></type> <name>dynamicStats</name> <init>= <expr><call><name><name>infoBean</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        
        <if_stmt><if>if <condition>(<expr><name>useCachedStatsBetweenGetMBeanInfoCalls</name></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><name>cachedDynamicStats</name> <operator>=</operator> <name>dynamicStats</name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        
        <if_stmt><if>if <condition>(<expr><name>dynamicStats</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>dynamicStats</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
            <decl_stmt><decl><type><name>String</name></type> <name>name</name> <init>= <expr><call><name><name>dynamicStats</name><operator>.</operator><name>getName</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt><if>if <condition>(<expr><call><name><name>staticStats</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
              <continue>continue;</continue>
            </block_content>}</block></if></if_stmt>
            <decl_stmt><decl><type><name>Class</name></type> <name>type</name> <init>= <expr><call><name><name>dynamicStats</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getClass</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>OpenType</name></type> <name>typeBox</name> <init>= <expr><call><name>determineType</name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt><if>if <condition>(<expr><call><name><name>type</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>String</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call> <operator>||</operator> <name>typeBox</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
              <expr_stmt><expr><call><name><name>attrInfoList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>MBeanAttributeInfo</name><argument_list>(<argument><expr><call><name><name>dynamicStats</name><operator>.</operator><name>getName</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>,
                  <argument><expr><call><name><name>String</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if> <else>else <block>{<block_content>
              <expr_stmt><expr><call><name><name>attrInfoList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>OpenMBeanAttributeInfoSupport</name><argument_list>(
                  <argument><expr><call><name><name>dynamicStats</name><operator>.</operator><name>getName</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>dynamicStats</name><operator>.</operator><name>getName</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>typeBox</name></expr></argument>,
                  <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
          </block_content>}</block></for>
        </block_content>}</block></if></if_stmt>
      </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <comment type="line">// don't log issue if the core is closing</comment>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><call><name><name>SolrException</name><operator>.</operator><name>getRootCause</name></name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call> <operator>instanceof</operator> <name>AlreadyClosedException</name><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
          <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Could not getStatistics on info bean {}"</literal></expr></argument>, <argument><expr><call><name><name>infoBean</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
      </block_content>}</block></catch></try>

      <decl_stmt><decl><type><name><name>MBeanAttributeInfo</name><index>[]</index></name></type> <name>attrInfoArr</name> <init>= <expr><call><name><name>attrInfoList</name>
              <operator>.</operator><name>toArray</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>MBeanAttributeInfo</name><index>[<expr><call><name><name>attrInfoList</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <return>return <expr><operator>new</operator> <call><name>MBeanInfo</name><argument_list>(<argument><expr><call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getName</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>infoBean</name>
              <operator>.</operator><name>getDescription</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>attrInfoArr</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</return>
    }

    private <function><type><name>OpenType</name></type> <name>determineType</name><parameter_list>(<parameter><decl><type><name>Class</name></type> <name>type</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <try>try <block>{<block_content>
        <for>for <control>(<init><decl><type><name>Field</name></type> <name>field</name> <range>: <expr><call><name><name>SimpleType</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getFields</name></name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
          <if_stmt><if>if <condition>(<expr><call><name><name>field</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name><name>SimpleType</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
            <decl_stmt><decl><type><name>SimpleType</name></type> <name>candidate</name> <init>= <expr><operator>(</operator><name>SimpleType</name><operator>)</operator> <call><name><name>field</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>SimpleType</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt><if>if <condition>(<expr><call><name><name>candidate</name><operator>.</operator><name>getTypeName</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><call><name><name>type</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
              <return>return <expr><name>candidate</name></expr>;</return>
            </block_content>}</block></if></if_stmt>
          </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
      </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
      </block_content>}</block></catch></try>
      <return>return <expr><literal type="null">null</literal></expr>;</return>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>Object</name></type> <name>getAttribute</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>attribute</name></decl></parameter>)</parameter_list>
            <throws>throws <argument><expr><name>AttributeNotFoundException</name></expr></argument>, <argument><expr><name>MBeanException</name></expr></argument>, <argument><expr><name>ReflectionException</name></expr></argument></throws> <block>{<block_content>
      <decl_stmt><decl><type><name>Object</name></type> <name>val</name></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><literal type="string">"coreHashCode"</literal><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>attribute</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>val</name> <operator>=</operator> <name>coreHashCode</name></expr>;</expr_stmt>
      </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name><name>staticStats</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><name>attribute</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <name>attribute</name> <operator>!=</operator> <literal type="null">null</literal>
              <operator>&amp;&amp;</operator> <call><name><name>attribute</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
        <try>try <block>{<block_content>
          <decl_stmt><decl><type><name>String</name></type> <name>getter</name> <init>= <expr><literal type="string">"get"</literal> <operator>+</operator> <call><name><name>attribute</name><operator>.</operator><name>substring</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toUpperCase</name><argument_list>(<argument><expr><name><name>Locale</name><operator>.</operator><name>ROOT</name></name></expr></argument>)</argument_list></call>
                  <operator>+</operator> <call><name><name>attribute</name><operator>.</operator><name>substring</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <decl_stmt><decl><type><name>Method</name></type> <name>meth</name> <init>= <expr><call><name><name>infoBean</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getMethod</name><argument_list>(<argument><expr><name>getter</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <expr_stmt><expr><name>val</name> <operator>=</operator> <call><name><name>meth</name><operator>.</operator><name>invoke</name></name><argument_list>(<argument><expr><name>infoBean</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
          <throw>throw <expr><operator>new</operator> <call><name>AttributeNotFoundException</name><argument_list>(<argument><expr><name>attribute</name></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></catch></try>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <decl_stmt><decl><type><name>NamedList</name></type> <name>stats</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><name>useCachedStatsBetweenGetMBeanInfoCalls</name></expr>)</condition> <block>{<block_content>
          <decl_stmt><decl><type><name>NamedList</name></type> <name>cachedStats</name> <init>= <expr><name><name>this</name><operator>.</operator><name>cachedDynamicStats</name></name></expr></init></decl>;</decl_stmt>
          <if_stmt><if>if <condition>(<expr><name>cachedStats</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><name>stats</name> <operator>=</operator> <name>cachedStats</name></expr>;</expr_stmt>
          </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt><if>if <condition>(<expr><name>stats</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><name>stats</name> <operator>=</operator> <call><name><name>infoBean</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt><expr><name>val</name> <operator>=</operator> <call><name><name>stats</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>attribute</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></else></if_stmt>

      <if_stmt><if>if <condition>(<expr><name>val</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <comment type="line">// It's String or one of the simple types, just return it as JMX suggests direct support for such types</comment>
        <for>for <control>(<init><decl><type><name>String</name></type> <name>simpleTypeName</name> <range>: <expr><name><name>SimpleType</name><operator>.</operator><name>ALLOWED_CLASSNAMES_LIST</name></name></expr></range></decl></init>)</control> <block>{<block_content>
          <if_stmt><if>if <condition>(<expr><call><name><name>val</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getName</name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>simpleTypeName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
            <return>return <expr><name>val</name></expr>;</return>
          </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
        <comment type="line">// It's an arbitrary object which could be something complex and odd, return its toString, assuming that is</comment>
        <comment type="line">// a workable representation of the object</comment>
        <return>return <expr><call><name><name>val</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr>;</return>
      </block_content>}</block></if></if_stmt>
      <return>return <expr><literal type="null">null</literal></expr>;</return>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>AttributeList</name></type> <name>getAttributes</name><parameter_list>(<parameter><decl><type><name><name>String</name><index>[]</index></name></type> <name>attributes</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <decl_stmt><decl><type><name>AttributeList</name></type> <name>list</name> <init>= <expr><operator>new</operator> <call><name>AttributeList</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <for>for <control>(<init><decl><type><name>String</name></type> <name>attribute</name> <range>: <expr><name>attributes</name></expr></range></decl></init>)</control> <block>{<block_content>
        <try>try <block>{<block_content>
          <expr_stmt><expr><call><name><name>list</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Attribute</name><argument_list>(<argument><expr><name>attribute</name></expr></argument>, <argument><expr><call><name>getAttribute</name><argument_list>(<argument><expr><name>attribute</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
          <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Could not get attribute "</literal> <operator>+</operator> <name>attribute</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></catch></try>
      </block_content>}</block></for>

      <return>return <expr><name>list</name></expr>;</return>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>setAttribute</name><parameter_list>(<parameter><decl><type><name>Attribute</name></type> <name>attribute</name></decl></parameter>)</parameter_list>
            <throws>throws <argument><expr><name>AttributeNotFoundException</name></expr></argument>, <argument><expr><name>InvalidAttributeValueException</name></expr></argument>,
            <argument><expr><name>MBeanException</name></expr></argument>, <argument><expr><name>ReflectionException</name></expr></argument></throws> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>UnsupportedOperationException</name><argument_list>(<argument><expr><literal type="string">"Operation not Supported"</literal></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>AttributeList</name></type> <name>setAttributes</name><parameter_list>(<parameter><decl><type><name>AttributeList</name></type> <name>attributes</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>UnsupportedOperationException</name><argument_list>(<argument><expr><literal type="string">"Operation not Supported"</literal></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>Object</name></type> <name>invoke</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>actionName</name></decl></parameter>, <parameter><decl><type><name><name>Object</name><index>[]</index></name></type> <name>params</name></decl></parameter>, <parameter><decl><type><name><name>String</name><index>[]</index></name></type> <name>signature</name></decl></parameter>)</parameter_list>
            <throws>throws <argument><expr><name>MBeanException</name></expr></argument>, <argument><expr><name>ReflectionException</name></expr></argument></throws> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>UnsupportedOperationException</name><argument_list>(<argument><expr><literal type="string">"Operation not Supported"</literal></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></function>
  }

  <comment type="block" format="javadoc">/**
   * SolrInfoMBean that provides JMX-specific statistics.  Used, for example,
   * if generating full statistics is expensive; the expensive statistics can
   * be generated normally for use with the web ui, while an abbreviated version
   * are generated for period jmx use.
   */</comment>
  public <interface>interface <name>JmxAugmentedSolrInfoMBean</name> <super_list><extends>extends <super><name>SolrInfoMBean</name></super></extends></super_list> <block>{
    <comment type="block" format="javadoc">/**
     * JMX-specific statistics
     */</comment>
    <function_decl><type><specifier>public</specifier> <name>NamedList</name></type> <name>getStatisticsForJmx</name><parameter_list>()</parameter_list>;</function_decl>
  }</block></interface>
}
diff <expr_stmt><expr><operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>PluginBag</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>PluginBag</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">65978f33d53</literal><operator>..</operator><name>b916ad26c3f</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>PluginBag</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>PluginBag</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">294</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">294</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name><name>PluginBag</name><argument_list type="generic">&lt;<argument><name>T</name></argument>&gt;</argument_list></name> implements <name>AutoCloseable</name> <block>{
 
   <expr><specifier>private</specifier> <name>void</name> <call><name>registerMBean</name><argument_list>(<argument><expr><name>Object</name> <name>inst</name></expr></argument>, <argument><expr><name>SolrCore</name> <name>core</name></expr></argument>, <argument><expr><name>String</name> <name>pluginKey</name></expr></argument>)</argument_list></call> <block>{
     <if_stmt><if>if <condition>(<expr><name>core</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt></block></expr>
    <if_stmt><if>if <condition>(<expr><name>inst</name> <operator>instanceof</operator> <name>SolrInfoMBean</name></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>SolrInfoMBean</name></type> <name>mBean</name> <init>= <expr><operator>(</operator><name>SolrInfoMBean</name><operator>)</operator> <name>inst</name></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>inst</name> <operator>instanceof</operator> <name>SolrInfoBean</name></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>SolrInfoBean</name></type> <name>mBean</name> <init>= <expr><operator>(</operator><name>SolrInfoBean</name><operator>)</operator> <name>inst</name></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>String</name></type> <name>name</name> <init>= <expr><ternary><condition><expr><operator>(</operator><name>inst</name> <operator>instanceof</operator> <name>SolrRequestHandler</name><operator>)</operator></expr> ?</condition><then> <expr><name>pluginKey</name></expr> </then><else>: <expr><call><name><name>mBean</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>core</name><operator>.</operator><name>registerInfoBean</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><name>mBean</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt/></block_content></block></if></if_stmt></block_content></block></if></if_stmt>}</block>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrConfig</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrConfig</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a2444203772</name><operator>..</operator><literal type="number">4e7ab487704</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrConfig</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrConfig</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">276</literal></expr><operator>,</operator><expr><literal type="number">18</literal> <operator>+</operator><literal type="number">276</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrConfig</name> extends <name>Config</name> implements <name>MapSerializable</name> <block>{
     <expr><name>hashSetInverseLoadFactor</name> <operator>=</operator> <literal type="number">1.0f</literal> <operator>/</operator> <call><name>getFloat</name><argument_list>(<argument><expr><literal type="string">"//HashDocSet/@loadFactor"</literal></expr></argument>, <argument><expr><literal type="number">0.75f</literal></expr></argument>)</argument_list></call></expr>;
     <expr><name>hashDocSetMaxSize</name> <operator>=</operator> <call><name>getInt</name><argument_list>(<argument><expr><literal type="string">"//HashDocSet/@maxSize"</literal></expr></argument>, <argument><expr><literal type="number">3000</literal></expr></argument>)</argument_list></call></expr>;
 
    <expr><name>httpCachingConfig</name> <operator>=</operator> <operator>new</operator> <call><name>HttpCachingConfig</name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;
    <if_stmt><if>if <condition>(<expr><call><name>get</name><argument_list>(<argument><expr><literal type="string">"jmx"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"solrconfig.xml: &lt;jmx&gt; is no longer supported, use solr.xml:/metrics/reporter section instead"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt/></block_content></block></if></if_stmt>}</block>
 
    <name>Node</name> <name>jmx</name> <operator>=</operator> <call><name>getNode</name><argument_list>(<argument><expr><literal type="string">"jmx"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>jmx</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>jmxConfig</name> <operator>=</operator> <operator>new</operator> <call><name>JmxConfiguration</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>,
          <argument><expr><call><name>get</name><argument_list>(<argument><expr><literal type="string">"jmx/@agentId"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></argument>,
          <argument><expr><call><name>get</name><argument_list>(<argument><expr><literal type="string">"jmx/@serviceUrl"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></argument>,
          <argument><expr><call><name>get</name><argument_list>(<argument><expr><literal type="string">"jmx/@rootName"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>httpCachingConfig</name> <operator>=</operator> <operator>new</operator> <call><name>HttpCachingConfig</name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    </block_content>}</block></if> <else>else <block>{<block_content>
      <expr_stmt><expr><name>jmxConfig</name> <operator>=</operator> <operator>new</operator> <call><name>JmxConfiguration</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
     <expr_stmt><expr><name>maxWarmingSearchers</name> <operator>=</operator> <call><name>getInt</name><argument_list>(<argument><expr><literal type="string">"query/maxWarmingSearchers"</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>slowQueryThresholdMillis</name> <operator>=</operator> <call><name>getInt</name><argument_list>(<argument><expr><literal type="string">"query/slowQueryThresholdMillis"</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <for>for <control>(<init><decl><type><name>SolrPluginInfo</name></type> <name>plugin</name> <range>: <expr><name>plugins</name></expr></range></decl></init>)</control><block type="pseudo"><block_content> <expr_stmt><expr><call><name>loadPluginInfo</name><argument_list>(<argument><expr><name>plugin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">510</literal></expr><operator>,</operator><expr><literal type="number">48</literal> <operator>+</operator><literal type="number">504</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrConfig</name> extends <name>Config</name> implements <name>MapSerializable</name> <block>{
   <expr><specifier>protected</specifier> <name>String</name> <name>dataDir</name></expr>;
   <expr><specifier>public</specifier> <name>final</name> <name>int</name> <name>slowQueryThresholdMillis</name></expr>;  <comment type="line">// threshold above which a query is considered slow</comment>
 
  <comment type="line">//JMX configuration</comment>
  <expr><specifier>public</specifier> <name>final</name> <name>JmxConfiguration</name> <name>jmxConfig</name></expr>;

   <expr><specifier>private</specifier> <name>final</name> <name>HttpCachingConfig</name> <name>httpCachingConfig</name></expr>;
 
   <expr><specifier>public</specifier> <name>HttpCachingConfig</name> <call><name>getHttpCachingConfig</name><argument_list>()</argument_list></call> <block>{
     <return>return <expr><name>httpCachingConfig</name></expr>;</return></block></expr>
   }</block>
 
  <specifier>public</specifier> <specifier>static</specifier> <name>class</name> <name>JmxConfiguration</name> implements <name>MapSerializable</name> <block>{
    <expr><specifier>public</specifier> <name>boolean</name> <name>enabled</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;
    <expr><specifier>public</specifier> <name>String</name> <name>agentId</name></expr>;
    <expr><specifier>public</specifier> <name>String</name> <name>serviceUrl</name></expr>;
    <expr><specifier>public</specifier> <name>String</name> <name>rootName</name></expr>;

    <expr><specifier>public</specifier> <call><name>JmxConfiguration</name><argument_list>(<argument><expr><name>boolean</name> <name>enabled</name></expr></argument>,
                            <argument><expr><name>String</name> <name>agentId</name></expr></argument>,
                            <argument><expr><name>String</name> <name>serviceUrl</name></expr></argument>,
                            <argument><expr><name>String</name> <name>rootName</name></expr></argument>)</argument_list></call> <block>{
      <expr><name><name>this</name><operator>.</operator><name>enabled</name></name> <operator>=</operator> <name>enabled</name></expr>;
      <expr><name><name>this</name><operator>.</operator><name>agentId</name></name> <operator>=</operator> <name>agentId</name></expr>;
      <expr><name><name>this</name><operator>.</operator><name>serviceUrl</name></name> <operator>=</operator> <name>serviceUrl</name></expr>;
      <expr><name><name>this</name><operator>.</operator><name>rootName</name></name> <operator>=</operator> <name>rootName</name></expr>;

      <if_stmt><if>if <condition>(<expr><name>agentId</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <name>serviceUrl</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <throw>throw <expr><operator>new</operator> <call><name>SolrException</name>
            <argument_list>(<argument><expr><name><name>SolrException</name><operator>.</operator><name>ErrorCode</name><operator>.</operator><name>SERVER_ERROR</name></name></expr></argument>,
                <argument><expr><literal type="string">"Incorrect JMX Configuration in solrconfig.xml, "</literal> <operator>+</operator>
                    <literal type="string">"both agentId and serviceUrl cannot be specified at the same time"</literal></expr></argument>)</argument_list></call></expr>;</throw>
      <expr_stmt/></block_content></block></if></if_stmt>}</block></expr>

    }</block>

    @<name>Override</name>
    <specifier>public</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name> <call><name>toMap</name><argument_list>(<argument><expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name> <name>map</name></expr></argument>)</argument_list></call> <block>{
      <expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"agentId"</literal></expr></argument>, <argument><expr><name>agentId</name></expr></argument>)</argument_list></call></expr>;
      <expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"serviceUrl"</literal></expr></argument>, <argument><expr><name>serviceUrl</name></expr></argument>)</argument_list></call></expr>;
      <expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"rootName"</literal></expr></argument>, <argument><expr><name>rootName</name></expr></argument>)</argument_list></call></expr>;
      <return>return <expr><name>map</name></expr>;</return>
    }</block></expr></expr_stmt>
  }

   public <class><specifier>static</specifier> class <name>HttpCachingConfig</name> <super_list><implements>implements <super><name>MapSerializable</name></super></implements></super_list> <block>{
 
     <comment type="block" format="javadoc">/**
@@ -858,7 +816,6 @@ public class SolrConfig extends Config implements MapSerializable {
     m.put("queryResultMaxDocsCached", queryResultMaxDocsCached);
     m.put("enableLazyFieldLoading", enableLazyFieldLoading);
     m.put("maxBooleanClauses", booleanQueryMaxClauseCount);
    if (jmxConfig != null) result.put("jmx", jmxConfig);
     for (SolrPluginInfo plugin : plugins) {
       List&lt;PluginInfo&gt; infos = getPluginInfos(plugin.clazz.getName());
       if (infos == null || infos.isEmpty()) continue;
@@ -884,7 +841,6 @@ public class SolrConfig extends Config implements MapSerializable {
 
 
     addCacheConfig(m, filterCacheConfig, queryResultCacheConfig, documentCacheConfig, fieldValueCacheConfig);
    if (jmxConfig != null) result.put("jmx", jmxConfig);
     m = new LinkedHashMap();
     result.put("requestDispatcher", m);
     m.put("handleSelect", handleSelect);
diff --git a/solr/core/src/java/org/apache/solr/core/SolrCore.java b/solr/core/src/java/org/apache/solr/core/SolrCore.java
index a6ba2dca8b4..f0994529923 100644
-- a/solr/core/src/java/org/apache/solr/core/SolrCore.java
++ b/solr/core/src/java/org/apache/solr/core/SolrCore.java
@@ -27,7 +27,6 @@ import java.io.OutputStreamWriter;
 import java.io.Writer;
 import java.lang.invoke.MethodHandles;
 import java.lang.reflect.Constructor;
import java.net.URL;
 import java.nio.charset.StandardCharsets;
 import java.nio.file.NoSuchFileException;
 import java.nio.file.Path;
@@ -58,6 +57,7 @@ import java.util.concurrent.atomic.AtomicInteger;
 import java.util.concurrent.locks.ReentrantLock;
 
 import com.codahale.metrics.Counter;
import com.codahale.metrics.MetricRegistry;
 import com.codahale.metrics.Timer;
 import com.google.common.collect.MapMaker;
 import org.apache.commons.io.FileUtils;
@@ -133,7 +133,7 @@ import org.apache.solr.schema.IndexSchemaFactory;
 import org.apache.solr.schema.ManagedIndexSchema;
 import org.apache.solr.schema.SimilarityFactory;
 import org.apache.solr.search.QParserPlugin;
import org.apache.solr.search.SolrFieldCacheMBean;
import org.apache.solr.search.SolrFieldCacheBean;
 import org.apache.solr.search.SolrIndexSearcher;
 import org.apache.solr.search.ValueSourceParser;
 import org.apache.solr.search.stats.LocalStatsCache;
@@ -171,7 +171,7 @@ import static org.apache.solr.common.params.CommonParams.PATH;
 /**
  *
  */</comment>
<class><specifier>public</specifier> <specifier>final</specifier> class <name>SolrCore</name> <super_list><implements>implements <super><name>SolrInfoMBean</name></super>, <super><name>SolrMetricProducer</name></super>, <super><name>Closeable</name></super></implements></super_list> <block>{
<class><specifier>public</specifier> <specifier>final</specifier> class <name>SolrCore</name> <super_list><implements>implements <super><name>SolrInfoBean</name></super>, <super><name>SolrMetricProducer</name></super>, <super><name>Closeable</name></super></implements></super_list> <block>{
 
   <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>version</name><init>=<expr><literal type="string">"1.0"</literal></expr></init></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">202</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">202</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>SolrCore</name> implements <name>SolrInfoMBean</name></expr><operator>,</operator> <expr><name>SolrMetricProducer</name></expr><operator>,</operator> <expr><name>Closea</name>
   <specifier>private</specifier> <name>final</name> <name><name>PluginBag</name><argument_list type="generic">&lt;<argument><name>UpdateRequestProcessorFactory</name></argument>&gt;</argument_list></name> <name>updateProcessors</name> <operator>=</operator> <operator>new</operator> <call><name><name>PluginBag</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>(<argument><expr><name><name>UpdateRequestProcessorFactory</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>UpdateRequestProcessorChain</name></argument>&gt;</argument_list></name></type> <name>updateProcessorChains</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>SolrCoreMetricManager</name></type> <name>coreMetricManager</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>SolrInfoMBean</name></argument>&gt;</argument_list></name></type> <name>infoRegistry</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>SolrInfoBean</name></argument>&gt;</argument_list></name></type> <name>infoRegistry</name> <init>= <expr><operator>new</operator> <call><name><name>ConcurrentHashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>IndexDeletionPolicyWrapper</name></type> <name>solrDelPolicy</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>SolrSnapshotMetaDataManager</name></type> <name>snapshotMgr</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>DirectoryFactory</name></type> <name>directoryFactory</name></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">222</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">222</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>SolrCore</name> implements <name>SolrInfoMBean</name></expr><operator>,</operator> <expr><name>SolrMetricProducer</name></expr><operator>,</operator> <expr><name>Closea</name>
   <specifier>private</specifier> <name>Counter</name> <name>newSearcherMaxReachedCounter</name></expr>;</expr_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>Counter</name></type> <name>newSearcherOtherErrorsCounter</name></decl>;</decl_stmt>
 
  <decl_stmt><decl><type><specifier>private</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>metricNames</name> <init>= <expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

  <function><type><specifier>public</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>getMetricNames</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>metricNames</name></expr>;</return>
  </block_content>}</block></function>

   <function><type><specifier>public</specifier> <name>Date</name></type> <name>getStartTimeStamp</name><parameter_list>()</parameter_list> <block>{<block_content> <return>return <expr><name>startTime</name></expr>;</return> </block_content>}</block></function>
 
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name><name>IndexReader</name><operator>.</operator><name>CacheKey</name></name></argument>, <argument><name>IndexFingerprint</name></argument>&gt;</argument_list></name></type> <name>perSegmentFingerprintCache</name> <init>= <expr><operator>new</operator> <call><name>MapMaker</name><argument_list>()</argument_list></call><operator>.</operator><call><name>weakKeys</name><argument_list>()</argument_list></call><operator>.</operator><call><name>makeMap</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">448</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">454</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>SolrCore</name> implements <name>SolrInfoMBean</name></expr><operator>,</operator> <expr><name>SolrMetricProducer</name></expr><operator>,</operator> <expr><name>Closea</name></expr></expr_stmt>
   }</block></class>
 
   <comment type="block" format="javadoc">/**
   * Returns a Map of name vs SolrInfoMBean objects. The returned map is an instance of
   * Returns a Map of name vs SolrInfoBean objects. The returned map is an instance of
    * a ConcurrentHashMap and therefore no synchronization is needed for putting, removing
    * or iterating over it.
    *
   * @return the Info Registry map which contains SolrInfoMBean objects keyed by name
   * @return the Info Registry map which contains SolrInfoBean objects keyed by name
    * @since solr 1.3
    */</comment>
  <function><type><specifier>public</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>SolrInfoMBean</name></argument>&gt;</argument_list></name></type> <name>getInfoRegistry</name><parameter_list>()</parameter_list> <block>{<block_content>
  <function><type><specifier>public</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>SolrInfoBean</name></argument>&gt;</argument_list></name></type> <name>getInfoRegistry</name><parameter_list>()</parameter_list> <block>{<block_content>
     <return>return <expr><name>infoRegistry</name></expr>;</return>
   </block_content>}</block></function>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">905</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">911</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>SolrCore</name> implements <name>SolrInfoMBean</name></expr><operator>,</operator> <expr><name>SolrMetricProducer</name></expr><operator>,</operator> <expr><name>Closea</name>
     <comment type="line">// initialize searcher-related metrics</comment>
     <call><name>initializeMetrics</name><argument_list>(<argument><expr><name>metricManager</name></expr></argument>, <argument><expr><call><name><name>coreMetricManager</name><operator>.</operator><name>getRegistryName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <comment type="line">// Initialize JMX</comment>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>infoRegistry</name></name> <operator>=</operator> <call><name>initInfoRegistry</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>infoRegistry</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"fieldCache"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>SolrFieldCacheMBean</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>SolrFieldCacheBean</name></type> <name>solrFieldCacheBean</name> <init>= <expr><operator>new</operator> <call><name>SolrFieldCacheBean</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <comment type="line">// this is registered at the CONTAINER level because it's not core-specific - for now we</comment>
    <comment type="line">// also register it here for back-compat</comment>
    <expr_stmt><expr><call><name><name>solrFieldCacheBean</name><operator>.</operator><name>initializeMetrics</name></name><argument_list>(<argument><expr><name>metricManager</name></expr></argument>, <argument><expr><call><name><name>coreMetricManager</name><operator>.</operator><name>getRegistryName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"core"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>infoRegistry</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"fieldCache"</literal></expr></argument>, <argument><expr><name>solrFieldCacheBean</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

 
     <expr_stmt><expr><call><name>initSchema</name><argument_list>(<argument><expr><name>config</name></expr></argument>, <argument><expr><name>schema</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">998</literal></expr><operator>,</operator><expr><literal type="number">15</literal> <operator>+</operator><literal type="number">1007</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>SolrCore</name> implements <name>SolrInfoMBean</name></expr><operator>,</operator> <expr><name>SolrMetricProducer</name></expr><operator>,</operator> <expr><name>Closea</name>
     <comment type="line">// from the core.</comment>
     <call><name><name>resourceLoader</name><operator>.</operator><name>inform</name></name><argument_list>(<argument><expr><name>infoRegistry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <comment type="line">// Allow the directory factory to register MBeans as well</comment>
    <for>for <control>(<init><decl><type><name>SolrInfoMBean</name></type> <name>bean</name> <range>: <expr><call><name><name>directoryFactory</name><operator>.</operator><name>offerMBeans</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Registering JMX bean [{}] from directory factory."</literal></expr></argument>, <argument><expr><call><name><name>bean</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <comment type="line">// Not worried about concurrency, so no reason to use putIfAbsent</comment>
      <if_stmt><if>if <condition>(<expr><call><name><name>infoRegistry</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block>{<block_content>
        <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Ignoring JMX bean [{}] due to name conflict."</literal></expr></argument>, <argument><expr><call><name><name>bean</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><call><name><name>infoRegistry</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>bean</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>bean</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></else></if_stmt>
    <comment type="line">// Allow the directory factory to report metrics</comment>
    <if_stmt><if>if <condition>(<expr><name>directoryFactory</name> <operator>instanceof</operator> <name>SolrMetricProducer</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><operator>(</operator><operator>(</operator><name>SolrMetricProducer</name><operator>)</operator><name>directoryFactory</name><operator>)</operator><operator>.</operator><call><name>initializeMetrics</name><argument_list>(<argument><expr><name>metricManager</name></expr></argument>, <argument><expr><call><name><name>coreMetricManager</name><operator>.</operator><name>getRegistryName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"directoryFactory"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if></if_stmt>
 
     <comment type="line">// seed version buckets with max from index during core initialization ... requires a searcher!</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1126</literal></expr><operator>,</operator><expr><literal type="number">34</literal> <operator>+</operator><literal type="number">1129</literal></expr><operator>,</operator><expr><literal type="number">46</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>SolrCore</name> implements <name>SolrInfoMBean</name></expr><operator>,</operator> <expr><name>SolrMetricProducer</name></expr><operator>,</operator> <expr><name>Closea</name>
 
   @<name>Override</name>
   <specifier>public</specifier> <name>void</name> <call><name>initializeMetrics</name><argument_list>(<argument><expr><name>SolrMetricManager</name> <name>manager</name></expr></argument>, <argument><expr><name>String</name> <name>registry</name></expr></argument>, <argument><expr><name>String</name> <name>scope</name></expr></argument>)</argument_list></call> <block>{
    <expr><name>newSearcherCounter</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>counter</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><literal type="string">"new"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>SEARCHER</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><name>newSearcherTimer</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>timer</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><literal type="string">"time"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>SEARCHER</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"new"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><name>newSearcherWarmupTimer</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>timer</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><literal type="string">"warmup"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>SEARCHER</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"new"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><name>newSearcherMaxReachedCounter</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>counter</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><literal type="string">"maxReached"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>SEARCHER</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"new"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><name>newSearcherOtherErrorsCounter</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>counter</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><literal type="string">"errors"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>SEARCHER</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"new"</literal></expr></argument>)</argument_list></call></expr>;

    <expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><ternary><condition><expr><operator>(</operator><operator>)</operator> <operator>-&gt;</operator> <name>name</name> <operator>==</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><literal type="string">"(null)"</literal></expr> </then><else>: <expr><name>name</name></expr></else></ternary></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"coreName"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>CORE</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><name>startTime</name></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"startTime"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>CORE</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name>getOpenCount</name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"refCount"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>CORE</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>resourceLoader</name><operator>.</operator><name>getInstancePath</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"instanceDir"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>CORE</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name>getIndexDir</name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"indexDir"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>CORE</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name>getIndexSize</name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"sizeInBytes"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>INDEX</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>NumberUtils</name><operator>.</operator><name>readableSize</name></name><argument_list>(<argument><expr><call><name>getIndexSize</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"size"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>INDEX</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>coreDescriptor</name><operator>.</operator><name>getCoreContainer</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCoreNames</name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"aliases"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>CORE</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><name>newSearcherCounter</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>counter</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><literal type="string">"new"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>SEARCHER</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><name>newSearcherTimer</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>timer</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><literal type="string">"time"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>SEARCHER</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"new"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><name>newSearcherWarmupTimer</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>timer</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><literal type="string">"warmup"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>SEARCHER</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"new"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><name>newSearcherMaxReachedCounter</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>counter</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><literal type="string">"maxReached"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>SEARCHER</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"new"</literal></expr></argument>)</argument_list></call></expr>;
    <expr><name>newSearcherOtherErrorsCounter</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>counter</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><literal type="string">"errors"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>SEARCHER</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"new"</literal></expr></argument>)</argument_list></call></expr>;

    <expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><ternary><condition><expr><operator>(</operator><operator>)</operator> <operator>-&gt;</operator> <name>name</name> <operator>==</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><literal type="string">"(null)"</literal></expr> </then><else>: <expr><name>name</name></expr></else></ternary></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"coreName"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>CORE</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><name>startTime</name></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"startTime"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>CORE</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name>getOpenCount</name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"refCount"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>CORE</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>resourceLoader</name><operator>.</operator><name>getInstancePath</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"instanceDir"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>CORE</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name>getIndexDir</name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"indexDir"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>CORE</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name>getIndexSize</name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"sizeInBytes"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>INDEX</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>NumberUtils</name><operator>.</operator><name>readableSize</name></name><argument_list>(<argument><expr><call><name>getIndexSize</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"size"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>INDEX</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <if_stmt><if>if <condition>(<expr><name>coreDescriptor</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>coreDescriptor</name><operator>.</operator><name>getCoreContainer</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>coreDescriptor</name><operator>.</operator><name>getCoreContainer</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCoreNames</name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"aliases"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>CORE</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><specifier>final</specifier> <name>CloudDescriptor</name></type> <name>cd</name> <init>= <expr><call><name><name>coreDescriptor</name><operator>.</operator><name>getCloudDescriptor</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>cd</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt; <block>{<block_content>
          <if_stmt><if>if <condition>(<expr><call><name><name>cd</name><operator>.</operator><name>getCollectionName</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <return>return <expr><call><name><name>cd</name><operator>.</operator><name>getCollectionName</name></name><argument_list>()</argument_list></call></expr>;</return>
          <expr_stmt/>}</block_content> else <block>{<block_content>
            <return>return <expr><literal type="string">"_notset_"</literal></expr>;</return>
          <expr_stmt/>}</block_content>
        }</block></block><operator>,</operator> <expr_stmt><expr><literal type="boolean">true</literal></expr><operator>,</operator> <expr><literal type="string">"collection"</literal></expr><operator>,</operator> <expr><call><name><name>Category</name><operator>.</operator><name>CORE</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></expr_stmt></if></if_stmt></block_content></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt; <block>{<block_content>
          <if_stmt><if>if <condition>(<expr><call><name><name>cd</name><operator>.</operator><name>getShardId</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <return>return <expr><call><name><name>cd</name><operator>.</operator><name>getShardId</name></name><argument_list>()</argument_list></call></expr>;</return>
          <expr_stmt/>}</block_content> else <block>{<block_content>
            <return>return <expr><literal type="string">"_auto_"</literal></expr>;</return>
          <expr_stmt/>}</block_content>
        }</block></block><operator>,</operator> <expr_stmt><expr><literal type="boolean">true</literal></expr><operator>,</operator> <expr><literal type="string">"shard"</literal></expr><operator>,</operator> <expr><call><name><name>Category</name><operator>.</operator><name>CORE</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></expr_stmt></if></if_stmt></block_content></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt/></block_content></block></if></if_stmt></block_content></block></if></if_stmt>}</block></expr></expr_stmt>
    </block_content>}</block></for>

     <comment type="line">// initialize disk total / free metrics</comment>
     <decl_stmt><decl><type><name>Path</name></type> <name>dataDirPath</name> <init>= <expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>dataDir</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>File</name></type> <name>dataDirFile</name> <init>= <expr><call><name><name>dataDirPath</name><operator>.</operator><name>toFile</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>dataDirFile</name><operator>.</operator><name>getTotalSpace</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"totalSpace"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>CORE</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"fs"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>dataDirFile</name><operator>.</operator><name>getUsableSpace</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"usableSpace"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>CORE</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"fs"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>SolrInfoMBean</name></argument>&gt;</argument_list></name></type> <name>initInfoRegistry</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>name</name></decl></parameter>, <parameter><decl><type><name>SolrConfig</name></type> <name>config</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name><name>config</name><operator>.</operator><name>jmxConfig</name><operator>.</operator><name>enabled</name></name></expr>)</condition> <block>{<block_content>
      <return>return <expr><operator>new</operator> <call><name><name>JmxMonitoredMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>SolrInfoMBean</name></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><call><name><name>coreMetricManager</name><operator>.</operator><name>getRegistryName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>String</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>hashCode</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>config</name><operator>.</operator><name>jmxConfig</name></name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></if> <else>else  <block>{<block_content>
      <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"JMX monitoring not detected for core: "</literal> <operator>+</operator> <name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <return>return <expr><operator>new</operator> <call><name><name>ConcurrentHashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</return>
    </block_content>}</block></else></if_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>dataDirFile</name><operator>.</operator><name>getTotalSpace</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"totalSpace"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>CORE</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"fs"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>dataDirFile</name><operator>.</operator><name>getUsableSpace</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"usableSpace"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>CORE</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"fs"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
   <function><type><specifier>private</specifier> <name>void</name></type> <name>checkVersionFieldExistsInSchema</name><parameter_list>(<parameter><decl><type><name>IndexSchema</name></type> <name>schema</name></decl></parameter>, <parameter><decl><type><name>CoreDescriptor</name></type> <name>coreDescriptor</name></decl></parameter>)</parameter_list> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">2685</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">2700</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>SolrCore</name> implements <name>SolrInfoMBean</name></expr><operator>,</operator> <expr><name>SolrMetricProducer</name></expr><operator>,</operator> <expr><name>Closea</name></expr></expr_stmt>
     <for>for <control>(<init><decl><type><name>PluginInfo</name></type> <name>info</name> <range>: <expr><name>pluginInfos</name></expr></range></decl></init>)</control> <block>{<block_content>
       <decl_stmt><decl><type><name>T</name></type> <name>o</name> <init>= <expr><call><name>createInitInstance</name><argument_list>(<argument><expr><name>info</name></expr></argument>,<argument><expr><name>type</name></expr></argument>, <argument><expr><call><name><name>type</name><operator>.</operator><name>getSimpleName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>defClassName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>registry</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>info</name><operator>.</operator><name>name</name></name></expr></argument>, <argument><expr><name>o</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><name>o</name> <operator>instanceof</operator> <name>SolrMetricProducer</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>coreMetricManager</name><operator>.</operator><name>registerMetricProducer</name></name><argument_list>(<argument><expr><call><name><name>type</name><operator>.</operator><name>getSimpleName</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"."</literal> <operator>+</operator> <name><name>info</name><operator>.</operator><name>name</name></name></expr></argument>, <argument><expr><operator>(</operator><name>SolrMetricProducer</name><operator>)</operator><name>o</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
       <if_stmt><if>if<condition>(<expr><call><name><name>info</name><operator>.</operator><name>isDefault</name></name><argument_list>()</argument_list></call></expr>)</condition><block>{<block_content>
         <expr_stmt><expr><name>def</name> <operator>=</operator> <name>o</name></expr>;</expr_stmt>
       </block_content>}</block></if></if_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">2692</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">2710</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>SolrCore</name> implements <name>SolrInfoMBean</name></expr><operator>,</operator> <expr><name>SolrMetricProducer</name></expr><operator>,</operator> <expr><name>Closea</name></expr></expr_stmt>
     <return>return <expr><name>def</name></expr>;</return>
   </block_content>}</block></for>
 
  <function><type><specifier>public</specifier> <name>void</name></type> <name>initDefaultPlugin</name><parameter_list>(<parameter><decl><type><name>Object</name></type> <name>plugin</name></decl></parameter>, <parameter><decl><type><name>Class</name></type> <name>type</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>plugin</name> <operator>instanceof</operator> <name>SolrMetricProducer</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>coreMetricManager</name><operator>.</operator><name>registerMetricProducer</name></name><argument_list>(<argument><expr><call><name><name>type</name><operator>.</operator><name>getSimpleName</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">".default"</literal></expr></argument>, <argument><expr><operator>(</operator><name>SolrMetricProducer</name><operator>)</operator><name>plugin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
  </block_content>}</block></function>

   <comment type="block" format="javadoc">/**For a given List of PluginInfo return the instances as a List
    * @param defClassName The default classname if PluginInfo#className == null
    * @return The instances initialized
@@ -2775,14 +2799,9 @@ public final class SolrCore implements SolrInfoMBean, SolrMetricProducer, Closea
   }
 
   /////////////////////////////////////////////////////////////////////
  // SolrInfoMBean stuff: Statistics and Module Info
  // SolrInfoBean stuff: Statistics and Module Info
   /////////////////////////////////////////////////////////////////////
 
  @Override
  public String getVersion() {
    return SolrCore.version;
  }

   @Override
   public String getDescription() {
     return "SolrCore";
@@ -2794,48 +2813,8 @@ public final class SolrCore implements SolrInfoMBean, SolrMetricProducer, Closea
   }
 
   @Override
  public String getSource() {
    return null;
  }

  @Override
  public URL[] getDocs() {
    return null;
  }

  @Override
  public NamedList getStatistics() {
    NamedList&lt;Object&gt; lst = new SimpleOrderedMap&lt;&gt;(8);
    lst.add("coreName", name==null ? "(null)" : name);
    lst.add("startTime", startTime);
    lst.add("refCount", getOpenCount());
    lst.add("instanceDir", resourceLoader.getInstancePath());
    lst.add("indexDir", getIndexDir());
    long size = getIndexSize();
    lst.add("sizeInBytes", size);
    lst.add("size", NumberUtils.readableSize(size));

    CoreDescriptor cd = getCoreDescriptor();
    if (cd != null) {
      if (null != cd &amp;&amp; cd.getCoreContainer() != null) {
        lst.add("aliases", getCoreDescriptor().getCoreContainer().getCoreNames(this));
      }
      CloudDescriptor cloudDesc = cd.getCloudDescriptor();
      if (cloudDesc != null) {
        String collection = cloudDesc.getCollectionName();
        if (collection == null) {
          collection = "_notset_";
        }
        lst.add("collection", collection);
        String shard = cloudDesc.getShardId();
        if (shard == null) {
          shard = "_auto_";
        }
        lst.add("shard", shard);
      }
    }

    return lst;
  public MetricRegistry getMetricRegistry() {
    return coreMetricManager.getRegistry();
   }
 
   public Codec getCodec() {
@@ -2983,11 +2962,11 @@ public final class SolrCore implements SolrInfoMBean, SolrMetricProducer, Closea
     };
   }
 
  public void registerInfoBean(String name, SolrInfoMBean solrInfoMBean) {
    infoRegistry.put(name, solrInfoMBean);
  public void registerInfoBean(String name, SolrInfoBean solrInfoBean) {
    infoRegistry.put(name, solrInfoBean);
 
    if (solrInfoMBean instanceof SolrMetricProducer) {
      SolrMetricProducer producer = (SolrMetricProducer) solrInfoMBean;
    if (solrInfoBean instanceof SolrMetricProducer) {
      SolrMetricProducer producer = (SolrMetricProducer) solrInfoBean;
       coreMetricManager.registerMetricProducer(name, producer);
     }
   }
diff --git a/solr/core/src/java/org/apache/solr/core/SolrInfoBean.java b/solr/core/src/java/org/apache/solr/core/SolrInfoBean.java
new file mode 100644
index 00000000000..472b15e0819
-- /dev/null
++ b/solr/core/src/java/org/apache/solr/core/SolrInfoBean.java
@@ -0,0 +1,95 @@
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricRegistry</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricManager</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>stats</name><operator>.</operator><name>MetricUtils</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Interface for getting various ui friendly strings
 * for use by objects which are 'pluggable' to make server administration
 * easier.
 */</comment>
<interface><specifier>public</specifier> interface <name>SolrInfoBean</name> <block>{

  <comment type="block" format="javadoc">/**
   * Category of Solr component.
   */</comment>
  <enum>enum <name>Category</name> <block>{ <decl><name>CONTAINER</name></decl>, <decl><name>ADMIN</name></decl>, <decl><name>CORE</name></decl>, <decl><name>QUERY</name></decl>, <decl><name>UPDATE</name></decl>, <decl><name>CACHE</name></decl>, <decl><name>HIGHLIGHTER</name></decl>, <decl><name>QUERYPARSER</name></decl>, <decl><name>SPELLCHECKER</name></decl>,
    <decl><name>SEARCHER</name></decl>, <decl><name>REPLICATION</name></decl>, <decl><name>TLOG</name></decl>, <decl><name>INDEX</name></decl>, <decl><name>DIRECTORY</name></decl>, <decl><name>HTTP</name></decl>, <decl><name>OTHER</name></decl> }</block></enum>

  <comment type="block" format="javadoc">/**
   * Top-level group of beans or metrics for a subsystem.
   */</comment>
  <enum>enum <name>Group</name> <block>{ <decl><name>jvm</name></decl>, <decl><name>jetty</name></decl>, <decl><name>node</name></decl>, <decl><name>core</name></decl>, <decl><name>collection</name></decl>, <decl><name>shard</name></decl>, <decl><name>cluster</name></decl>, <decl><name>overseer</name></decl> }</block></enum>

  <comment type="block" format="javadoc">/**
   * Simple common usage name, e.g. BasicQueryHandler,
   * or fully qualified class name.
   */</comment>
  <function_decl><type><name>String</name></type> <name>getName</name><parameter_list>()</parameter_list>;</function_decl>
  <comment type="block" format="javadoc">/** Simple one or two line description */</comment>
  <function_decl><type><name>String</name></type> <name>getDescription</name><parameter_list>()</parameter_list>;</function_decl>
  <comment type="block" format="javadoc">/** Category of this component */</comment>
  <function_decl><type><name>Category</name></type> <name>getCategory</name><parameter_list>()</parameter_list>;</function_decl>

  <comment type="block" format="javadoc">/** Optionally return a snapshot of metrics that this component reports, or null.
   * Default implementation requires that both {@link #getMetricNames()} and
   * {@link #getMetricRegistry()} return non-null values.
   */</comment>
  <function><type><specifier>default</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>getMetricsSnapshot</name><parameter_list>()</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><call><name>getMetricRegistry</name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <call><name>getMetricNames</name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <return>return <expr><literal type="null">null</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <return>return <expr><call><name><name>MetricUtils</name><operator>.</operator><name>convertMetrics</name></name><argument_list>(<argument><expr><call><name>getMetricRegistry</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>getMetricNames</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * Modifiable set of metric names that this component reports (default is null,
   * which means none). If not null then this set is used by {@link #registerMetricName(String)}
   * to capture what metrics names are reported from this component.
   */</comment>
  <function><type><specifier>default</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>getMetricNames</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><literal type="null">null</literal></expr>;</return>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * An instance of {@link MetricRegistry} that this component uses for metrics reporting
   * (default is null, which means no registry).
   */</comment>
  <function><type><specifier>default</specifier> <name>MetricRegistry</name></type> <name>getMetricRegistry</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><literal type="null">null</literal></expr>;</return>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/** Register a metric name that this component reports. This method is called by various
   * metric registration methods in {@link org.apache.solr.metrics.SolrMetricManager} in order
   * to capture what metric names are reported from this component (which in turn is called
   * from {@link org.apache.solr.metrics.SolrMetricProducer#initializeMetrics(SolrMetricManager, String, String)}).
   * &lt;p&gt;Default implementation registers all metrics added by a component. Implementations may
   * override this to avoid reporting some or all metrics returned by {@link #getMetricsSnapshot()}&lt;/p&gt;
   */</comment>
  <function><type><specifier>default</specifier> <name>void</name></type> <name>registerMetricName</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>name</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>names</name> <init>= <expr><call><name>getMetricNames</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>names</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>names</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
  </block_content>}</block></function>
}</block></interface>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrInfoMBean</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrInfoMBean</name><operator>.</operator><name>java</name></name>
<name>deleted</name> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">63bdef0f7bc</literal><operator>..</operator><literal type="number">00000000000</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrInfoMBean</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
@@ <operator>-</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">76</literal> <operator>+</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> @@</expr></expr_stmt>
<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URL</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>

<comment type="block" format="javadoc">/**
 * MBean interface for getting various ui friendly strings and URLs
 * for use by objects which are 'pluggable' to make server administration
 * easier.
 *
 *
 */</comment>
<interface><specifier>public</specifier> interface <name>SolrInfoMBean</name> <block>{

  <comment type="block" format="javadoc">/**
   * Category of Solr component.
   */</comment>
  <enum>enum <name>Category</name> <block>{ <decl><name>CONTAINER</name></decl>, <decl><name>ADMIN</name></decl>, <decl><name>CORE</name></decl>, <decl><name>QUERY</name></decl>, <decl><name>UPDATE</name></decl>, <decl><name>CACHE</name></decl>, <decl><name>HIGHLIGHTER</name></decl>, <decl><name>QUERYPARSER</name></decl>, <decl><name>SPELLCHECKER</name></decl>,
    <decl><name>SEARCHER</name></decl>, <decl><name>REPLICATION</name></decl>, <decl><name>TLOG</name></decl>, <decl><name>INDEX</name></decl>, <decl><name>DIRECTORY</name></decl>, <decl><name>HTTP</name></decl>, <decl><name>OTHER</name></decl> }</block></enum>

  <comment type="block" format="javadoc">/**
   * Top-level group of beans or metrics for a subsystem.
   */</comment>
  <enum>enum <name>Group</name> <block>{ <decl><name>jvm</name></decl>, <decl><name>jetty</name></decl>, <decl><name>node</name></decl>, <decl><name>core</name></decl>, <decl><name>collection</name></decl>, <decl><name>shard</name></decl>, <decl><name>cluster</name></decl>, <decl><name>overseer</name></decl> }</block></enum>

  <comment type="block" format="javadoc">/**
   * Simple common usage name, e.g. BasicQueryHandler,
   * or fully qualified clas name.
   */</comment>
  <function_decl><type><specifier>public</specifier> <name>String</name></type> <name>getName</name><parameter_list>()</parameter_list>;</function_decl>
  <comment type="block" format="javadoc">/** Simple common usage version, e.g. 2.0 */</comment>
  <function_decl><type><specifier>public</specifier> <name>String</name></type> <name>getVersion</name><parameter_list>()</parameter_list>;</function_decl>
  <comment type="block" format="javadoc">/** Simple one or two line description */</comment>
  <function_decl><type><specifier>public</specifier> <name>String</name></type> <name>getDescription</name><parameter_list>()</parameter_list>;</function_decl>
  <comment type="block" format="javadoc">/** Purpose of this Class */</comment>
  <function_decl><type><specifier>public</specifier> <name>Category</name></type> <name>getCategory</name><parameter_list>()</parameter_list>;</function_decl>
  <comment type="block" format="javadoc">/** CVS Source, SVN Source, etc */</comment>
  <function_decl><type><specifier>public</specifier> <name>String</name></type> <name>getSource</name><parameter_list>()</parameter_list>;</function_decl>
  <comment type="block" format="javadoc">/**
   * Documentation URL list.
   *
   * &lt;p&gt;
   * Suggested documentation URLs: Homepage for sponsoring project,
   * FAQ on class usage, Design doc for class, Wiki, bug reporting URL, etc...
   * &lt;/p&gt;
   */</comment>
  <function_decl><type><specifier>public</specifier> <name><name>URL</name><index>[]</index></name></type> <name>getDocs</name><parameter_list>()</parameter_list>;</function_decl>
  <comment type="block" format="javadoc">/**
   * Any statistics this instance would like to be publicly available via
   * the Solr Administration interface.
   *
   * &lt;p&gt;
   * Any Object type may be stored in the list, but only the
   * &lt;code&gt;toString()&lt;/code&gt; representation will be used.
   * &lt;/p&gt;
   */</comment>
  <function_decl><type><specifier>public</specifier> <name>NamedList</name></type> <name>getStatistics</name><parameter_list>()</parameter_list>;</function_decl>

}</block></interface>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrInfoMBeanWrapper</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrInfoMBeanWrapper</name><operator>.</operator><name>java</name></name>
<name>deleted</name> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">534b8844931</literal><operator>..</operator><literal type="number">00000000000</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrInfoMBeanWrapper</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
@@ <operator>-</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">62</literal> <operator>+</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> @@</expr></expr_stmt>
<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URL</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Wraps a {@link SolrInfoMBean}.
 */</comment>
<class><specifier>public</specifier> class <name>SolrInfoMBeanWrapper</name> <super_list><implements>implements <super><name>SolrInfoMBean</name></super></implements></super_list> <block>{
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>SolrInfoMBean</name></type> <name>mbean</name></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>SolrInfoMBeanWrapper</name><parameter_list>(<parameter><decl><type><name>SolrInfoMBean</name></type> <name>mbean</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>mbean</name></name> <operator>=</operator> <name>mbean</name></expr>;</expr_stmt>
  </block_content>}</block></constructor>

  <comment type="block" format="javadoc">/** {@inheritDoc} */</comment>
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>String</name></type> <name>getName</name><parameter_list>()</parameter_list> <block>{<block_content> <return>return <expr><call><name><name>mbean</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr>;</return> </block_content>}</block></function>

  <comment type="block" format="javadoc">/** {@inheritDoc} */</comment>
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>String</name></type> <name>getVersion</name><parameter_list>()</parameter_list> <block>{<block_content> <return>return <expr><call><name><name>mbean</name><operator>.</operator><name>getVersion</name></name><argument_list>()</argument_list></call></expr>;</return> </block_content>}</block></function>

  <comment type="block" format="javadoc">/** {@inheritDoc} */</comment>
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>String</name></type> <name>getDescription</name><parameter_list>()</parameter_list> <block>{<block_content> <return>return <expr><call><name><name>mbean</name><operator>.</operator><name>getDescription</name></name><argument_list>()</argument_list></call></expr>;</return> </block_content>}</block></function>

  <comment type="block" format="javadoc">/** {@inheritDoc} */</comment>
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>Category</name></type> <name>getCategory</name><parameter_list>()</parameter_list> <block>{<block_content> <return>return <expr><call><name><name>mbean</name><operator>.</operator><name>getCategory</name></name><argument_list>()</argument_list></call></expr>;</return> </block_content>}</block></function>

  <comment type="block" format="javadoc">/** {@inheritDoc} */</comment>
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>String</name></type> <name>getSource</name><parameter_list>()</parameter_list> <block>{<block_content> <return>return <expr><call><name><name>mbean</name><operator>.</operator><name>getSource</name></name><argument_list>()</argument_list></call></expr>;</return> </block_content>}</block></function>

  <comment type="block" format="javadoc">/** {@inheritDoc} */</comment>
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name><name>URL</name><index>[]</index></name></type> <name>getDocs</name><parameter_list>()</parameter_list> <block>{<block_content> <return>return <expr><call><name><name>mbean</name><operator>.</operator><name>getDocs</name></name><argument_list>()</argument_list></call></expr>;</return> </block_content>}</block></function>

  <comment type="block" format="javadoc">/** {@inheritDoc} */</comment>
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>NamedList</name></type> <name>getStatistics</name><parameter_list>()</parameter_list> <block>{<block_content> <return>return <expr><call><name><name>mbean</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr>;</return> </block_content>}</block></function>

}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrResourceLoader</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrResourceLoader</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d310ff23c71</name><operator>..</operator><literal type="number">2e679cf6d4d</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrResourceLoader</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrResourceLoader</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">100</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">100</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrResourceLoader</name> implements <name>ResourceLoader</name></expr><operator>,</operator><expr><name>Closeable</name>
   <specifier>private</specifier> <name>String</name> <name>dataDir</name></expr>;</expr_stmt>
   
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>SolrCoreAware</name></argument>&gt;</argument_list></name></type> <name>waitingForCore</name> <init>= <expr><call><name><name>Collections</name><operator>.</operator><name>synchronizedList</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>SolrCoreAware</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>SolrInfoMBean</name></argument>&gt;</argument_list></name></type> <name>infoMBeans</name> <init>= <expr><call><name><name>Collections</name><operator>.</operator><name>synchronizedList</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>SolrInfoMBean</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>SolrInfoBean</name></argument>&gt;</argument_list></name></type> <name>infoMBeans</name> <init>= <expr><call><name><name>Collections</name><operator>.</operator><name>synchronizedList</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>SolrInfoBean</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>ResourceLoaderAware</name></argument>&gt;</argument_list></name></type> <name>waitingForResources</name> <init>= <expr><call><name><name>Collections</name><operator>.</operator><name>synchronizedList</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>ResourceLoaderAware</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Charset</name></type> <name>UTF_8</name> <init>= <expr><name><name>StandardCharsets</name><operator>.</operator><name>UTF_8</name></name></expr></init></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">664</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">664</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrResourceLoader</name> implements <name>ResourceLoader</name></expr><operator>,</operator><expr><name>Closeable</name>
         <call><name>assertAwareCompatibility</name><argument_list>( <argument><expr><name><name>ResourceLoaderAware</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><name>obj</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name><name>waitingForResources</name><operator>.</operator><name>add</name></name><argument_list>( <argument><expr><operator>(</operator><name>ResourceLoaderAware</name><operator>)</operator><name>obj</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></function>
      <if_stmt><if>if <condition>(<expr><name>obj</name> <operator>instanceof</operator> <name>SolrInfoMBean</name></expr>)</condition><block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>obj</name> <operator>instanceof</operator> <name>SolrInfoBean</name></expr>)</condition><block>{<block_content>
         <comment type="line">//TODO: Assert here?</comment>
        <expr_stmt><expr><call><name><name>infoMBeans</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>(</operator><name>SolrInfoMBean</name><operator>)</operator> <name>obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>infoMBeans</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>(</operator><name>SolrInfoBean</name><operator>)</operator> <name>obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if></if_stmt>
     </block_content>}</block></if></if_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">722</literal></expr><operator>,</operator><expr><literal type="number">21</literal> <operator>+</operator><literal type="number">722</literal></expr><operator>,</operator><expr><literal type="number">21</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrResourceLoader</name> implements <name>ResourceLoader</name></expr><operator>,</operator><expr><name>Closeable</name></expr></expr_stmt>
   }</block></class>
 
   <comment type="block" format="javadoc">/**
   * Register any {@link org.apache.solr.core.SolrInfoMBean}s
   * Register any {@link SolrInfoBean}s
    * @param infoRegistry The Info Registry
    */</comment>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>inform</name><parameter_list>(<parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>SolrInfoMBean</name></argument>&gt;</argument_list></name></type> <name>infoRegistry</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>inform</name><parameter_list>(<parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>SolrInfoBean</name></argument>&gt;</argument_list></name></type> <name>infoRegistry</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <comment type="line">// this can currently happen concurrently with requests starting and lazy components</comment>
     <comment type="line">// loading.  Make sure infoMBeans doesn't change.</comment>
 
    <decl_stmt><decl><type><name><name>SolrInfoMBean</name><index>[]</index></name></type> <name>arr</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>SolrInfoBean</name><index>[]</index></name></type> <name>arr</name></decl>;</decl_stmt>
     <synchronized>synchronized <init>(<expr><name>infoMBeans</name></expr>)</init> <block>{<block_content>
      <expr_stmt><expr><name>arr</name> <operator>=</operator> <call><name><name>infoMBeans</name><operator>.</operator><name>toArray</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>SolrInfoMBean</name><index>[<expr><call><name><name>infoMBeans</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>arr</name> <operator>=</operator> <call><name><name>infoMBeans</name><operator>.</operator><name>toArray</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>SolrInfoBean</name><index>[<expr><call><name><name>infoMBeans</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>waitingForResources</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></synchronized>
 
 
    <for>for <control>(<init><decl><type><name>SolrInfoMBean</name></type> <name>bean</name> <range>: <expr><name>arr</name></expr></range></decl></init>)</control> <block>{<block_content>
    <for>for <control>(<init><decl><type><name>SolrInfoBean</name></type> <name>bean</name> <range>: <expr><name>arr</name></expr></range></decl></init>)</control> <block>{<block_content>
       <comment type="line">// Too slow? I suspect not, but we may need</comment>
       <comment type="line">// to start tracking this in a Set.</comment>
       <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>infoRegistry</name><operator>.</operator><name>containsValue</name></name><argument_list>(<argument><expr><name>bean</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">879</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">879</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrResourceLoader</name> implements <name>ResourceLoader</name></expr><operator>,</operator><expr><name>Closeable</name>
   <specifier>public</specifier> <name>void</name> <call><name>close</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><call><name><name>IOUtils</name><operator>.</operator><name>close</name></name><argument_list>(<argument><expr><name>classLoader</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
   </block_content>}</block></if></if_stmt>
  <function><type><specifier>public</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>SolrInfoMBean</name></argument>&gt;</argument_list></name></type> <name>getInfoMBeans</name><parameter_list>()</parameter_list><block>{<block_content>
  <function><type><specifier>public</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>SolrInfoBean</name></argument>&gt;</argument_list></name></type> <name>getInfoMBeans</name><parameter_list>()</parameter_list><block>{<block_content>
     <return>return <expr><call><name><name>Collections</name><operator>.</operator><name>unmodifiableList</name></name><argument_list>(<argument><expr><name>infoMBeans</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrXmlConfig</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrXmlConfig</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b37bd521681</name><operator>..</operator><literal type="number">5f682868c45</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrXmlConfig</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrXmlConfig</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@
  <operator>*</operator><operator>/</operator></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name></name>;</package>
 
<import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>MBeanServer</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>xml</name><operator>.</operator><name>xpath</name><operator>.</operator><name>XPath</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>xml</name><operator>.</operator><name>xpath</name><operator>.</operator><name>XPathConstants</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>xml</name><operator>.</operator><name>xpath</name><operator>.</operator><name>XPathExpressionException</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">25</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>invoke</name><operator>.</operator><name>MethodHandles</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>StandardCharsets</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Properties</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">35</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>io</name><operator>.</operator><name>IOUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>logging</name><operator>.</operator><name>LogWatcherConfig</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>reporters</name><operator>.</operator><name>SolrJmxReporter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>update</name><operator>.</operator><name>UpdateShardHandlerConfig</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>DOMUtil</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>JmxUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>PropertiesUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">448</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">454</literal></expr><operator>,</operator><expr><literal type="number">30</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrXmlConfig</name> <block>{
 
   <expr><specifier>private</specifier> <specifier>static</specifier> <name><name>PluginInfo</name><index>[]</index></name> <call><name>getMetricReporterPluginInfos</name><argument_list>(<argument><expr><name>Config</name> <name>config</name></expr></argument>)</argument_list></call> <block>{
     <expr><name>NodeList</name> <name>nodes</name> <operator>=</operator> <operator>(</operator><name>NodeList</name><operator>)</operator> <call><name><name>config</name><operator>.</operator><name>evaluate</name></name><argument_list>(<argument><expr><literal type="string">"solr/metrics/reporter"</literal></expr></argument>, <argument><expr><name><name>XPathConstants</name><operator>.</operator><name>NODESET</name></name></expr></argument>)</argument_list></call></expr>;
    <if_stmt><if>if <condition>(<expr><name>nodes</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <call><name><name>nodes</name><operator>.</operator><name>getLength</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
      <return>return <expr><operator>new</operator> <name><name>PluginInfo</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</return></block_content></block></if></if_stmt>
    <name><name>PluginInfo</name><index>[]</index></name> <name>configs</name> <operator>=</operator> <operator>new</operator> <name><name>PluginInfo</name><index>[<expr><call><name><name>nodes</name><operator>.</operator><name>getLength</name></name><argument_list>()</argument_list></call></expr>]</index></name></block></expr>;
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>nodes</name><operator>.</operator><name>getLength</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
      <comment type="line">// we don't require class in order to support predefined replica and node reporter classes</comment>
      <expr_stmt><expr><name><name>configs</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>new</operator> <call><name>PluginInfo</name><argument_list>(<argument><expr><call><name><name>nodes</name><operator>.</operator><name>item</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"SolrMetricReporter"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>PluginInfo</name></argument>&gt;</argument_list></name></type> <name>configs</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>boolean</name></type> <name>hasJmxReporter</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>nodes</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>nodes</name><operator>.</operator><name>getLength</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
      <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>nodes</name><operator>.</operator><name>getLength</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
        <comment type="line">// we don't require class in order to support predefined replica and node reporter classes</comment>
        <decl_stmt><decl><type><name>PluginInfo</name></type> <name>info</name> <init>= <expr><operator>new</operator> <call><name>PluginInfo</name><argument_list>(<argument><expr><call><name><name>nodes</name><operator>.</operator><name>item</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"SolrMetricReporter"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>clazz</name> <init>= <expr><name><name>info</name><operator>.</operator><name>className</name></name></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><name>clazz</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>clazz</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><call><name><name>SolrJmxReporter</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><name>hasJmxReporter</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
        <expr_stmt/></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></for>}</block>
        <call><name><name>configs</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></function>
     </block_content>}</block></for>
    <return>return <expr><name>configs</name></expr>;</return>
    <comment type="line">// if there's an MBean server running but there was no JMX reporter then add a default one</comment>
    <decl_stmt><decl><type><name>MBeanServer</name></type> <name>mBeanServer</name> <init>= <expr><call><name><name>JmxUtil</name><operator>.</operator><name>findFirstMBeanServer</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>mBeanServer</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <operator>!</operator><name>hasJmxReporter</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"MBean server found: "</literal> <operator>+</operator> <name>mBeanServer</name> <operator>+</operator> <literal type="string">", but no JMX reporters were configured - adding default JMX reporter."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>attributes</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>attributes</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"name"</literal></expr></argument>, <argument><expr><literal type="string">"default"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>attributes</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"class"</literal></expr></argument>, <argument><expr><call><name><name>SolrJmxReporter</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>PluginInfo</name></type> <name>defaultPlugin</name> <init>= <expr><operator>new</operator> <call><name>PluginInfo</name><argument_list>(<argument><expr><literal type="string">"reporter"</literal></expr></argument>, <argument><expr><name>attributes</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>configs</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>defaultPlugin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <return>return <expr><call><name><name>configs</name><operator>.</operator><name>toArray</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>PluginInfo</name><index>[<expr><call><name><name>configs</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></for>
   <function><type><specifier>private</specifier> <specifier>static</specifier> <name>PluginInfo</name></type> <name>getTransientCoreCacheFactoryPluginInfo</name><parameter_list>(<parameter><decl><type><name>Config</name></type> <name>config</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <decl_stmt><decl><type><name>Node</name></type> <name>node</name> <init>= <expr><call><name><name>config</name><operator>.</operator><name>getNode</name></name><argument_list>(<argument><expr><literal type="string">"solr/transientCoreCacheFactory"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>AnalyzeEvaluator</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>AnalyzeEvaluator</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">485f9c39906</literal><operator>..</operator><literal type="number">392930fd6d7</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>AnalyzeEvaluator</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>AnalyzeEvaluator</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">14</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">14</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@
  <operator>*</operator> <name>See</name> <name>the</name> <name>License</name></expr></expr_stmt> <for>for the specific language governing permissions and
  * limitations under the License.
  */
<comment type="block" format="javadoc">/**
 *
 */</comment>
 package org.apache.solr.handler<empty_stmt>;</empty_stmt></for>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>MoreLikeThisHandler</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>MoreLikeThisHandler</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9c86350d82a</literal><operator>..</operator><literal type="number">50ea711e9d5</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>MoreLikeThisHandler</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>MoreLikeThisHandler</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>handler</name></name>;</package>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Reader</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>invoke</name><operator>.</operator><name>MethodHandles</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>MalformedURLException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URL</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Iterator</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">481</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">479</literal></expr><operator>,</operator><expr><literal type="number">4</literal> @@ <specifier>public</specifier> <name>class</name> <name>MoreLikeThisHandler</name> extends <name>RequestHandlerBase</name>
   <specifier>public</specifier> <name>String</name> <call><name>getDescription</name><argument_list>()</argument_list></call> <block>{
     <return>return <expr><literal type="string">"Solr MoreLikeThis"</literal></expr>;</return>
   }</block></expr></expr_stmt>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name><name>URL</name><index>[]</index></name></type> <name>getDocs</name><parameter_list>()</parameter_list> <block>{<block_content>
    <try>try <block>{<block_content>
      <return>return <expr><operator>new</operator> <name><name>URL</name><index>[]</index></name> <block>{ <expr><operator>new</operator> <call><name>URL</name><argument_list>(<argument><expr><literal type="string">"http://wiki.apache.org/solr/MoreLikeThis"</literal></expr></argument>)</argument_list></call></expr> }</block></expr>;</return>
    </block_content>}</block>
    <catch>catch<parameter_list>( <parameter><decl><type><name>MalformedURLException</name></type> <name>ex</name></decl></parameter> )</parameter_list> <block>{<block_content> <return>return <expr><literal type="null">null</literal></expr>;</return> </block_content>}</block></catch></try>
  </block_content>}</block></function>
 </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>RealTimeGetHandler</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>RealTimeGetHandler</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">90493186358..bce374f4aea</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>RealTimeGetHandler</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>RealTimeGetHandler</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>api</name><operator>.</operator><name>Api</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>api</name><operator>.</operator><name>ApiBag</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>handler</name><operator>.</operator><name>component</name><operator>.</operator><name>*</name></name>;</import>
 
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URL</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">41</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>RealTimeGetHandler</name> extends <name>SearchHandler</name> <block>{
     <return>return <expr><literal type="string">"The realtime get handler"</literal></expr>;</return>
   }</block></expr></expr_stmt>
 
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name><name>URL</name><index>[]</index></name></type> <name>getDocs</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><literal type="null">null</literal></expr>;</return>
  </block_content>}</block></function>

   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name><name>Collection</name><argument_list type="generic">&lt;<argument><name>Api</name></argument>&gt;</argument_list></name></type> <name>getApis</name><parameter_list>()</parameter_list> <block>{<block_content>
     <return>return <expr><call><name><name>ApiBag</name><operator>.</operator><name>wrapRequestHandlers</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><literal type="string">"core.RealtimeGet"</literal></expr></argument>)</argument_list></call></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>ReplicationHandler</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>ReplicationHandler</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">98bf11ab376</literal><operator>..</operator><literal type="number">062f532d84e</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>ReplicationHandler</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>ReplicationHandler</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">90</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">90</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrEventListener</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>backup</name><operator>.</operator><name>repository</name><operator>.</operator><name>BackupRepository</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>backup</name><operator>.</operator><name>repository</name><operator>.</operator><name>LocalFileSystemRepository</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>snapshots</name><operator>.</operator><name>SolrSnapshotMetaDataManager</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricsMap</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricManager</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>handler</name><operator>.</operator><name>IndexFetcher</name><operator>.</operator><name>IndexFetchResult</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>request</name><operator>.</operator><name>SolrQueryRequest</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>response</name><operator>.</operator><name>SolrQueryResponse</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">162</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">164</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>ReplicationHandler</name> extends <name>RequestHandlerBase</name> implements <name>SolrCoreAw</name></expr></expr_stmt>
       </block_content>}</block></function>
       <return>return <expr><operator>new</operator> <call><name>CommitVersionInfo</name><argument_list>(<argument><expr><name>generation</name></expr></argument>, <argument><expr><name>version</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>String</name></type> <name>toString</name><parameter_list>()</parameter_list> <block>{<block_content>
      <return>return <expr><literal type="string">"generation="</literal> <operator>+</operator> <name>generation</name> <operator>+</operator> <literal type="string">",version="</literal> <operator>+</operator> <name>version</name></expr>;</return>
    </block_content>}</block></function>
   </block_content>}</block></function>
 
   <decl_stmt><decl><type><specifier>private</specifier> <name>IndexFetcher</name></type> <name>pollingIndexFetcher</name></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">851</literal></expr><operator>,</operator><expr><literal type="number">52</literal> <operator>+</operator><literal type="number">857</literal></expr><operator>,</operator><expr><literal type="number">56</literal> @@ <specifier>public</specifier> <name>class</name> <name>ReplicationHandler</name> extends <name>RequestHandlerBase</name> implements <name>SolrCoreAw</name></expr></expr_stmt>
   }</block></class>
 
   <function><annotation>@<name>Override</name></annotation>
  <annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unchecked"</literal></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>NamedList</name></type> <name>getStatistics</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>NamedList</name></type> <name>list</name> <init>= <expr><call><name><name>super</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>core</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>list</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"indexSize"</literal></expr></argument>, <argument><expr><call><name><name>NumberUtils</name><operator>.</operator><name>readableSize</name></name><argument_list>(<argument><expr><call><name><name>core</name><operator>.</operator><name>getIndexSize</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>CommitVersionInfo</name></type> <name>vInfo</name> <init>= <expr><ternary><condition><expr><operator>(</operator><name>core</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>core</name><operator>.</operator><name>isClosed</name></name><argument_list>()</argument_list></call><operator>)</operator></expr> ?</condition><then> <expr><call><name>getIndexVersion</name><argument_list>()</argument_list></call></expr></then><else>: <expr><literal type="null">null</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>list</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"indexVersion"</literal></expr></argument>, <argument><expr><ternary><condition><expr><literal type="null">null</literal> <operator>==</operator> <name>vInfo</name></expr> ?</condition><then> <expr><literal type="number">0</literal></expr> </then><else>: <expr><name><name>vInfo</name><operator>.</operator><name>version</name></name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>list</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>GENERATION</name></expr></argument>, <argument><expr><ternary><condition><expr><literal type="null">null</literal> <operator>==</operator> <name>vInfo</name></expr> ?</condition><then> <expr><literal type="number">0</literal></expr> </then><else>: <expr><name><name>vInfo</name><operator>.</operator><name>generation</name></name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt><expr><call><name><name>list</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"indexPath"</literal></expr></argument>, <argument><expr><call><name><name>core</name><operator>.</operator><name>getIndexDir</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>list</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"isMaster"</literal></expr></argument>, <argument><expr><call><name><name>String</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><name>isMaster</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>list</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"isSlave"</literal></expr></argument>, <argument><expr><call><name><name>String</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><name>isSlave</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <function><type><specifier>public</specifier> <name>void</name></type> <name>initializeMetrics</name><parameter_list>(<parameter><decl><type><name>SolrMetricManager</name></type> <name>manager</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>registry</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>scope</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>initializeMetrics</name></name><argument_list>(<argument><expr><name>manager</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><ternary><condition><expr><operator>(</operator><operator>)</operator> <operator>-&gt;</operator> <name>core</name> <operator>!=</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><call><name><name>NumberUtils</name><operator>.</operator><name>readableSize</name></name><argument_list>(<argument><expr><call><name><name>core</name><operator>.</operator><name>getIndexSize</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr> </then><else>: <expr><literal type="string">""</literal></expr></else></ternary></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>,
        <argument><expr><literal type="string">"indexSize"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><operator>(</operator><ternary><condition><expr><name>core</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>core</name><operator>.</operator><name>isClosed</name></name><argument_list>()</argument_list></call></expr> ?</condition><then> <expr><call><name>getIndexVersion</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr> </then><else>: <expr><literal type="string">""</literal></expr></else></ternary><operator>)</operator></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>,
        <argument><expr><literal type="string">"indexVersion"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><operator>(</operator><ternary><condition><expr><name>core</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>core</name><operator>.</operator><name>isClosed</name></name><argument_list>()</argument_list></call></expr> ?</condition><then> <expr><call><name>getIndexVersion</name><argument_list>()</argument_list></call><operator>.</operator><name>generation</name></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary><operator>)</operator></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>,
        <argument><expr><name>GENERATION</name></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><ternary><condition><expr><operator>(</operator><operator>)</operator> <operator>-&gt;</operator> <name>core</name> <operator>!=</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><call><name><name>core</name><operator>.</operator><name>getIndexDir</name></name><argument_list>()</argument_list></call></expr> </then><else>: <expr><literal type="string">""</literal></expr></else></ternary></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>,
        <argument><expr><literal type="string">"indexPath"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><name>isMaster</name></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>,
        <argument><expr><literal type="string">"isMaster"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><name>isSlave</name></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>,
        <argument><expr><literal type="string">"isSlave"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>MetricsMap</name></type> <name>fetcherMap</name> <init>= <expr><operator>new</operator> <call><name>MetricsMap</name><argument_list>(<argument><expr><lambda><parameter_list>(<parameter><decl><name>detailed</name></decl></parameter>, <parameter><decl><name>map</name></decl></parameter>)</parameter_list> -&gt; <block>{<block_content>
       <decl_stmt><decl><type><name>IndexFetcher</name></type> <name>fetcher</name> <init>= <expr><name>currentIndexFetcher</name></expr></init></decl>;</decl_stmt>
       <if_stmt><if>if <condition>(<expr><name>fetcher</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>list</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>MASTER_URL</name></expr></argument>, <argument><expr><call><name><name>fetcher</name><operator>.</operator><name>getMasterUrl</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>MASTER_URL</name></expr></argument>, <argument><expr><call><name><name>fetcher</name><operator>.</operator><name>getMasterUrl</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <if_stmt><if>if <condition>(<expr><call><name>getPollInterval</name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>list</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>POLL_INTERVAL</name></expr></argument>, <argument><expr><call><name>getPollInterval</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>POLL_INTERVAL</name></expr></argument>, <argument><expr><call><name>getPollInterval</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
        <expr_stmt><expr><call><name><name>list</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"isPollingDisabled"</literal></expr></argument>, <argument><expr><call><name><name>String</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><call><name>isPollingDisabled</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>list</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"isReplicating"</literal></expr></argument>, <argument><expr><call><name><name>String</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><call><name>isReplicating</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"isPollingDisabled"</literal></expr></argument>, <argument><expr><call><name>isPollingDisabled</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"isReplicating"</literal></expr></argument>, <argument><expr><call><name>isReplicating</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <decl_stmt><decl><type><name>long</name></type> <name>elapsed</name> <init>= <expr><call><name><name>fetcher</name><operator>.</operator><name>getReplicationTimeElapsed</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>long</name></type> <name>val</name> <init>= <expr><call><name><name>fetcher</name><operator>.</operator><name>getTotalBytesDownloaded</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <if_stmt><if>if <condition>(<expr><name>elapsed</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>list</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"timeElapsed"</literal></expr></argument>, <argument><expr><name>elapsed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>list</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"bytesDownloaded"</literal></expr></argument>, <argument><expr><name>val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>list</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"downloadSpeed"</literal></expr></argument>, <argument><expr><name>val</name> <operator>/</operator> <name>elapsed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"timeElapsed"</literal></expr></argument>, <argument><expr><name>elapsed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"bytesDownloaded"</literal></expr></argument>, <argument><expr><name>val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"downloadSpeed"</literal></expr></argument>, <argument><expr><name>val</name> <operator>/</operator> <name>elapsed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
         <decl_stmt><decl><type><name>Properties</name></type> <name>props</name> <init>= <expr><call><name>loadReplicationProperties</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>addVal</name><argument_list>(<argument><expr><name>list</name></expr></argument>, <argument><expr><name><name>IndexFetcher</name><operator>.</operator><name>PREVIOUS_CYCLE_TIME_TAKEN</name></name></expr></argument>, <argument><expr><name>props</name></expr></argument>, <argument><expr><name><name>Long</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>addVal</name><argument_list>(<argument><expr><name>list</name></expr></argument>, <argument><expr><name><name>IndexFetcher</name><operator>.</operator><name>INDEX_REPLICATED_AT</name></name></expr></argument>, <argument><expr><name>props</name></expr></argument>, <argument><expr><name><name>Date</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>addVal</name><argument_list>(<argument><expr><name>list</name></expr></argument>, <argument><expr><name><name>IndexFetcher</name><operator>.</operator><name>CONF_FILES_REPLICATED_AT</name></name></expr></argument>, <argument><expr><name>props</name></expr></argument>, <argument><expr><name><name>Date</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>addVal</name><argument_list>(<argument><expr><name>list</name></expr></argument>, <argument><expr><name><name>IndexFetcher</name><operator>.</operator><name>REPLICATION_FAILED_AT</name></name></expr></argument>, <argument><expr><name>props</name></expr></argument>, <argument><expr><name><name>Date</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>addVal</name><argument_list>(<argument><expr><name>list</name></expr></argument>, <argument><expr><name><name>IndexFetcher</name><operator>.</operator><name>TIMES_FAILED</name></name></expr></argument>, <argument><expr><name>props</name></expr></argument>, <argument><expr><name><name>Integer</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>addVal</name><argument_list>(<argument><expr><name>list</name></expr></argument>, <argument><expr><name><name>IndexFetcher</name><operator>.</operator><name>TIMES_INDEX_REPLICATED</name></name></expr></argument>, <argument><expr><name>props</name></expr></argument>, <argument><expr><name><name>Integer</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>addVal</name><argument_list>(<argument><expr><name>list</name></expr></argument>, <argument><expr><name><name>IndexFetcher</name><operator>.</operator><name>LAST_CYCLE_BYTES_DOWNLOADED</name></name></expr></argument>, <argument><expr><name>props</name></expr></argument>, <argument><expr><name><name>Long</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>addVal</name><argument_list>(<argument><expr><name>list</name></expr></argument>, <argument><expr><name><name>IndexFetcher</name><operator>.</operator><name>TIMES_CONFIG_REPLICATED</name></name></expr></argument>, <argument><expr><name>props</name></expr></argument>, <argument><expr><name><name>Integer</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>addVal</name><argument_list>(<argument><expr><name>list</name></expr></argument>, <argument><expr><name><name>IndexFetcher</name><operator>.</operator><name>CONF_FILES_REPLICATED</name></name></expr></argument>, <argument><expr><name>props</name></expr></argument>, <argument><expr><name><name>String</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>addVal</name><argument_list>(<argument><expr><name>map</name></expr></argument>, <argument><expr><name><name>IndexFetcher</name><operator>.</operator><name>PREVIOUS_CYCLE_TIME_TAKEN</name></name></expr></argument>, <argument><expr><name>props</name></expr></argument>, <argument><expr><name><name>Long</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>addVal</name><argument_list>(<argument><expr><name>map</name></expr></argument>, <argument><expr><name><name>IndexFetcher</name><operator>.</operator><name>INDEX_REPLICATED_AT</name></name></expr></argument>, <argument><expr><name>props</name></expr></argument>, <argument><expr><name><name>Date</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>addVal</name><argument_list>(<argument><expr><name>map</name></expr></argument>, <argument><expr><name><name>IndexFetcher</name><operator>.</operator><name>CONF_FILES_REPLICATED_AT</name></name></expr></argument>, <argument><expr><name>props</name></expr></argument>, <argument><expr><name><name>Date</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>addVal</name><argument_list>(<argument><expr><name>map</name></expr></argument>, <argument><expr><name><name>IndexFetcher</name><operator>.</operator><name>REPLICATION_FAILED_AT</name></name></expr></argument>, <argument><expr><name>props</name></expr></argument>, <argument><expr><name><name>Date</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>addVal</name><argument_list>(<argument><expr><name>map</name></expr></argument>, <argument><expr><name><name>IndexFetcher</name><operator>.</operator><name>TIMES_FAILED</name></name></expr></argument>, <argument><expr><name>props</name></expr></argument>, <argument><expr><name><name>Integer</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>addVal</name><argument_list>(<argument><expr><name>map</name></expr></argument>, <argument><expr><name><name>IndexFetcher</name><operator>.</operator><name>TIMES_INDEX_REPLICATED</name></name></expr></argument>, <argument><expr><name>props</name></expr></argument>, <argument><expr><name><name>Integer</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>addVal</name><argument_list>(<argument><expr><name>map</name></expr></argument>, <argument><expr><name><name>IndexFetcher</name><operator>.</operator><name>LAST_CYCLE_BYTES_DOWNLOADED</name></name></expr></argument>, <argument><expr><name>props</name></expr></argument>, <argument><expr><name><name>Long</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>addVal</name><argument_list>(<argument><expr><name>map</name></expr></argument>, <argument><expr><name><name>IndexFetcher</name><operator>.</operator><name>TIMES_CONFIG_REPLICATED</name></name></expr></argument>, <argument><expr><name>props</name></expr></argument>, <argument><expr><name><name>Integer</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>addVal</name><argument_list>(<argument><expr><name>map</name></expr></argument>, <argument><expr><name><name>IndexFetcher</name><operator>.</operator><name>CONF_FILES_REPLICATED</name></name></expr></argument>, <argument><expr><name>props</name></expr></argument>, <argument><expr><name><name>String</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if></if_stmt>
      <if_stmt><if>if <condition>(<expr><name>isMaster</name></expr>)</condition> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>includeConfFiles</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name><name>list</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"confFilesToReplicate"</literal></expr></argument>, <argument><expr><name>includeConfFiles</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <expr_stmt><expr><call><name><name>list</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>REPLICATE_AFTER</name></expr></argument>, <argument><expr><call><name>getReplicateAfterStrings</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>list</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"replicationEnabled"</literal></expr></argument>, <argument><expr><call><name><name>String</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><call><name><name>replicationEnabled</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></lambda></expr></argument></argument_list></call></expr></init></decl></decl_stmt>
    <return>return <expr><name>list</name></expr>;</return>
    </block_content>}</block></function>)</block_content></block><empty_stmt>;</empty_stmt></if></if_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><name>fetcherMap</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"fetcher"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><ternary><condition><expr><operator>(</operator><operator>)</operator> <operator>-&gt;</operator> <name>isMaster</name> <operator>&amp;&amp;</operator> <name>includeConfFiles</name> <operator>!=</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><name>includeConfFiles</name></expr> </then><else>: <expr><literal type="string">""</literal></expr></else></ternary></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>,
        <argument><expr><literal type="string">"confFilesToReplicate"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><ternary><condition><expr><operator>(</operator><operator>)</operator> <operator>-&gt;</operator> <name>isMaster</name></expr> ?</condition><then> <expr><call><name>getReplicateAfterStrings</name><argument_list>()</argument_list></call></expr> </then><else>: <expr><name><name>Collections</name><operator>.</operator></name>&lt;<name>String</name><operator>&gt;</operator><call><name>emptyList</name><argument_list>()</argument_list></call></expr></else></ternary></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>,
        <argument><expr><name>REPLICATE_AFTER</name></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><name>isMaster</name> <operator>&amp;&amp;</operator> <call><name><name>replicationEnabled</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>,
        <argument><expr><literal type="string">"replicationEnabled"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
   <comment type="block" format="javadoc">/**
@@ -1064,24 +1074,39 @@ public class ReplicationHandler extends RequestHandlerBase implements SolrCoreAw
   }
 
   private void addVal(NamedList&lt;Object&gt; nl, String key, Properties props, Class clzz) {
    Object val = formatVal(key, props, clzz);
    if (val != null) {
      nl.add(key, val);
    }
  }

  private void addVal(Map&lt;String, Object&gt; map, String key, Properties props, Class clzz) {
    Object val = formatVal(key, props, clzz);
    if (val != null) {
      map.put(key, val);
    }
  }

  private Object formatVal(String key, Properties props, Class clzz) {
     String s = props.getProperty(key);
    if (s == null || s.trim().length() == 0) return;
    if (s == null || s.trim().length() == 0) return null;
     if (clzz == Date.class) {
       try {
         Long l = Long.parseLong(s);
        nl.add(key, new Date(l).toString());
      } catch (NumberFormatException e) {/*no op*/</comment> }
        return <expr_stmt><expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><name>l</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      } catch <expr_stmt><expr><operator>(</operator><name>NumberFormatException</name> <name>e</name><operator>)</operator> <block>{
        <return>return <expr><literal type="null">null</literal></expr>;</return>
      }</block></expr></expr_stmt>
     } else <if_stmt><if>if <condition>(<expr><name>clzz</name> <operator>==</operator> <name><name>List</name><operator>.</operator><name>class</name></name></expr>)</condition> <block>{<block_content>
       <decl_stmt><decl><type><name>String</name></type> <name><name>ss</name><index>[]</index></name> <init>= <expr><call><name><name>s</name><operator>.</operator><name>split</name></name><argument_list>(<argument><expr><literal type="string">","</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>l</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <for>for <control>(<init><decl><type><name>String</name></type> <name>s1</name> <range>: <expr><name>ss</name></expr></range></decl></init>)</control> <block>{<block_content>
         <expr_stmt><expr><call><name><name>l</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Date</name><argument_list>(<argument><expr><call><name><name>Long</name><operator>.</operator><name>parseLong</name></name><argument_list>(<argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></for>
      <expr_stmt><expr><call><name><name>nl</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>key</name></expr></argument>, <argument><expr><name>l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <return>return <expr><name>l</name></expr>;</return>
     </block_content>}</block></if> <else>else <block>{<block_content>
      <expr_stmt><expr><call><name><name>nl</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>key</name></expr></argument>, <argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <return>return <expr><name>s</name></expr>;</return>
     </block_content>}</block></else></if_stmt>

   }
 
   private <function><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>getReplicateAfterStrings</name><parameter_list>()</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>RequestHandlerBase</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>RequestHandlerBase</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">1958e11f587</literal><operator>..</operator><literal type="number">421976801b2</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>RequestHandlerBase</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>RequestHandlerBase</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>handler</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>invoke</name><operator>.</operator><name>MethodHandles</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URL</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 
<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricRegistry</name></name>;</import>
 <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>collect</name><operator>.</operator><name>ImmutableList</name></name>;</import>
 <import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>Counter</name></name>;</import>
 <import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>Meter</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@</expr></expr_stmt> <import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>Timer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>SolrParams</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>SimpleOrderedMap</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>SuppressForbidden</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>PluginBag</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>PluginInfo</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoMBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricManager</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricProducer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>request</name><operator>.</operator><name>SolrQueryRequest</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>SolrPluginUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>api</name><operator>.</operator><name>Api</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>api</name><operator>.</operator><name>ApiBag</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>api</name><operator>.</operator><name>ApiSupport</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>stats</name><operator>.</operator><name>MetricUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">51</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">51</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>RequestParams</name><operator>.</operator><name>USEPARAM</name></name>;</import>
 <comment type="block" format="javadoc">/**
  *
  */</comment>
<class><specifier>public</specifier> <specifier>abstract</specifier> class <name>RequestHandlerBase</name> <super_list><implements>implements <super><name>SolrRequestHandler</name></super>, <super><name>SolrInfoMBean</name></super>, <super><name>SolrMetricProducer</name></super>, <super><name>NestedRequestHandler</name></super>,<super><name>ApiSupport</name></super></implements></super_list> <block>{
<class><specifier>public</specifier> <specifier>abstract</specifier> class <name>RequestHandlerBase</name> <super_list><implements>implements <super><name>SolrRequestHandler</name></super>, <super><name>SolrInfoBean</name></super>, <super><name>SolrMetricProducer</name></super>, <super><name>NestedRequestHandler</name></super>,<super><name>ApiSupport</name></super></implements></super_list> <block>{
 
   <decl_stmt><decl><type><specifier>protected</specifier> <name>NamedList</name></type> <name>initArgs</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>protected</specifier> <name>SolrParams</name></type> <name>defaults</name></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">74</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">74</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>RequestHandlerBase</name> implements <name>SolrRequestHandler</name></expr><operator>,</operator> <expr><name>SolrInfo</name>
 
   <specifier>private</specifier> <name>PluginInfo</name> <name>pluginInfo</name></expr>;</expr_stmt>
 
  <decl_stmt><decl><type><specifier>private</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>metricNames</name> <init>= <expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>MetricRegistry</name></type> <name>registry</name></decl>;</decl_stmt>

   <constructor><annotation>@<name>SuppressForbidden</name><argument_list>(<argument><expr><name>reason</name> <operator>=</operator> <literal type="string">"Need currentTimeMillis, used only for stats output"</literal></expr></argument>)</argument_list></annotation>
   <specifier>public</specifier> <name>RequestHandlerBase</name><parameter_list>()</parameter_list> <block>{<block_content>
     <expr_stmt><expr><name>handlerStart</name> <operator>=</operator> <call><name><name>System</name><operator>.</operator><name>currentTimeMillis</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">138</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">141</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>RequestHandlerBase</name> implements <name>SolrRequestHandler</name></expr><operator>,</operator> <expr><name>SolrInfo</name>
 
   @<name>Override</name>
   <specifier>public</specifier> <name>void</name> <call><name>initializeMetrics</name><argument_list>(<argument><expr><name>SolrMetricManager</name> <name>manager</name></expr></argument>, <argument><expr><name>String</name> <name>registryName</name></expr></argument>, <argument><expr><name>String</name> <name>scope</name></expr></argument>)</argument_list></call> <block>{
    <expr><name>numErrors</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>meter</name></name><argument_list>(<argument><expr><name>registryName</name></expr></argument>, <argument><expr><literal type="string">"errors"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>numServerErrors</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>meter</name></name><argument_list>(<argument><expr><name>registryName</name></expr></argument>, <argument><expr><literal type="string">"serverErrors"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>numClientErrors</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>meter</name></name><argument_list>(<argument><expr><name>registryName</name></expr></argument>, <argument><expr><literal type="string">"clientErrors"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>numTimeouts</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>meter</name></name><argument_list>(<argument><expr><name>registryName</name></expr></argument>, <argument><expr><literal type="string">"timeouts"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>requests</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>counter</name></name><argument_list>(<argument><expr><name>registryName</name></expr></argument>, <argument><expr><literal type="string">"requests"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>requestTimes</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>timer</name></name><argument_list>(<argument><expr><name>registryName</name></expr></argument>, <argument><expr><literal type="string">"requestTimes"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>totalTime</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>counter</name></name><argument_list>(<argument><expr><name>registryName</name></expr></argument>, <argument><expr><literal type="string">"totalTime"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>registry</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>registry</name></name><argument_list>(<argument><expr><name>registryName</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>numErrors</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>meter</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registryName</name></expr></argument>, <argument><expr><literal type="string">"errors"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>numServerErrors</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>meter</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registryName</name></expr></argument>, <argument><expr><literal type="string">"serverErrors"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>numClientErrors</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>meter</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registryName</name></expr></argument>, <argument><expr><literal type="string">"clientErrors"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>numTimeouts</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>meter</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registryName</name></expr></argument>, <argument><expr><literal type="string">"timeouts"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>requests</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>counter</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registryName</name></expr></argument>, <argument><expr><literal type="string">"requests"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>requestTimes</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>timer</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registryName</name></expr></argument>, <argument><expr><literal type="string">"requestTimes"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;
    <expr><name>totalTime</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>counter</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registryName</name></expr></argument>, <argument><expr><literal type="string">"totalTime"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;
    <expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registryName</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><name>handlerStart</name></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"handlerStart"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;
   }</block>
 
   <specifier>public</specifier> <specifier>static</specifier> <name>SolrParams</name> <call><name>getSolrParamsFromNamedList</name><argument_list>(<argument><expr><name>NamedList</name> <name>args</name></expr></argument>, <argument><expr><name>String</name> <name>key</name></expr></argument>)</argument_list></call> <block>{
@@ <expr><operator>-</operator><literal type="number">225</literal></expr>,<expr><literal type="number">24</literal> <operator>+</operator><literal type="number">230</literal></expr>,<expr><literal type="number">21</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>RequestHandlerBase</name> implements <name>SolrRequestHandler</name></expr>, <expr><name>SolrInfo</name>
 
   @<name>Override</name>
   <specifier>public</specifier> <specifier>abstract</specifier> <name>String</name> <call><name>getDescription</name><argument_list>()</argument_list></call></expr>;
  @<expr><name>Override</name>
  <specifier>public</specifier> <name>String</name> <call><name>getSource</name><argument_list>()</argument_list></call> <block>{ <return>return <expr><literal type="null">null</literal></expr>;</return></block></expr> }</block>
  
  @<name>Override</name>
  <specifier>public</specifier> <name>String</name> <call><name>getVersion</name><argument_list>()</argument_list></call> <block>{
    <return>return <expr><call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getPackage</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSpecificationVersion</name><argument_list>()</argument_list></call></expr>;</return>
  }</block></expr></expr_stmt>
  

   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>Category</name></type> <name>getCategory</name><parameter_list>()</parameter_list> <block>{<block_content>
     <return>return <expr><name><name>Category</name><operator>.</operator><name>QUERY</name></name></expr>;</return>
   </block_content>}</block></function>
 
   <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name><name>URL</name><index>[]</index></name></type> <name>getDocs</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><literal type="null">null</literal></expr>;</return>  <comment type="line">// this can be overridden, but not required</comment>
  <function><type><specifier>public</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>getMetricNames</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>metricNames</name></expr>;</return>
   </block_content>}</block></function>
 
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>MetricRegistry</name></type> <name>getMetricRegistry</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>registry</name></expr>;</return>
  </block_content>}</block></function>
 
   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>SolrRequestHandler</name></type> <name>getSubHandler</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>subPath</name></decl></parameter>)</parameter_list> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">285</literal></expr><operator>,</operator><expr><literal type="number">22</literal> <operator>+</operator><literal type="number">287</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>RequestHandlerBase</name> implements <name>SolrRequestHandler</name></expr><operator>,</operator> <expr><name>SolrInfo</name></expr></expr_stmt>
     <return>return  <expr><name>pluginInfo</name></expr>;</return>
   </block_content>}</block></function>
 

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>getStatistics</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>lst</name> <init>= <expr><operator>new</operator> <call><name><name>SimpleOrderedMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"handlerStart"</literal></expr></argument>,<argument><expr><name>handlerStart</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"requests"</literal></expr></argument>, <argument><expr><call><name><name>requests</name><operator>.</operator><name>getCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"errors"</literal></expr></argument>, <argument><expr><call><name><name>numErrors</name><operator>.</operator><name>getCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"serverErrors"</literal></expr></argument>, <argument><expr><call><name><name>numServerErrors</name><operator>.</operator><name>getCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"clientErrors"</literal></expr></argument>, <argument><expr><call><name><name>numClientErrors</name><operator>.</operator><name>getCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"timeouts"</literal></expr></argument>, <argument><expr><call><name><name>numTimeouts</name><operator>.</operator><name>getCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="line">// convert totalTime to ms</comment>
    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"totalTime"</literal></expr></argument>, <argument><expr><call><name><name>MetricUtils</name><operator>.</operator><name>nsToMs</name></name><argument_list>(<argument><expr><call><name><name>totalTime</name><operator>.</operator><name>getCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>MetricUtils</name><operator>.</operator><name>addMetrics</name></name><argument_list>(<argument><expr><name>lst</name></expr></argument>, <argument><expr><name>requestTimes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>lst</name></expr>;</return>
  </block_content>}</block></function>

   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name><name>Collection</name><argument_list type="generic">&lt;<argument><name>Api</name></argument>&gt;</argument_list></name></type> <name>getApis</name><parameter_list>()</parameter_list> <block>{<block_content>
     <return>return <expr><call><name><name>ImmutableList</name><operator>.</operator><name>of</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>ApiBag</name><operator>.</operator><name>ReqHandlerToApi</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><call><name><name>ApiBag</name><operator>.</operator><name>constructSpec</name></name><argument_list>(<argument><expr><name>pluginInfo</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>SolrConfigHandler</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>SolrConfigHandler</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2660cba8354</literal><operator>..</operator><literal type="number">04fd4c8e8cf</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>SolrConfigHandler</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>SolrConfigHandler</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">702</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">702</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrConfigHandler</name> extends <name>RequestHandlerBase</name> implements <name>SolrCoreAwa</name></expr></expr_stmt>
     <return>return <expr><literal type="string">"Edit solrconfig.xml"</literal></expr>;</return>
   </block_content>}</block></function>
 

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>String</name></type> <name>getVersion</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getPackage</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSpecificationVersion</name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>

   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>Category</name></type> <name>getCategory</name><parameter_list>()</parameter_list> <block>{<block_content>
     <return>return <expr><name><name>Category</name><operator>.</operator><name>ADMIN</name></name></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>StandardRequestHandler</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>StandardRequestHandler</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d5eae080cfa</name><operator>..</operator><name>f167b1d5dc3</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>StandardRequestHandler</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>StandardRequestHandler</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>handler</name></name>;</package>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>handler</name><operator>.</operator><name>component</name><operator>.</operator><name>*</name></name>;</import>
 
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>MalformedURLException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URL</name></name>;</import>

 <comment type="block" format="javadoc">/**
  *
  *
@@ -47,14 +44,6 @@ public class StandardRequestHandler extends SearchHandler
   public String getDescription() {
     return "The standard Solr request handler";
   }

  @Override
  public URL[] getDocs() {
    try {
      return new URL[] { new URL("http://wiki.apache.org/solr/StandardRequestHandler") };
    }
    catch( MalformedURLException ex ) { return null; }
  }
 }
 
 
diff --git a/solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler.java b/solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler.java
index 275ec18a2d7..67463327e2f 100644
-- a/solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler.java
++ b/solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler.java
@@ -121,7 +121,7 @@ public class CoreAdminHandler extends RequestHandlerBase implements PermissionNa
   @Override
   public void initializeMetrics(SolrMetricManager manager, String registryName, String scope) {
     super.initializeMetrics(manager, registryName, scope);
    parallelExecutor = MetricUtils.instrumentedExecutorService(parallelExecutor, manager.registry(registryName),
    parallelExecutor = MetricUtils.instrumentedExecutorService(parallelExecutor, this, manager.registry(registryName),
         SolrMetricManager.mkName("parallelCoreAdminExecutor", getCategory().name(),scope, "threadPool"));
   }
   @Override
diff --git a/solr/core/src/java/org/apache/solr/handler/admin/LukeRequestHandler.java b/solr/core/src/java/org/apache/solr/handler/admin/LukeRequestHandler.java
index 8e0b1fb8cc7..2db04d9d0b6 100644
-- a/solr/core/src/java/org/apache/solr/handler/admin/LukeRequestHandler.java
++ b/solr/core/src/java/org/apache/solr/handler/admin/LukeRequestHandler.java
@@ -22,8 +22,6 @@ import static org.apache.lucene.index.IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_
 
 import java.io.IOException;
 import java.lang.invoke.MethodHandles;
import java.net.MalformedURLException;
import java.net.URL;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Date;
@@ -707,14 +705,6 @@ public class LukeRequestHandler extends RequestHandlerBase
     return Category.ADMIN;
   }
 
  @Override
  public URL[] getDocs() {
    try {
      return new URL[] { new URL("http://wiki.apache.org/solr/LukeRequestHandler") };
    }
    catch( MalformedURLException ex ) { return null; }
  }

   ///////////////////////////////////////////////////////////////////////////////////////
 
   static class TermHistogram
diff --git a/solr/core/src/java/org/apache/solr/handler/admin/MetricsCollectorHandler.java b/solr/core/src/java/org/apache/solr/handler/admin/MetricsCollectorHandler.java
index de39a615606..8474f55acff 100644
-- a/solr/core/src/java/org/apache/solr/handler/admin/MetricsCollectorHandler.java
++ b/solr/core/src/java/org/apache/solr/handler/admin/MetricsCollectorHandler.java
@@ -134,7 +134,7 @@ public class MetricsCollectorHandler extends RequestHandlerBase {
 
   @Override
   public String getDescription() {
    return "Handler for collecting and aggregating metric reports.";
    return "Handler for collecting and aggregating SolrCloud metric reports.";
   }
 
   private static class MetricUpdateProcessor extends UpdateRequestProcessor {
diff --git a/solr/core/src/java/org/apache/solr/handler/admin/MetricsHandler.java b/solr/core/src/java/org/apache/solr/handler/admin/MetricsHandler.java
index 4dc86d97855..54ab092aa33 100644
-- a/solr/core/src/java/org/apache/solr/handler/admin/MetricsHandler.java
++ b/solr/core/src/java/org/apache/solr/handler/admin/MetricsHandler.java
@@ -19,6 +19,7 @@ package org.apache.solr.handler.admin;
 
 import java.util.ArrayList;
 import java.util.Collections;
import java.util.EnumSet;
 import java.util.HashSet;
 import java.util.List;
 import java.util.Set;
@@ -52,6 +53,13 @@ public class MetricsHandler extends RequestHandlerBase implements PermissionName
   final SolrMetricManager metricManager;
 
   public static final String COMPACT_PARAM = "compact";
  public static final String PREFIX_PARAM = "prefix";
  public static final String REGEX_PARAM = "regex";
  public static final String REGISTRY_PARAM = "registry";
  public static final String GROUP_PARAM = "group";
  public static final String TYPE_PARAM = "type";

  public static final String ALL = "all";
 
   public MetricsHandler() {
     this.container = null;
@@ -84,29 +92,38 @@ public class MetricsHandler extends RequestHandlerBase implements PermissionName
     for (String registryName : requestedRegistries) {
       MetricRegistry registry = metricManager.registry(registryName);
       response.add(registryName, MetricUtils.toNamedList(registry, metricFilters, mustMatchFilter, false,
          false, compact, null));
          false, compact));
     }
     rsp.getValues().add("metrics", response);
   }
 
   private MetricFilter parseMustMatchFilter(SolrQueryRequest req) {
    String[] prefixes = req.getParams().getParams("prefix");
    MetricFilter mustMatchFilter;
    String[] prefixes = req.getParams().getParams(PREFIX_PARAM);
    MetricFilter prefixFilter = null;
     if (prefixes != null &amp;&amp; prefixes.length &gt; 0) {
       Set&lt;String&gt; prefixSet = new HashSet&lt;&gt;();
       for (String prefix : prefixes) {
         prefixSet.addAll(StrUtils.splitSmart(prefix, ','));
       }
      mustMatchFilter = new SolrMetricManager.PrefixFilter((String[])prefixSet.toArray(new String[prefixSet.size()]));
    } else  {
      prefixFilter = new SolrMetricManager.PrefixFilter((String[])prefixSet.toArray(new String[prefixSet.size()]));
    }
    String[] regexes = req.getParams().getParams(REGEX_PARAM);
    MetricFilter regexFilter = null;
    if (regexes != null &amp;&amp; regexes.length &gt; 0) {
      regexFilter = new SolrMetricManager.RegexFilter(regexes);
    }
    MetricFilter mustMatchFilter;
    if (prefixFilter == null &amp;&amp; regexFilter == null) {
       mustMatchFilter = MetricFilter.ALL;
    } else {
      mustMatchFilter = new SolrMetricManager.OrFilter(prefixFilter, regexFilter);
     }
     return mustMatchFilter;
   }
 
   private Set&lt;String&gt; parseRegistries(SolrQueryRequest req) {
    String[] groupStr = req.getParams().getParams("group");
    String[] registryStr = req.getParams().getParams("registry");
    String[] groupStr = req.getParams().getParams(GROUP_PARAM);
    String[] registryStr = req.getParams().getParams(REGISTRY_PARAM);
     if ((groupStr == null || groupStr.length == 0) &amp;&amp; (registryStr == null || registryStr.length == 0)) {
       // return all registries
       return container.getMetricManager().registryNames();
@@ -118,7 +135,7 @@ public class MetricsHandler extends RequestHandlerBase implements PermissionName
       for (String g : groupStr) {
         List&lt;String&gt; split = StrUtils.splitSmart(g, ',');
         for (String s : split) {
          if (s.trim().equals("all")) {
          if (s.trim().equals(ALL)) {
             allRegistries = true;
             break;
           }
@@ -137,7 +154,7 @@ public class MetricsHandler extends RequestHandlerBase implements PermissionName
       for (String r : registryStr) {
         List&lt;String&gt; split = StrUtils.splitSmart(r, ',');
         for (String s : split) {
          if (s.trim().equals("all")) {
          if (s.trim().equals(ALL)) {
             allRegistries = true;
             break;
           }
@@ -161,7 +178,7 @@ public class MetricsHandler extends RequestHandlerBase implements PermissionName
   }
 
   private List&lt;MetricType&gt; parseMetricTypes(SolrQueryRequest req) {
    String[] typeStr = req.getParams().getParams("type");
    String[] typeStr = req.getParams().getParams(TYPE_PARAM);
     List&lt;String&gt; types = Collections.emptyList();
     if (typeStr != null &amp;&amp; typeStr.length &gt; 0)  {
       types = new ArrayList&lt;&gt;();
@@ -176,7 +193,8 @@ public class MetricsHandler extends RequestHandlerBase implements PermissionName
         metricTypes = types.stream().map(String::trim).map(MetricType::valueOf).collect(Collectors.toList());
       }
     } catch (IllegalArgumentException e) {
      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, "Invalid metric type in: " + types + " specified. Must be one of (all, meter, timer, histogram, counter, gauge)", e);
      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, "Invalid metric type in: " + types +
          " specified. Must be one of " + MetricType.SUPPORTED_TYPES_MSG, e);
     }
     return metricTypes;
   }
@@ -199,6 +217,8 @@ public class MetricsHandler extends RequestHandlerBase implements PermissionName
     gauge(Gauge.class),
     all(null);
 
    public static final String SUPPORTED_TYPES_MSG = EnumSet.allOf(MetricType.class).toString();

     private final Class klass;
 
     MetricType(Class klass) {
diff --git a/solr/core/src/java/org/apache/solr/handler/admin/PluginInfoHandler.java b/solr/core/src/java/org/apache/solr/handler/admin/PluginInfoHandler.java
index a096e798360..8bdc478788a 100644
-- a/solr/core/src/java/org/apache/solr/handler/admin/PluginInfoHandler.java
++ b/solr/core/src/java/org/apache/solr/handler/admin/PluginInfoHandler.java
@@ -16,14 +16,12 @@
  */</comment>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>handler</name><operator>.</operator><name>admin</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URL</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>SolrParams</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>SimpleOrderedMap</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrCore</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoMBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>handler</name><operator>.</operator><name>RequestHandlerBase</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>request</name><operator>.</operator><name>SolrQueryRequest</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>response</name><operator>.</operator><name>SolrQueryResponse</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">48</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">46</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>PluginInfoHandler</name> extends <name>RequestHandlerBase</name>
   <specifier>private</specifier> <specifier>static</specifier> <name><name>SimpleOrderedMap</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>&gt;</argument_list></name> <call><name>getSolrInfoBeans</name><argument_list>( <argument><expr><name>SolrCore</name> <name>core</name></expr></argument>, <argument><expr><name>boolean</name> <name>stats</name></expr></argument> )</argument_list></call>
   <block>{
     <expr><name><name>SimpleOrderedMap</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>&gt;</argument_list></name> <name>list</name> <operator>=</operator> <operator>new</operator> <call><name><name>SimpleOrderedMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
    <for>for <control>(<init><decl><type><name><name>SolrInfoMBean</name><operator>.</operator><name>Category</name></name></type> <name>cat</name> <range>: <expr><call><name><name>SolrInfoMBean</name><operator>.</operator><name>Category</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control><block type="pseudo"><block_content> 
    <for>for <control>(<init><decl><type><name><name>SolrInfoBean</name><operator>.</operator><name>Category</name></name></type> <name>cat</name> <range>: <expr><call><name><name>SolrInfoBean</name><operator>.</operator><name>Category</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control>
     <block>{<block_content>
       <decl_stmt><decl><type><name><name>SimpleOrderedMap</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>category</name> <init>= <expr><operator>new</operator> <call><name><name>SimpleOrderedMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>list</name><operator>.</operator><name>add</name></name><argument_list>( <argument><expr><call><name><name>cat</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>category</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>SolrInfoMBean</name></argument>&gt;</argument_list></name></type> <name>reg</name> <init>= <expr><call><name><name>core</name><operator>.</operator><name>getInfoRegistry</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>SolrInfoMBean</name></argument>&gt;</argument_list></name></name></type> <name>entry</name> <range>: <expr><call><name><name>reg</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
        <decl_stmt><decl><type><name>SolrInfoMBean</name></type> <name>m</name> <init>= <expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>SolrInfoBean</name></argument>&gt;</argument_list></name></type> <name>reg</name> <init>= <expr><call><name><name>core</name><operator>.</operator><name>getInfoRegistry</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>SolrInfoBean</name></argument>&gt;</argument_list></name></name></type> <name>entry</name> <range>: <expr><call><name><name>reg</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
        <decl_stmt><decl><type><name>SolrInfoBean</name></type> <name>m</name> <init>= <expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <if_stmt><if>if <condition>(<expr><call><name><name>m</name><operator>.</operator><name>getCategory</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <name>cat</name></expr>)</condition><block type="pseudo"><block_content> <continue>continue;</continue></block_content></block></if></if_stmt>
 
         <decl_stmt><decl><type><name>String</name></type> <name>na</name> <init>= <expr><literal type="string">"Not Declared"</literal></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">62</literal></expr><operator>,</operator><expr><literal type="number">21</literal> <operator>+</operator><literal type="number">60</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>PluginInfoHandler</name> extends <name>RequestHandlerBase</name>
         <call><name><name>category</name><operator>.</operator><name>add</name></name><argument_list>( <argument><expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>info</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
 
         <expr_stmt><expr><call><name><name>info</name><operator>.</operator><name>add</name></name><argument_list>( <argument><expr><name>NAME</name></expr></argument>,          <argument><expr><operator>(</operator><ternary><condition><expr><call><name><name>m</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call>       <operator>!=</operator><literal type="null">null</literal></expr> ?</condition><then> <expr><call><name><name>m</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr>        </then><else>: <expr><name>na</name></expr></else></ternary><operator>)</operator></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>info</name><operator>.</operator><name>add</name></name><argument_list>( <argument><expr><literal type="string">"version"</literal></expr></argument>,     <argument><expr><operator>(</operator><ternary><condition><expr><call><name><name>m</name><operator>.</operator><name>getVersion</name></name><argument_list>()</argument_list></call>    <operator>!=</operator><literal type="null">null</literal></expr> ?</condition><then> <expr><call><name><name>m</name><operator>.</operator><name>getVersion</name></name><argument_list>()</argument_list></call></expr>     </then><else>: <expr><name>na</name></expr></else></ternary><operator>)</operator></expr></argument> )</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name><name>info</name><operator>.</operator><name>add</name></name><argument_list>( <argument><expr><literal type="string">"description"</literal></expr></argument>, <argument><expr><operator>(</operator><ternary><condition><expr><call><name><name>m</name><operator>.</operator><name>getDescription</name></name><argument_list>()</argument_list></call><operator>!=</operator><literal type="null">null</literal></expr> ?</condition><then> <expr><call><name><name>m</name><operator>.</operator><name>getDescription</name></name><argument_list>()</argument_list></call></expr> </then><else>: <expr><name>na</name></expr></else></ternary><operator>)</operator></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>info</name><operator>.</operator><name>add</name></name><argument_list>( <argument><expr><literal type="string">"source"</literal></expr></argument>,      <argument><expr><operator>(</operator><ternary><condition><expr><call><name><name>m</name><operator>.</operator><name>getSource</name></name><argument_list>()</argument_list></call>     <operator>!=</operator><literal type="null">null</literal></expr> ?</condition><then> <expr><call><name><name>m</name><operator>.</operator><name>getSource</name></name><argument_list>()</argument_list></call></expr>      </then><else>: <expr><name>na</name></expr></else></ternary><operator>)</operator></expr></argument> )</argument_list></call></expr>;</expr_stmt>
 
        <decl_stmt><decl><type><name><name>URL</name><index>[]</index></name></type> <name>urls</name> <init>= <expr><call><name><name>m</name><operator>.</operator><name>getDocs</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><operator>(</operator><name>urls</name> <operator>!=</operator> <literal type="null">null</literal><operator>)</operator> <operator>&amp;&amp;</operator> <operator>(</operator><name><name>urls</name><operator>.</operator><name>length</name></name> <operator>&gt;</operator> <literal type="number">0</literal><operator>)</operator></expr>)</condition> <block>{<block_content>
          <decl_stmt><decl><type><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>docs</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>(<argument><expr><name><name>urls</name><operator>.</operator><name>length</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <for>for<control>( <init><decl><type><name>URL</name></type> <name>u</name> <range>: <expr><name>urls</name></expr></range></decl></init> )</control> <block>{<block_content>
            <expr_stmt><expr><call><name><name>docs</name><operator>.</operator><name>add</name></name><argument_list>( <argument><expr><call><name><name>u</name><operator>.</operator><name>toExternalForm</name></name><argument_list>()</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
          <expr_stmt/></block_content></block></for></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for></block_content></block></for></block_content></block></for>}</block>
          <call><name><name>info</name><operator>.</operator><name>add</name></name><argument_list>( <argument><expr><literal type="string">"docs"</literal></expr></argument>, <argument><expr><name>docs</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></function>

        <if_stmt><if>if<condition>( <expr><name>stats</name></expr> )</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>info</name><operator>.</operator><name>add</name></name><argument_list>( <argument><expr><literal type="string">"stats"</literal></expr></argument>, <argument><expr><call><name><name>m</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><name>stats</name></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>info</name><operator>.</operator><name>add</name></name><argument_list>( <argument><expr><literal type="string">"stats"</literal></expr></argument>, <argument><expr><call><name><name>m</name><operator>.</operator><name>getMetricsSnapshot</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
       </block_content>}</block></if></if_stmt>
     </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>SolrInfoMBeanHandler</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>SolrInfoMBeanHandler</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f5f28c53205</name><operator>..</operator><name>dd6e2c88b3f</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>SolrInfoMBeanHandler</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>SolrInfoMBeanHandler</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>io</name><operator>.</operator><name>IOUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>handler</name><operator>.</operator><name>RequestHandlerBase</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>request</name><operator>.</operator><name>SolrQueryRequest</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>client</name><operator>.</operator><name>solrj</name><operator>.</operator><name>impl</name><operator>.</operator><name>XMLResponseParser</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoMBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrException</name><operator>.</operator><name>ErrorCode</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>ContentStream</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">30</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">30</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>response</name><operator>.</operator><name>BinaryResponseWriter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>response</name><operator>.</operator><name>SolrQueryResponse</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>StringReader</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URL</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>text</name><operator>.</operator><name>NumberFormat</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Locale</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">117</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">114</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrInfoMBeanHandler</name> extends <name>RequestHandlerBase</name> <block>{
     
     <expr><name><name>String</name><index>[]</index></name> <name>requestedCats</name> <operator>=</operator> <call><name><name>req</name><operator>.</operator><name>getParams</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getParams</name><argument_list>(<argument><expr><literal type="string">"cat"</literal></expr></argument>)</argument_list></call></expr>;
     <if_stmt><if>if <condition>(<expr><literal type="null">null</literal> <operator>==</operator> <name>requestedCats</name> <operator>||</operator> <literal type="number">0</literal> <operator>==</operator> <name><name>requestedCats</name><operator>.</operator><name>length</name></name></expr>)</condition> <block>{<block_content>
      <for>for <control>(<init><decl><type><name><name>SolrInfoMBean</name><operator>.</operator><name>Category</name></name></type> <name>cat</name> <range>: <expr><call><name><name>SolrInfoMBean</name><operator>.</operator><name>Category</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <for>for <control>(<init><decl><type><name><name>SolrInfoBean</name><operator>.</operator><name>Category</name></name></type> <name>cat</name> <range>: <expr><call><name><name>SolrInfoBean</name><operator>.</operator><name>Category</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
         <expr_stmt><expr><call><name><name>cats</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>cat</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name><name>SimpleOrderedMap</name><argument_list type="generic">&lt;<argument><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt/></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt>}</block></expr></expr_stmt>
     </block_content>}</block></constructor> <if_stmt><else>else <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">128</literal></expr><operator>,</operator><expr><literal type="number">39</literal> <operator>+</operator><literal type="number">125</literal></expr><operator>,</operator><expr><literal type="number">27</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrInfoMBeanHandler</name> extends <name>RequestHandlerBase</name> <block>{
          
     <expr><name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name> <name>requestedKeys</name> <operator>=</operator> <call><name>arrayToSet</name><argument_list>(<argument><expr><call><name><name>req</name><operator>.</operator><name>getParams</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getParams</name><argument_list>(<argument><expr><literal type="string">"key"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     
    <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>SolrInfoMBean</name></argument>&gt;</argument_list></name> <name>reg</name> <operator>=</operator> <call><name><name>req</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getInfoRegistry</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>SolrInfoMBean</name></argument>&gt;</argument_list></name></name></type> <name>entry</name> <range>: <expr><call><name><name>reg</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>SolrInfoBean</name></argument>&gt;</argument_list></name></type> <name>reg</name> <init>= <expr><call><name><name>req</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getInfoRegistry</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>SolrInfoBean</name></argument>&gt;</argument_list></name></name></type> <name>entry</name> <range>: <expr><call><name><name>reg</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
       <expr_stmt><expr><call><name>addMBean</name><argument_list>(<argument><expr><name>req</name></expr></argument>, <argument><expr><name>cats</name></expr></argument>, <argument><expr><name>requestedKeys</name></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>,<argument><expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>
 
    <for>for <control>(<init><decl><type><name>SolrInfoMBean</name></type> <name>infoMBean</name> <range>: <expr><call><name><name>req</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCoreDescriptor</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCoreContainer</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getResourceLoader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getInfoMBeans</name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
    <for>for <control>(<init><decl><type><name>SolrInfoBean</name></type> <name>infoMBean</name> <range>: <expr><call><name><name>req</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCoreDescriptor</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCoreContainer</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getResourceLoader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getInfoMBeans</name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
       <expr_stmt><expr><call><name>addMBean</name><argument_list>(<argument><expr><name>req</name></expr></argument>,<argument><expr><name>cats</name></expr></argument>,<argument><expr><name>requestedKeys</name></expr></argument>,<argument><expr><call><name><name>infoMBean</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>,<argument><expr><name>infoMBean</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>
     <return>return <expr><name>cats</name></expr>;</return>
   </block_content>}</block></for>
 
  <function><type><specifier>private</specifier> <name>void</name></type> <name>addMBean</name><parameter_list>(<parameter><decl><type><name>SolrQueryRequest</name></type> <name>req</name></decl></parameter>, <parameter><decl><type><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>cats</name></decl></parameter>, <parameter><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>requestedKeys</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>key</name></decl></parameter>, <parameter><decl><type><name>SolrInfoMBean</name></type> <name>m</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <function><type><specifier>private</specifier> <name>void</name></type> <name>addMBean</name><parameter_list>(<parameter><decl><type><name>SolrQueryRequest</name></type> <name>req</name></decl></parameter>, <parameter><decl><type><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>cats</name></decl></parameter>, <parameter><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>requestedKeys</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>key</name></decl></parameter>, <parameter><decl><type><name>SolrInfoBean</name></type> <name>m</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <if_stmt><if>if <condition>( <expr><operator>!</operator> <operator>(</operator> <call><name><name>requestedKeys</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call> <operator>||</operator> <call><name><name>requestedKeys</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call> <operator>)</operator></expr> )</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>
     <decl_stmt><decl><type><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>catInfo</name> <init>= <expr><call><name><name>cats</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>m</name><operator>.</operator><name>getCategory</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>name</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <if_stmt><if>if <condition>( <expr><literal type="null">null</literal> <operator>==</operator> <name>catInfo</name></expr> )</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>
     <decl_stmt><decl><type><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>mBeanInfo</name> <init>= <expr><operator>new</operator> <call><name><name>SimpleOrderedMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>mBeanInfo</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"class"</literal></expr></argument>, <argument><expr><call><name><name>m</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>mBeanInfo</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"version"</literal></expr></argument>, <argument><expr><call><name><name>m</name><operator>.</operator><name>getVersion</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>mBeanInfo</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"description"</literal></expr></argument>, <argument><expr><call><name><name>m</name><operator>.</operator><name>getDescription</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>mBeanInfo</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"src"</literal></expr></argument>, <argument><expr><call><name><name>m</name><operator>.</operator><name>getSource</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// Use an external form</comment>
    <decl_stmt><decl><type><name><name>URL</name><index>[]</index></name></type> <name>urls</name> <init>= <expr><call><name><name>m</name><operator>.</operator><name>getDocs</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if<condition>(<expr><name>urls</name><operator>!=</operator><literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>docs</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>(<argument><expr><name><name>urls</name><operator>.</operator><name>length</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <for>for<control>(<init><decl><type><name>URL</name></type> <name>url</name> <range>: <expr><name>urls</name></expr></range></decl></init>)</control> <block>{<block_content>
        <expr_stmt><expr><call><name><name>docs</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>url</name><operator>.</operator><name>toExternalForm</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></for>
      <expr_stmt><expr><call><name><name>mBeanInfo</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"docs"</literal></expr></argument>, <argument><expr><name>docs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
 
     <if_stmt><if>if <condition>(<expr><call><name><name>req</name><operator>.</operator><name>getParams</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getFieldBool</name><argument_list>(<argument><expr><name>key</name></expr></argument>, <argument><expr><literal type="string">"stats"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
      <expr_stmt><expr><call><name><name>mBeanInfo</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"stats"</literal></expr></argument>, <argument><expr><call><name><name>m</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
      <expr_stmt><expr><call><name><name>mBeanInfo</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"stats"</literal></expr></argument>, <argument><expr><call><name><name>m</name><operator>.</operator><name>getMetricsSnapshot</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <expr_stmt><expr><call><name><name>catInfo</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>key</name></expr></argument>, <argument><expr><name>mBeanInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">246</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">231</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrInfoMBeanHandler</name> extends <name>RequestHandlerBase</name> <block>{
   }</block>
   
   <specifier>public</specifier> <name>Object</name> <call><name>diffObject</name><argument_list>(<argument><expr><name>Object</name> <name>ref</name></expr></argument>, <argument><expr><name>Object</name> <name>now</name></expr></argument>)</argument_list></call> <block>{
    <if_stmt><if>if <condition>(<expr><name>now</name> <operator>instanceof</operator> <name>Map</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>now</name> <operator>=</operator> <operator>new</operator> <call><name>NamedList</name><argument_list>(<argument><expr><operator>(</operator><name>Map</name><operator>)</operator><name>now</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt></block></expr></expr_stmt>
     <if_stmt><if>if<condition>(<expr><name>ref</name> <operator>instanceof</operator> <name>NamedList</name></expr>)</condition> <block>{<block_content>
       <return>return <expr><call><name>diffNamedList</name><argument_list>(<argument><expr><operator>(</operator><name>NamedList</name><operator>)</operator><name>ref</name></expr></argument>, <argument><expr><operator>(</operator><name>NamedList</name><operator>)</operator><name>now</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>SystemInfoHandler</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>SystemInfoHandler</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>fc1679ff896</name><operator>..</operator><name>ab2d4496941</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>SystemInfoHandler</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>SystemInfoHandler</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@
  <operator>*</operator><operator>/</operator></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>handler</name><operator>.</operator><name>admin</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>beans</name><operator>.</operator><name>BeanInfo</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>beans</name><operator>.</operator><name>IntrospectionException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>beans</name><operator>.</operator><name>Introspector</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>beans</name><operator>.</operator><name>PropertyDescriptor</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">23</literal> <operator>+</operator><literal type="number">23</literal></expr><operator>,</operator><expr><literal type="number">20</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStreamReader</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>invoke</name><operator>.</operator><name>MethodHandles</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>management</name><operator>.</operator><name>ManagementFactory</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>management</name><operator>.</operator><name>OperatingSystemMXBean</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>management</name><operator>.</operator><name>PlatformManagedObject</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>management</name><operator>.</operator><name>RuntimeMXBean</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>reflect</name><operator>.</operator><name>InvocationTargetException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>InetAddress</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>Charset</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>text</name><operator>.</operator><name>DecimalFormat</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>text</name><operator>.</operator><name>DecimalFormatSymbols</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Date</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>LinkedList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Locale</name></name>;</import>
 
<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>Gauge</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>io</name><operator>.</operator><name>IOUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>LucenePackage</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>Constants</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>SimpleOrderedMap</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>CoreContainer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrCore</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">53</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">46</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>response</name><operator>.</operator><name>SolrQueryResponse</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>schema</name><operator>.</operator><name>IndexSchema</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>RTimer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>RedactionUtils</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>stats</name><operator>.</operator><name>MetricUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">207</literal></expr><operator>,</operator><expr><literal type="number">29</literal> <operator>+</operator><literal type="number">201</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>SystemInfoHandler</name> extends <name>RequestHandlerBase</name>
     
     <name>OperatingSystemMXBean</name> <name>os</name> <operator>=</operator> <call><name><name>ManagementFactory</name><operator>.</operator><name>getOperatingSystemMXBean</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>info</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>NAME</name></expr></argument>, <argument><expr><call><name><name>os</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// add at least this one</comment>
    <try>try <block>{<block_content>
      <comment type="line">// add remaining ones dynamically using Java Beans API</comment>
      <expr_stmt><expr><call><name>addMXBeanProperties</name><argument_list>(<argument><expr><name>os</name></expr></argument>, <argument><expr><name><name>OperatingSystemMXBean</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><name>info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IntrospectionException</name></type> | <type><name>ReflectiveOperationException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Unable to fetch properties of OperatingSystemMXBean."</literal></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></catch></try>

    <comment type="line">// There are some additional beans we want to add (not available on all JVMs):</comment>
    <for>for <control>(<init><decl><type><name>String</name></type> <name>clazz</name> <range>: <expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(
        <argument><expr><literal type="string">"com.sun.management.OperatingSystemMXBean"</literal></expr></argument>,
        <argument><expr><literal type="string">"com.sun.management.UnixOperatingSystemMXBean"</literal></expr></argument>, 
        <argument><expr><literal type="string">"com.ibm.lang.management.OperatingSystemMXBean"</literal></expr></argument>
    )</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <try>try <block>{<block_content>
        <decl_stmt><decl><type><specifier>final</specifier> <name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>PlatformManagedObject</name></extends></argument>&gt;</argument_list></name></type> <name>intf</name> <init>= <expr><call><name><name>Class</name><operator>.</operator><name>forName</name></name><argument_list>(<argument><expr><name>clazz</name></expr></argument>)</argument_list></call>
            <operator>.</operator><call><name>asSubclass</name><argument_list>(<argument><expr><name><name>PlatformManagedObject</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>addMXBeanProperties</name><argument_list>(<argument><expr><name>os</name></expr></argument>, <argument><expr><name>intf</name></expr></argument>, <argument><expr><name>info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ClassNotFoundException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <comment type="line">// ignore</comment>
      </block_content>}</block></catch> <catch>catch <parameter_list>(<parameter><decl><type><name>IntrospectionException</name></type> | <type><name>ReflectiveOperationException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Unable to fetch properties of JVM-specific OperatingSystemMXBean."</literal></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="line">// add remaining ones dynamically using Java Beans API</comment>
    <comment type="line">// also those from JVM implementation-specific classes</comment>
    <expr_stmt><expr><call><name><name>MetricUtils</name><operator>.</operator><name>addMXBeanMetrics</name></name><argument_list>(<argument><expr><name>os</name></expr></argument>, <argument><expr><name><name>MetricUtils</name><operator>.</operator><name>OS_MXBEAN_CLASSES</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><lambda><parameter_list>(<parameter><decl><name>name</name></decl></parameter>, <parameter><decl><name>metric</name></decl></parameter>)</parameter_list> -&gt; <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><call><name><name>info</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>info</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>Gauge</name><operator>)</operator> <name>metric</name><operator>)</operator><operator>.</operator><call><name>getValue</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if></if_stmt>
    </block_content>}</block></lambda></expr></argument></argument_list></call></expr></expr_stmt>
    </block_content>}</block></catch></try>)</block_content></block><empty_stmt>;</empty_stmt></for>
 
     <comment type="line">// Try some command line things:</comment>
     <try>try <block>{<block_content> 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">243</literal></expr><operator>,</operator><expr><literal type="number">34</literal> <operator>+</operator><literal type="number">221</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>SystemInfoHandler</name> extends <name>RequestHandlerBase</name></expr></expr_stmt>
     <return>return <expr><name>info</name></expr>;</return>
   </block_content>}</block></try>
   
  <comment type="block" format="javadoc">/**
   * Add all bean properties of a {@link PlatformManagedObject} to the given {@link NamedList}.
   * &lt;p&gt;
   * If you are running a OpenJDK/Oracle JVM, there are nice properties in:
   * {@code com.sun.management.UnixOperatingSystemMXBean} and
   * {@code com.sun.management.OperatingSystemMXBean}
   */</comment>
  <function><type><specifier>static</specifier> <parameter_list type="generic">&lt;<parameter><name>T</name> <extends>extends <name>PlatformManagedObject</name></extends></parameter>&gt;</parameter_list> <name>void</name></type> <name>addMXBeanProperties</name><parameter_list>(<parameter><decl><type><name>T</name></type> <name>obj</name></decl></parameter>, <parameter><decl><type><name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>T</name></extends></argument>&gt;</argument_list></name></type> <name>intf</name></decl></parameter>, <parameter><decl><type><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>info</name></decl></parameter>)</parameter_list>
      <throws>throws <argument><expr><name>IntrospectionException</name></expr></argument>, <argument><expr><name>ReflectiveOperationException</name></expr></argument></throws> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><call><name><name>intf</name><operator>.</operator><name>isInstance</name></name><argument_list>(<argument><expr><name>obj</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><specifier>final</specifier> <name>BeanInfo</name></type> <name>beanInfo</name> <init>= <expr><call><name><name>Introspector</name><operator>.</operator><name>getBeanInfo</name></name><argument_list>(<argument><expr><name>intf</name></expr></argument>, <argument><expr><call><name><name>intf</name><operator>.</operator><name>getSuperclass</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>Introspector</name><operator>.</operator><name>IGNORE_ALL_BEANINFO</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <for>for <control>(<init><decl><type><specifier>final</specifier> <name>PropertyDescriptor</name></type> <name>desc</name> <range>: <expr><call><name><name>beanInfo</name><operator>.</operator><name>getPropertyDescriptors</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
        <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>name</name> <init>= <expr><call><name><name>desc</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><call><name><name>info</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <try>try <block>{<block_content>
            <decl_stmt><decl><type><specifier>final</specifier> <name>Object</name></type> <name>v</name> <init>= <expr><call><name><name>desc</name><operator>.</operator><name>getReadMethod</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>invoke</name><argument_list>(<argument><expr><name>obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt><if>if<condition>(<expr><name>v</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
              <expr_stmt><expr><call><name><name>info</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><name>v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
          </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>InvocationTargetException</name></type> <name>ite</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <comment type="line">// ignore (some properties throw UOE)</comment>
          </block_content>}</block></catch></try>
        </block_content>}</block></if></if_stmt>
      </block_content>}</block></for>
    </block_content>}</block></if></if_stmt>
  </block_content>}</block></function>
  
  
   <comment type="block" format="javadoc">/**
    * Utility function to execute a function
    */</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>DebugComponent</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>DebugComponent</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>be2173339ea</name><operator>..</operator><name>f43a0e17f94</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>DebugComponent</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>DebugComponent</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>handler</name><operator>.</operator><name>component</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URL</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">380</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">379</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>DebugComponent</name> extends <name>SearchComponent</name>
 
   
   <comment type="line" format="doxygen">/////////////////////////////////////////////</comment>
  <comment type="line" format="doxygen">///  SolrInfoMBean</comment>
  <comment type="line" format="doxygen">///  SolrInfoBean</comment>
   <comment type="line" format="doxygen">////////////////////////////////////////////</comment>
 
   @<name>Override</name>
@@ <operator>-</operator><literal type="number">392</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">391</literal></expr><operator>,</operator><expr><literal type="number">4</literal> @@ <specifier>public</specifier> <name>class</name> <name>DebugComponent</name> extends <name>SearchComponent</name>
   <specifier>public</specifier> <name>Category</name> <call><name>getCategory</name><argument_list>()</argument_list></call> <block>{
     <return>return <expr><name><name>Category</name><operator>.</operator><name>OTHER</name></name></expr>;</return>
   }</block></expr></expr_stmt>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name><name>URL</name><index>[]</index></name></type> <name>getDocs</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><literal type="null">null</literal></expr>;</return>
  </block_content>}</block></function>
 </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>ExpandComponent</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>ExpandComponent</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">656ac7113f0</literal><operator>..</operator><literal type="number">2519a47969a</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>ExpandComponent</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>ExpandComponent</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>handler</name><operator>.</operator><name>component</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>MalformedURLException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URL</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">764</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">762</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ExpandComponent</name> extends <name>SearchComponent</name> implements <name>PluginInfoInitia</name>
 
 
   <comment type="line" format="doxygen">////////////////////////////////////////////</comment>
  <comment type="line" format="doxygen">///  SolrInfoMBean</comment>
  <comment type="line" format="doxygen">///  SolrInfoBean</comment>
   <comment type="line" format="doxygen">////////////////////////////////////////////</comment>
 
   @<name>Override</name>
@@ <operator>-</operator><literal type="number">777</literal></expr><operator>,</operator><expr><literal type="number">17</literal> <operator>+</operator><literal type="number">775</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>ExpandComponent</name> extends <name>SearchComponent</name> implements <name>PluginInfoInitia</name></expr></expr_stmt>
     <return>return <expr><name><name>Category</name><operator>.</operator><name>QUERY</name></name></expr>;</return>
   </block_content>}</block></for>
 
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name><name>URL</name><index>[]</index></name></type> <name>getDocs</name><parameter_list>()</parameter_list> <block>{<block_content>
    <try>try <block>{<block_content>
      <return>return <expr><operator>new</operator> <name><name>URL</name><index>[]</index></name><block>{
          <expr><operator>new</operator> <call><name>URL</name><argument_list>(<argument><expr><literal type="string">"http://wiki.apache.org/solr/ExpandComponent"</literal></expr></argument>)</argument_list></call></expr>
      }</block></expr>;</return>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>MalformedURLException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></catch></try>
  </block_content>}</block></function>

   <comment type="line">// this reader alters the content of the given reader so it should not</comment>
   <comment type="line">// delegate the caching stuff</comment>
   <class><specifier>private</specifier> <specifier>static</specifier> class <name>ReaderWrapper</name> <super_list><extends>extends <super><name>FilterLeafReader</name></super></extends></super_list> <block>{
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>FacetComponent</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>FacetComponent</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">66b9ab8d713</literal><operator>..</operator><literal type="number">80cca1577a5</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>FacetComponent</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>FacetComponent</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>handler</name><operator>.</operator><name>component</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>invoke</name><operator>.</operator><name>MethodHandles</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URL</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1212</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1211</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>FacetComponent</name> extends <name>SearchComponent</name> <block>{
 
 
   <comment type="line" format="doxygen">/////////////////////////////////////////////</comment>
  <comment type="line" format="doxygen">///  SolrInfoMBean</comment>
  <comment type="line" format="doxygen">///  SolrInfoBean</comment>
   <comment type="line" format="doxygen">////////////////////////////////////////////</comment>
 
   @<expr><name>Override</name>
@@ <operator>-</operator><literal type="number">1225</literal></expr>,<expr><literal type="number">11</literal> <operator>+</operator><literal type="number">1224</literal></expr>,<expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>FacetComponent</name> extends <name>SearchComponent</name> <block>{
     <return>return <expr><name><name>Category</name><operator>.</operator><name>QUERY</name></name></expr>;</return></block></expr>
   }</block>
 
  @<name>Override</name>
  <specifier>public</specifier> <name><name>URL</name><index>[]</index></name> <call><name>getDocs</name><argument_list>()</argument_list></call> <block>{
    <return>return <expr><literal type="null">null</literal></expr>;</return>
  }</block></expr></expr_stmt>

   <comment type="block" format="javadoc">/**
    * This class is used exclusively for merging results from each shard
    * in a distributed facet request. It plays no role in the computation
diff --git a/solr/core/src/java/org/apache/solr/handler/component/HighlightComponent.java b/solr/core/src/java/org/apache/solr/handler/component/HighlightComponent.java
index d147be2fa73..cc5211b3292 100644
-- a/solr/core/src/java/org/apache/solr/handler/component/HighlightComponent.java
++ b/solr/core/src/java/org/apache/solr/handler/component/HighlightComponent.java
@@ -17,7 +17,6 @@
 package org.apache.solr.handler.component;
 
 import java.io.IOException;
import java.net.URL;
 import java.util.Collections;
 import java.util.List;
 import java.util.Map;
@@ -266,7 +265,7 @@ public class HighlightComponent extends SearchComponent implements PluginInfoIni
   }
 
   ////////////////////////////////////////////
  ///  SolrInfoMBean
  ///  SolrInfoBean
   ////////////////////////////////////////////
   
   @Override
@@ -278,9 +277,4 @@ public class HighlightComponent extends SearchComponent implements PluginInfoIni
   public Category getCategory() {
     return Category.HIGHLIGHTER;
   }
  
  @Override
  public URL[] getDocs() {
    return null;
  }
 }
diff --git a/solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory.java b/solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory.java
index 4262c20658c..1e1ce5ef830 100644
-- a/solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory.java
++ b/solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory.java
@@ -36,7 +36,7 @@ import org.apache.solr.common.util.StrUtils;
 import org.apache.solr.common.util.URLUtil;
 import org.apache.solr.core.CoreDescriptor;
 import org.apache.solr.core.PluginInfo;
import org.apache.solr.core.SolrInfoMBean;
import org.apache.solr.core.SolrInfoBean;
 import org.apache.solr.metrics.SolrMetricManager;
 import org.apache.solr.metrics.SolrMetricProducer;
 import org.apache.solr.update.UpdateShardHandlerConfig;
@@ -373,10 +373,10 @@ public class HttpShardHandlerFactory extends ShardHandlerFactory implements org.
 
   @Override
   public void initializeMetrics(SolrMetricManager manager, String registry, String scope) {
    String expandedScope = SolrMetricManager.mkName(scope, SolrInfoMBean.Category.QUERY.name());
    String expandedScope = SolrMetricManager.mkName(scope, SolrInfoBean.Category.QUERY.name());
     clientConnectionManager.initializeMetrics(manager, registry, expandedScope);
     httpRequestExecutor.initializeMetrics(manager, registry, expandedScope);
    commExecutor = MetricUtils.instrumentedExecutorService(commExecutor,
    commExecutor = MetricUtils.instrumentedExecutorService(commExecutor, null,
         manager.registry(registry),
         SolrMetricManager.mkName("httpShardExecutor", expandedScope, "threadPool"));
   }
diff --git a/solr/core/src/java/org/apache/solr/handler/component/MoreLikeThisComponent.java b/solr/core/src/java/org/apache/solr/handler/component/MoreLikeThisComponent.java
index ffb58588907..fd9d37d4aad 100644
-- a/solr/core/src/java/org/apache/solr/handler/component/MoreLikeThisComponent.java
++ b/solr/core/src/java/org/apache/solr/handler/component/MoreLikeThisComponent.java
@@ -18,7 +18,6 @@ package org.apache.solr.handler.component;
 
 import java.io.IOException;
 import java.lang.invoke.MethodHandles;
import java.net.URL;
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.Comparator;
@@ -414,7 +413,7 @@ public class MoreLikeThisComponent extends SearchComponent {
   }
   
   // ///////////////////////////////////////////
  // / SolrInfoMBean
  // / SolrInfoBean
   // //////////////////////////////////////////
   
   @Override
@@ -426,9 +425,4 @@ public class MoreLikeThisComponent extends SearchComponent {
   public Category getCategory() {
     return Category.QUERY;
   }

  @Override
  public URL[] getDocs() {
    return null;
  }
 }
diff --git a/solr/core/src/java/org/apache/solr/handler/component/QueryComponent.java b/solr/core/src/java/org/apache/solr/handler/component/QueryComponent.java
index 08a0e842e08..7555158f8c6 100644
-- a/solr/core/src/java/org/apache/solr/handler/component/QueryComponent.java
++ b/solr/core/src/java/org/apache/solr/handler/component/QueryComponent.java
@@ -20,7 +20,6 @@ import java.io.IOException;
 import java.io.PrintWriter;
 import java.io.StringWriter;
 import java.lang.invoke.MethodHandles;
import java.net.URL;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collection;
@@ -1378,7 +1377,7 @@ public class QueryComponent extends SearchComponent
   }
 
   /////////////////////////////////////////////
  ///  SolrInfoMBean
  ///  SolrInfoBean
   ////////////////////////////////////////////
 
   @Override
@@ -1391,11 +1390,6 @@ public class QueryComponent extends SearchComponent
     return Category.QUERY;
   }
 
  @Override
  public URL[] getDocs() {
    return null;
  }

   /**
    * Fake scorer for a single document
    *
diff --git a/solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent.java b/solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent.java
index c12902e83b5..568000a2e66 100644
-- a/solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent.java
++ b/solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent.java
@@ -24,8 +24,6 @@ import java.io.File;
 import java.io.IOException;
 import java.io.InputStream;
 import java.lang.invoke.MethodHandles;
import java.net.MalformedURLException;
import java.net.URL;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.HashMap;
@@ -597,7 +595,7 @@ public class QueryElevationComponent extends SearchComponent implements SolrCore
   }
 
   //---------------------------------------------------------------------------------
  // SolrInfoMBean
  // SolrInfoBean
   //---------------------------------------------------------------------------------
 
   @Override
@@ -605,16 +603,6 @@ public class QueryElevationComponent extends SearchComponent implements SolrCore
     return "Query Boosting -- boost particular documents for a given query";
   }
 
  @Override
  public URL[] getDocs() {
    try {
      return new URL[]{
          new URL("http://wiki.apache.org/solr/QueryElevationComponent")
      };
    } catch (MalformedURLException e) {
      throw new RuntimeException(e);
    }
  }
   class ElevationComparatorSource extends FieldComparatorSource {
   private QueryElevationComponent.ElevationObj elevations;
   private SentinelIntSet ordSet; //the key half of the map
diff --git a/solr/core/src/java/org/apache/solr/handler/component/RealTimeGetComponent.java b/solr/core/src/java/org/apache/solr/handler/component/RealTimeGetComponent.java
index 882decb1627..2a4776224b8 100644
-- a/solr/core/src/java/org/apache/solr/handler/component/RealTimeGetComponent.java
++ b/solr/core/src/java/org/apache/solr/handler/component/RealTimeGetComponent.java
@@ -18,7 +18,6 @@ package org.apache.solr.handler.component;
 
 import java.io.IOException;
 import java.lang.invoke.MethodHandles;
import java.net.URL;
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.HashMap;
@@ -927,7 +926,7 @@ public class RealTimeGetComponent extends SearchComponent
                                                                                                
 
   ////////////////////////////////////////////
  ///  SolrInfoMBean
  ///  SolrInfoBean
   ////////////////////////////////////////////
 
   @Override
@@ -940,13 +939,6 @@ public class RealTimeGetComponent extends SearchComponent
     return Category.QUERY;
   }
 
  @Override
  public URL[] getDocs() {
    return null;
  }

  
  
   public void processGetFingeprint(ResponseBuilder rb) throws IOException {
     SolrQueryRequest req = rb.req;
     SolrParams params = req.getParams();
diff --git a/solr/core/src/java/org/apache/solr/handler/component/SearchComponent.java b/solr/core/src/java/org/apache/solr/handler/component/SearchComponent.java
index 6ef0ee4f237..c615c5a7ac1 100644
-- a/solr/core/src/java/org/apache/solr/handler/component/SearchComponent.java
++ b/solr/core/src/java/org/apache/solr/handler/component/SearchComponent.java
@@ -17,13 +17,15 @@
 package org.apache.solr.handler.component;
 
 import java.io.IOException;
import java.net.URL;
 import java.util.Collections;
 import java.util.HashMap;
import java.util.HashSet;
 import java.util.Map;
import java.util.Set;
 
import com.codahale.metrics.MetricRegistry;
 import org.apache.solr.common.util.NamedList;
import org.apache.solr.core.SolrInfoMBean;
import org.apache.solr.core.SolrInfoBean;
 import org.apache.solr.search.facet.FacetModule;
 import org.apache.solr.util.plugin.NamedListInitializedPlugin;
 
@@ -33,12 +35,16 @@ import org.apache.solr.util.plugin.NamedListInitializedPlugin;
  *
  * @since solr 1.3
  */</comment>
<class_decl><specifier>public</specifier> <specifier>abstract</specifier> class <name>SearchComponent</name> <super_list><implements>implements <super><name>SolrInfoMBean</name></super>, <super><name>NamedListInitializedPlugin</name></super>
<super><specifier>public</specifier></super></implements> abstract class SearchComponent implements SolrInfoBean</super_list><operator>,</operator> NamedListInitializedPlugin
 <block>{<block_content>
   <comment type="block" format="javadoc">/**
    * The name given to this component in solrconfig.xml file
    */</comment>
   <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>name</name> <init>= <expr><call><name><name>this</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getName</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>protected</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>metricNames</name> <init>= <expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>protected</specifier> <name>MetricRegistry</name></type> <name>registry</name></decl>;</decl_stmt>

   <comment type="block" format="javadoc">/**
    * Prepare the response.  Guaranteed to be called before any SearchComponent {@link #process(org.apache.solr.handler.component.ResponseBuilder)} method.
    * Called for every incoming request.
@@ -103,31 +109,24 @@ public abstract class SearchComponent implements SolrInfoMBean, NamedListInitial
 
   @Override
   public abstract String getDescription();
  @Override
  public String getSource() { return null; }
  
  @Override
  public String getVersion() {
    return getClass().getPackage().getSpecificationVersion();
  }
  

   @Override
   public Category getCategory() {
     return Category.OTHER;
   }
 
   @Override
  public URL[] getDocs() {
    return null;  // this can be overridden, but not required
  public Set&lt;String&gt; getMetricNames() {
    return metricNames;
   }
 
   @Override
  public NamedList getStatistics() {
    return null;
  public MetricRegistry getMetricRegistry() {
    return registry;
   }
 
   public static final Map&lt;String, Class&lt;? extends SearchComponent&gt;&gt; standard_components;
  ;

 
   static {
     HashMap&lt;String, Class&lt;? extends SearchComponent&gt;&gt; map = new HashMap&lt;&gt;();
diff --git a/solr/core/src/java/org/apache/solr/handler/component/SpellCheckComponent.java b/solr/core/src/java/org/apache/solr/handler/component/SpellCheckComponent.java
index 2f805f45d02..4e3cd125c27 100644
-- a/solr/core/src/java/org/apache/solr/handler/component/SpellCheckComponent.java
++ b/solr/core/src/java/org/apache/solr/handler/component/SpellCheckComponent.java
@@ -853,7 +853,7 @@ public class SpellCheckComponent extends SearchComponent implements SolrCoreAwar
   }
 
   // ///////////////////////////////////////////
  // / SolrInfoMBean
  // / SolrInfoBean
   // //////////////////////////////////////////
 
   @Override
diff --git a/solr/core/src/java/org/apache/solr/handler/component/StatsComponent.java b/solr/core/src/java/org/apache/solr/handler/component/StatsComponent.java
index 6a6e9bef0d6..8ecd51c523a 100644
-- a/solr/core/src/java/org/apache/solr/handler/component/StatsComponent.java
++ b/solr/core/src/java/org/apache/solr/handler/component/StatsComponent.java
@@ -160,7 +160,7 @@ public class StatsComponent extends SearchComponent {
   }
 
   /////////////////////////////////////////////
  ///  SolrInfoMBean
  ///  SolrInfoBean
   ////////////////////////////////////////////
 
   @Override
diff --git a/solr/core/src/java/org/apache/solr/handler/component/SuggestComponent.java b/solr/core/src/java/org/apache/solr/handler/component/SuggestComponent.java
index bb87440c174..4ca6ce4b752 100644
-- a/solr/core/src/java/org/apache/solr/handler/component/SuggestComponent.java
++ b/solr/core/src/java/org/apache/solr/handler/component/SuggestComponent.java
@@ -47,6 +47,9 @@ import org.apache.solr.common.util.NamedList;
 import org.apache.solr.common.util.SimpleOrderedMap;
 import org.apache.solr.core.SolrCore;
 import org.apache.solr.core.SolrEventListener;
import org.apache.solr.metrics.MetricsMap;
import org.apache.solr.metrics.SolrMetricManager;
import org.apache.solr.metrics.SolrMetricProducer;
 import org.apache.solr.search.SolrIndexSearcher;
 import org.apache.solr.spelling.suggest.SolrSuggester;
 import org.apache.solr.spelling.suggest.SuggesterOptions;
@@ -61,7 +64,7 @@ import org.slf4j.LoggerFactory;
  * Responsible for routing commands and queries to the appropriate {@link SolrSuggester}
  * and for initializing them as specified by SolrConfig
  */</comment>
<class><specifier>public</specifier> class <name>SuggestComponent</name> <super_list><extends>extends <super><name>SearchComponent</name></super></extends> <implements>implements <super><name>SolrCoreAware</name></super>, <super><name>SuggesterParams</name></super>, <super><name>Accountable</name></super></implements></super_list> <block>{
<class><specifier>public</specifier> class <name>SuggestComponent</name> <super_list><extends>extends <super><name>SearchComponent</name></super></extends> <implements>implements <super><name>SolrCoreAware</name></super>, <super><name>SuggesterParams</name></super>, <super><name>Accountable</name></super>, <super><name>SolrMetricProducer</name></super></implements></super_list> <block>{
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Logger</name></type> <name>LOG</name> <init>= <expr><call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><call><name><name>MethodHandles</name><operator>.</operator><name>lookup</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>lookupClass</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
   
   <comment type="block" format="javadoc">/** Name used to identify whether the user query concerns this component */</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">89</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">92</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SuggestComponent</name> extends <name>SearchComponent</name> implements <name>SolrCoreAware</name></expr><operator>,</operator>
    <expr><operator>*</operator> <name>Key</name> <name>is</name> <name>the</name> <name>dictionary</name> <name>name</name> <name>used</name> <name>in</name> <name>SolrConfig</name></expr><operator>,</operator> <expr><name>value</name> <name>is</name> <name>the</name> <name>corresponding</name> <block>{@<expr><name>link</name> <name>SolrSuggester</name></expr>}</block>
    <operator>*</operator><operator>/</operator>
   <specifier>protected</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>SolrSuggester</name></argument>&gt;</argument_list></name> <name>suggesters</name> <operator>=</operator> <operator>new</operator> <call><name><name>ConcurrentHashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  

   <comment type="block" format="javadoc">/** Container for various labels used in the responses generated by this component */</comment>
   <class><specifier>private</specifier> <specifier>static</specifier> class <name>SuggesterResultLabels</name> <block>{
     <decl_stmt><decl><type><specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>SUGGEST</name> <init>= <expr><literal type="string">"suggest"</literal></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">345</literal></expr><operator>,</operator><expr><literal type="number">16</literal> <operator>+</operator><literal type="number">348</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@ <specifier>public</specifier> <name>class</name> <name>SuggestComponent</name> extends <name>SearchComponent</name> implements <name>SolrCoreAware</name></expr><operator>,</operator></expr_stmt>
   }</block></class>
 
   <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>NamedList</name></type> <name>getStatistics</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>stats</name> <init>= <expr><operator>new</operator> <call><name><name>SimpleOrderedMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>stats</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"totalSizeInBytes"</literal></expr></argument>, <argument><expr><call><name><name>String</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><call><name>ramBytesUsed</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>SolrSuggester</name></argument>&gt;</argument_list></name></name></type> <name>entry</name> <range>: <expr><call><name><name>suggesters</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>SolrSuggester</name></type> <name>suggester</name> <init>= <expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>stats</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>suggester</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return>return <expr><name>stats</name></expr>;</return>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>initializeMetrics</name><parameter_list>(<parameter><decl><type><name>SolrMetricManager</name></type> <name>manager</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>registryName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>scope</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name>registry</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>registry</name></name><argument_list>(<argument><expr><name>registryName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registryName</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name>ramBytesUsed</name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"totalSizeInBytes"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>MetricsMap</name></type> <name>suggestersMap</name> <init>= <expr><operator>new</operator> <call><name>MetricsMap</name><argument_list>(<argument><expr><lambda><parameter_list>(<parameter><decl><name>detailed</name></decl></parameter>, <parameter><decl><name>map</name></decl></parameter>)</parameter_list> -&gt; <block>{<block_content>
      <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>SolrSuggester</name></argument>&gt;</argument_list></name></name></type> <name>entry</name> <range>: <expr><call><name><name>suggesters</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
        <decl_stmt><decl><type><name>SolrSuggester</name></type> <name>suggester</name> <init>= <expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>suggester</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></for>
    </block_content>}</block></lambda></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registryName</name></expr></argument>, <argument><expr><name>suggestersMap</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"suggesters"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
  

   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>long</name></type> <name>ramBytesUsed</name><parameter_list>()</parameter_list> <block>{<block_content>
     <decl_stmt><decl><type><name>long</name></type> <name>sizeInBytes</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>DefaultSolrHighlighter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>DefaultSolrHighlighter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">24304d0a1b6</literal><operator>..</operator><literal type="number">7e56ee44e58</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>DefaultSolrHighlighter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>DefaultSolrHighlighter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">128</literal></expr><operator>,</operator><expr><literal type="number">40</literal> <operator>+</operator><literal type="number">128</literal></expr><operator>,</operator><expr><literal type="number">58</literal> @@ <specifier>public</specifier> <name>class</name> <name>DefaultSolrHighlighter</name> extends <name>SolrHighlighter</name> implements <name>PluginInf</name>
 
     <comment type="line">// Load the fragmenters</comment>
     <name>SolrFragmenter</name> <name>frag</name> <operator>=</operator> <call><name><name>solrCore</name><operator>.</operator><name>initPlugins</name></name><argument_list>(<argument><expr><call><name><name>info</name><operator>.</operator><name>getChildren</name></name><argument_list>(<argument><expr><literal type="string">"fragmenter"</literal></expr></argument>)</argument_list></call></expr></argument> , <argument><expr><name>fragmenters</name></expr></argument>,<argument><expr><name><name>SolrFragmenter</name><operator>.</operator><name>class</name></name></expr></argument>,<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>frag</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>frag</name> <operator>=</operator> <operator>new</operator> <call><name>GapFragmenter</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>frag</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>frag</name> <operator>=</operator> <operator>new</operator> <call><name>GapFragmenter</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>solrCore</name><operator>.</operator><name>initDefaultPlugin</name></name><argument_list>(<argument><expr><name>frag</name></expr></argument>, <argument><expr><name><name>SolrFragmenter</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
     <expr_stmt><expr><call><name><name>fragmenters</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><name>frag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>fragmenters</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>frag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <comment type="line">// Load the formatters</comment>
     <decl_stmt><decl><type><name>SolrFormatter</name></type> <name>fmt</name> <init>= <expr><call><name><name>solrCore</name><operator>.</operator><name>initPlugins</name></name><argument_list>(<argument><expr><call><name><name>info</name><operator>.</operator><name>getChildren</name></name><argument_list>(<argument><expr><literal type="string">"formatter"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>formatters</name></expr></argument>,<argument><expr><name><name>SolrFormatter</name><operator>.</operator><name>class</name></name></expr></argument>,<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>fmt</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>fmt</name> <operator>=</operator> <operator>new</operator> <call><name>HtmlFormatter</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>fmt</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>fmt</name> <operator>=</operator> <operator>new</operator> <call><name>HtmlFormatter</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>solrCore</name><operator>.</operator><name>initDefaultPlugin</name></name><argument_list>(<argument><expr><name>fmt</name></expr></argument>, <argument><expr><name><name>SolrFormatter</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
     <expr_stmt><expr><call><name><name>formatters</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><name>fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>formatters</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <comment type="line">// Load the encoders</comment>
     <decl_stmt><decl><type><name>SolrEncoder</name></type> <name>enc</name> <init>= <expr><call><name><name>solrCore</name><operator>.</operator><name>initPlugins</name></name><argument_list>(<argument><expr><call><name><name>info</name><operator>.</operator><name>getChildren</name></name><argument_list>(<argument><expr><literal type="string">"encoder"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>encoders</name></expr></argument>,<argument><expr><name><name>SolrEncoder</name><operator>.</operator><name>class</name></name></expr></argument>,<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>enc</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>enc</name> <operator>=</operator> <operator>new</operator> <call><name>DefaultEncoder</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>enc</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>enc</name> <operator>=</operator> <operator>new</operator> <call><name>DefaultEncoder</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>solrCore</name><operator>.</operator><name>initDefaultPlugin</name></name><argument_list>(<argument><expr><name>enc</name></expr></argument>, <argument><expr><name><name>SolrEncoder</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
     <expr_stmt><expr><call><name><name>encoders</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><name>enc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>encoders</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>enc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <comment type="line">// Load the FragListBuilders</comment>
     <decl_stmt><decl><type><name>SolrFragListBuilder</name></type> <name>fragListBuilder</name> <init>= <expr><call><name><name>solrCore</name><operator>.</operator><name>initPlugins</name></name><argument_list>(<argument><expr><call><name><name>info</name><operator>.</operator><name>getChildren</name></name><argument_list>(<argument><expr><literal type="string">"fragListBuilder"</literal></expr></argument>)</argument_list></call></expr></argument>,
         <argument><expr><name>fragListBuilders</name></expr></argument>, <argument><expr><name><name>SolrFragListBuilder</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if<condition>( <expr><name>fragListBuilder</name> <operator>==</operator> <literal type="null">null</literal></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>fragListBuilder</name> <operator>=</operator> <operator>new</operator> <call><name>SimpleFragListBuilder</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt><if>if<condition>( <expr><name>fragListBuilder</name> <operator>==</operator> <literal type="null">null</literal></expr> )</condition> <block>{<block_content>
      <expr_stmt><expr><name>fragListBuilder</name> <operator>=</operator> <operator>new</operator> <call><name>SimpleFragListBuilder</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>solrCore</name><operator>.</operator><name>initDefaultPlugin</name></name><argument_list>(<argument><expr><name>fragListBuilder</name></expr></argument>, <argument><expr><name><name>SolrFragListBuilder</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
     <expr_stmt><expr><call><name><name>fragListBuilders</name><operator>.</operator><name>put</name></name><argument_list>( <argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><name>fragListBuilder</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>fragListBuilders</name><operator>.</operator><name>put</name></name><argument_list>( <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>fragListBuilder</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
 
     <comment type="line">// Load the FragmentsBuilders</comment>
     <decl_stmt><decl><type><name>SolrFragmentsBuilder</name></type> <name>fragsBuilder</name> <init>= <expr><call><name><name>solrCore</name><operator>.</operator><name>initPlugins</name></name><argument_list>(<argument><expr><call><name><name>info</name><operator>.</operator><name>getChildren</name></name><argument_list>(<argument><expr><literal type="string">"fragmentsBuilder"</literal></expr></argument>)</argument_list></call></expr></argument>,
         <argument><expr><name>fragmentsBuilders</name></expr></argument>, <argument><expr><name><name>SolrFragmentsBuilder</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if<condition>( <expr><name>fragsBuilder</name> <operator>==</operator> <literal type="null">null</literal></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>fragsBuilder</name> <operator>=</operator> <operator>new</operator> <call><name>ScoreOrderFragmentsBuilder</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt><if>if<condition>( <expr><name>fragsBuilder</name> <operator>==</operator> <literal type="null">null</literal></expr> )</condition> <block>{<block_content>
      <expr_stmt><expr><name>fragsBuilder</name> <operator>=</operator> <operator>new</operator> <call><name>ScoreOrderFragmentsBuilder</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>solrCore</name><operator>.</operator><name>initDefaultPlugin</name></name><argument_list>(<argument><expr><name>fragsBuilder</name></expr></argument>, <argument><expr><name><name>SolrFragmentsBuilder</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
     <expr_stmt><expr><call><name><name>fragmentsBuilders</name><operator>.</operator><name>put</name></name><argument_list>( <argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><name>fragsBuilder</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>fragmentsBuilders</name><operator>.</operator><name>put</name></name><argument_list>( <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>fragsBuilder</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
 
     <comment type="line">// Load the BoundaryScanners</comment>
     <decl_stmt><decl><type><name>SolrBoundaryScanner</name></type> <name>boundaryScanner</name> <init>= <expr><call><name><name>solrCore</name><operator>.</operator><name>initPlugins</name></name><argument_list>(<argument><expr><call><name><name>info</name><operator>.</operator><name>getChildren</name></name><argument_list>(<argument><expr><literal type="string">"boundaryScanner"</literal></expr></argument>)</argument_list></call></expr></argument>,
         <argument><expr><name>boundaryScanners</name></expr></argument>, <argument><expr><name><name>SolrBoundaryScanner</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if<condition>(<expr><name>boundaryScanner</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>boundaryScanner</name> <operator>=</operator> <operator>new</operator> <call><name>SimpleBoundaryScanner</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt><if>if<condition>(<expr><name>boundaryScanner</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>boundaryScanner</name> <operator>=</operator> <operator>new</operator> <call><name>SimpleBoundaryScanner</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>solrCore</name><operator>.</operator><name>initDefaultPlugin</name></name><argument_list>(<argument><expr><name>boundaryScanner</name></expr></argument>, <argument><expr><name><name>SolrBoundaryScanner</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
     <expr_stmt><expr><call><name><name>boundaryScanners</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><name>boundaryScanner</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>boundaryScanners</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>boundaryScanner</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>GapFragmenter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>GapFragmenter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">64cb280a25a</literal><operator>..</operator><literal type="number">6a11bb9018c</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>GapFragmenter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>GapFragmenter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">30</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">30</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>GapFragmenter</name> extends <name>HighlightingPluginBase</name> implements <name>SolrFragmen</name>
   @<name>Override</name>
   <specifier>public</specifier> <name>Fragmenter</name> <call><name>getFragmenter</name><argument_list>(<argument><expr><name>String</name> <name>fieldName</name></expr></argument>, <argument><expr><name>SolrParams</name> <name>params</name></expr></argument> )</argument_list></call>
   <block>{
    <expr><name>numRequests</name><operator>++</operator></expr>;
    <call><name><name>numRequests</name><operator>.</operator><name>inc</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><name>params</name> <operator>=</operator> <call><name><name>SolrParams</name><operator>.</operator><name>wrapDefaults</name></name><argument_list>(<argument><expr><name>params</name></expr></argument>, <argument><expr><name>defaults</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     
     <decl_stmt><decl><type><name>int</name></type> <name>fragsize</name> <init>= <expr><call><name><name>params</name><operator>.</operator><name>getFieldInt</name></name><argument_list>( <argument><expr><name>fieldName</name></expr></argument>, <argument><expr><name><name>HighlightParams</name><operator>.</operator><name>FRAGSIZE</name></name></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>HighlightingPluginBase</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>HighlightingPluginBase</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f60ada82d1b</name><operator>..</operator><literal type="number">7acaacdd03c</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>HighlightingPluginBase</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>HighlightingPluginBase</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">21</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">27</literal> @@
  <operator>*</operator><operator>/</operator></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>highlight</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URL</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 
<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>Counter</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricRegistry</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>SolrParams</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>SimpleOrderedMap</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoMBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricManager</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricProducer</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
  * 
  * @since solr 1.3
  */</comment>
<class_decl><specifier>public</specifier> <specifier>abstract</specifier> class <name>HighlightingPluginBase</name> <super_list><implements>implements <super><name>SolrInfoMBean</name></super>
<super><specifier>public</specifier></super></implements> abstract class HighlightingPluginBase implements SolrInfoBean</super_list><operator>,</operator> SolrMetricProducer
 <block>{<block_content>
  <decl_stmt><decl><type><specifier>protected</specifier> <name>long</name></type> <name>numRequests</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>protected</specifier> <name>Counter</name></type> <name>numRequests</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>protected</specifier> <name>SolrParams</name></type> <name>defaults</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>protected</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>metricNames</name> <init>= <expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>protected</specifier> <name>MetricRegistry</name></type> <name>registry</name></decl>;</decl_stmt>
 
   <function><type><specifier>public</specifier> <name>void</name></type> <name>init</name><parameter_list>(<parameter><decl><type><name>NamedList</name></type> <name>args</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <if_stmt><if>if<condition>( <expr><name>args</name> <operator>!=</operator> <literal type="null">null</literal></expr> )</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">50</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">56</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>HighlightingPluginBase</name> implements <name>SolrInfoMBean</name>
 
   @<name>Override</name>
   <specifier>public</specifier> <specifier>abstract</specifier> <name>String</name> <call><name>getDescription</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>String</name></type> <name>getSource</name><parameter_list>()</parameter_list> <block>{<block_content> <return>return <expr><literal type="null">null</literal></expr>;</return> </block_content>}</block></function>
  
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>String</name></type> <name>getVersion</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getPackage</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSpecificationVersion</name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>
  

   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>Category</name></type> <name>getCategory</name><parameter_list>()</parameter_list>
   <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">65</literal></expr><operator>,</operator><expr><literal type="number">15</literal> <operator>+</operator><literal type="number">64</literal></expr><operator>,</operator><expr><literal type="number">19</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>HighlightingPluginBase</name> implements <name>SolrInfoMBean</name></expr></expr_stmt>
   </block_content>}</block></function>
 
   <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name><name>URL</name><index>[]</index></name></type> <name>getDocs</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><literal type="null">null</literal></expr>;</return>  <comment type="line">// this can be overridden, but not required</comment>
  <function><type><specifier>public</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>getMetricNames</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>metricNames</name></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>MetricRegistry</name></type> <name>getMetricRegistry</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>registry</name></expr>;</return>
   </block_content>}</block></function>
 
   <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>NamedList</name></type> <name>getStatistics</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name></type> <name>lst</name> <init>= <expr><operator>new</operator> <call><name><name>SimpleOrderedMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"requests"</literal></expr></argument>, <argument><expr><name>numRequests</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>lst</name></expr>;</return>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>initializeMetrics</name><parameter_list>(<parameter><decl><type><name>SolrMetricManager</name></type> <name>manager</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>registryName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>scope</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name>registry</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>registry</name></name><argument_list>(<argument><expr><name>registryName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>numRequests</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>counter</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registryName</name></expr></argument>, <argument><expr><literal type="string">"requests"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 </block_content>}</block></function>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>HtmlFormatter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>HtmlFormatter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">842d5cdbfe6</literal><operator>..</operator><literal type="number">0950c53e7ef</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>HtmlFormatter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>HtmlFormatter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>HtmlFormatter</name> extends <name>HighlightingPluginBase</name> implements <name>SolrFormatt</name>
   @<name>Override</name>
   <specifier>public</specifier> <name>Formatter</name> <call><name>getFormatter</name><argument_list>(<argument><expr><name>String</name> <name>fieldName</name></expr></argument>, <argument><expr><name>SolrParams</name> <name>params</name></expr></argument> )</argument_list></call> 
   <block>{
    <expr><name>numRequests</name><operator>++</operator></expr>;
    <call><name><name>numRequests</name><operator>.</operator><name>inc</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><name>params</name> <operator>=</operator> <call><name><name>SolrParams</name><operator>.</operator><name>wrapDefaults</name></name><argument_list>(<argument><expr><name>params</name></expr></argument>, <argument><expr><name>defaults</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <return>return <expr><operator>new</operator> <call><name>SimpleHTMLFormatter</name><argument_list>(
<argument><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>RegexFragmenter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>RegexFragmenter</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b755b2d0a92</name><operator>..</operator><name>ffefbad33ac</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>RegexFragmenter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>RegexFragmenter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">60</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">60</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>RegexFragmenter</name> extends <name>HighlightingPluginBase</name> implements <name>SolrFragm</name>
   @<name>Override</name>
   <specifier>public</specifier> <name>Fragmenter</name> <call><name>getFragmenter</name><argument_list>(<argument><expr><name>String</name> <name>fieldName</name></expr></argument>, <argument><expr><name>SolrParams</name> <name>params</name></expr></argument> )</argument_list></call>
   <block>{ 
    <expr><name>numRequests</name><operator>++</operator></expr>;
    <call><name><name>numRequests</name><operator>.</operator><name>inc</name></name><argument_list>()</argument_list></call></block></expr></argument>;</argument_list></call></expr></return>
     <expr_stmt><expr><name>params</name> <operator>=</operator> <call><name><name>SolrParams</name><operator>.</operator><name>wrapDefaults</name></name><argument_list>(<argument><expr><name>params</name></expr></argument>, <argument><expr><name>defaults</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>int</name></type> <name>fragsize</name>  <init>= <expr><call><name><name>params</name><operator>.</operator><name>getFieldInt</name></name><argument_list>(   <argument><expr><name>fieldName</name></expr></argument>, <argument><expr><name><name>HighlightParams</name><operator>.</operator><name>FRAGSIZE</name></name></expr></argument>,  <argument><expr><name><name>LuceneRegexFragmenter</name><operator>.</operator><name>DEFAULT_FRAGMENT_SIZE</name></name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>SimpleFragListBuilder</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>SimpleFragListBuilder</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ed5430ce1e6</name><operator>..</operator><literal type="number">7e30a9231ae</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>SimpleFragListBuilder</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>SimpleFragListBuilder</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SimpleFragListBuilder</name> extends <name>HighlightingPluginBase</name> implements
     <comment type="line">// If that ever changes, it should wrap them with defaults...</comment>
     <comment type="line">// params = SolrParams.wrapDefaults(params, defaults)</comment>
 
    <name>numRequests</name><operator>++</operator></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>numRequests</name><operator>.</operator><name>inc</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
     <return>return <expr><operator>new</operator> <call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>vectorhighlight</name><operator>.</operator><name>SimpleFragListBuilder</name></name><argument_list>()</argument_list></call></expr>;</return>
   </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>SingleFragListBuilder</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>SingleFragListBuilder</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">0b79929b35d</literal><operator>..</operator><literal type="number">0dfa16e454a</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>SingleFragListBuilder</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>SingleFragListBuilder</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SingleFragListBuilder</name> extends <name>HighlightingPluginBase</name> implements
     <comment type="line">// If that ever changes, it should wrap them with defaults...</comment>
     <comment type="line">// params = SolrParams.wrapDefaults(params, defaults)</comment>
 
    <name>numRequests</name><operator>++</operator></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>numRequests</name><operator>.</operator><name>inc</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
     <return>return <expr><operator>new</operator> <call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>vectorhighlight</name><operator>.</operator><name>SingleFragListBuilder</name></name><argument_list>()</argument_list></call></expr>;</return>
   </block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>SolrBoundaryScanner</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>SolrBoundaryScanner</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">6f442f72bf1</literal><operator>..</operator><name>ddbbfdeb88b</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>SolrBoundaryScanner</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>SolrBoundaryScanner</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>highlight</name></name>;</package>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>vectorhighlight</name><operator>.</operator><name>BoundaryScanner</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>SolrParams</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoMBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>plugin</name><operator>.</operator><name>NamedListInitializedPlugin</name></name>;</import>
 
 <class><specifier>public</specifier> <specifier>abstract</specifier> class <name>SolrBoundaryScanner</name> <super_list><extends>extends <super><name>HighlightingPluginBase</name></super></extends> <implements>implements
    <super><name>SolrInfoMBean</name></super>, <super><name>NamedListInitializedPlugin</name></super></implements></super_list> <block>{
    <expr_stmt><expr><name>SolrInfoBean</name></expr><operator>,</operator> <expr><name>NamedListInitializedPlugin</name> <block>{
 
   <expr><specifier>public</specifier> <name>BoundaryScanner</name> <call><name>getBoundaryScanner</name><argument_list>(<argument><expr><name>String</name> <name>fieldName</name></expr></argument>, <argument><expr><name>SolrParams</name> <name>params</name></expr></argument>)</argument_list></call><block>{
    <expr><name>numRequests</name><operator>++</operator></expr>;
    <call><name><name>numRequests</name><operator>.</operator><name>inc</name></name><argument_list>()</argument_list></call></block></expr>;
     <name>params</name> <operator>=</operator> <call><name><name>SolrParams</name><operator>.</operator><name>wrapDefaults</name></name><argument_list>(<argument><expr><name>params</name></expr></argument>, <argument><expr><name>defaults</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
 
     <return>return <expr><call><name>get</name><argument_list>(<argument><expr><name>fieldName</name></expr></argument>, <argument><expr><name>params</name></expr></argument>)</argument_list></call></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>SolrEncoder</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>SolrEncoder</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9f49228805d</literal><operator>..</operator><literal type="number">7b78a06969f</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>SolrEncoder</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>SolrEncoder</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>highlight</name></name>;</package>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>highlight</name><operator>.</operator><name>Encoder</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>SolrParams</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoMBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>plugin</name><operator>.</operator><name>NamedListInitializedPlugin</name></name>;</import>
 
<interface><specifier>public</specifier> interface <name>SolrEncoder</name> <super_list><extends>extends <super><name>SolrInfoMBean</name></super>, <super><name>NamedListInitializedPlugin</name></super></extends></super_list> <block>{
<interface><specifier>public</specifier> interface <name>SolrEncoder</name> <super_list><extends>extends <super><name>SolrInfoBean</name></super>, <super><name>NamedListInitializedPlugin</name></super></extends></super_list> <block>{
 
   <comment type="block" format="javadoc">/** &lt;code&gt;init&lt;/code&gt; will be called just once, immediately after creation.
    * &lt;p&gt;The args are user-level initialization parameters that
diff --git a/solr/core/src/java/org/apache/solr/highlight/SolrFormatter.java b/solr/core/src/java/org/apache/solr/highlight/SolrFormatter.java
index a8f51dbcd46..1a6443e6def 100644
-- a/solr/core/src/java/org/apache/solr/highlight/SolrFormatter.java
++ b/solr/core/src/java/org/apache/solr/highlight/SolrFormatter.java
@@ -19,10 +19,10 @@ package org.apache.solr.highlight;
 import org.apache.lucene.search.highlight.Formatter;
 import org.apache.solr.common.params.SolrParams;
 import org.apache.solr.common.util.NamedList;
import org.apache.solr.core.SolrInfoMBean;
import org.apache.solr.core.SolrInfoBean;
 import org.apache.solr.util.plugin.NamedListInitializedPlugin;
 
public interface SolrFormatter extends SolrInfoMBean, NamedListInitializedPlugin {
public interface SolrFormatter extends SolrInfoBean, NamedListInitializedPlugin {
 
   /** &lt;code&gt;init&lt;/code&gt; will be called just once, immediately after creation.
    * &lt;p&gt;The args are user-level initialization parameters that
diff --git a/solr/core/src/java/org/apache/solr/highlight/SolrFragListBuilder.java b/solr/core/src/java/org/apache/solr/highlight/SolrFragListBuilder.java
index f0c36b4d602..87da23513b0 100644
-- a/solr/core/src/java/org/apache/solr/highlight/SolrFragListBuilder.java
++ b/solr/core/src/java/org/apache/solr/highlight/SolrFragListBuilder.java
@@ -19,10 +19,10 @@ package org.apache.solr.highlight;
 import org.apache.lucene.search.vectorhighlight.FragListBuilder;
 import org.apache.solr.common.params.SolrParams;
 import org.apache.solr.common.util.NamedList;
import org.apache.solr.core.SolrInfoMBean;
import org.apache.solr.core.SolrInfoBean;
 import org.apache.solr.util.plugin.NamedListInitializedPlugin;
 
public interface SolrFragListBuilder extends SolrInfoMBean, NamedListInitializedPlugin {
public interface SolrFragListBuilder extends SolrInfoBean, NamedListInitializedPlugin {
 
   /** &lt;code&gt;init&lt;/code&gt; will be called just once, immediately after creation.
    * &lt;p&gt;The args are user-level initialization parameters that
diff --git a/solr/core/src/java/org/apache/solr/highlight/SolrFragmenter.java b/solr/core/src/java/org/apache/solr/highlight/SolrFragmenter.java
index 547506f5cf1..98c3056993d 100644
-- a/solr/core/src/java/org/apache/solr/highlight/SolrFragmenter.java
++ b/solr/core/src/java/org/apache/solr/highlight/SolrFragmenter.java
@@ -19,10 +19,10 @@ package org.apache.solr.highlight;
 import org.apache.lucene.search.highlight.Fragmenter;
 import org.apache.solr.common.params.SolrParams;
 import org.apache.solr.common.util.NamedList;
import org.apache.solr.core.SolrInfoMBean;
import org.apache.solr.core.SolrInfoBean;
 import org.apache.solr.util.plugin.NamedListInitializedPlugin;
 
public interface SolrFragmenter extends SolrInfoMBean, NamedListInitializedPlugin {
public interface SolrFragmenter extends SolrInfoBean, NamedListInitializedPlugin {
 
   /** &lt;code&gt;init&lt;/code&gt; will be called just once, immediately after creation.
    * &lt;p&gt;The args are user-level initialization parameters that
diff --git a/solr/core/src/java/org/apache/solr/highlight/SolrFragmentsBuilder.java b/solr/core/src/java/org/apache/solr/highlight/SolrFragmentsBuilder.java
index 78ea5a4deee..023d55ae391 100644
-- a/solr/core/src/java/org/apache/solr/highlight/SolrFragmentsBuilder.java
++ b/solr/core/src/java/org/apache/solr/highlight/SolrFragmentsBuilder.java
@@ -21,11 +21,11 @@ import org.apache.lucene.search.vectorhighlight.FragmentsBuilder;
 import org.apache.solr.common.SolrException;
 import org.apache.solr.common.params.HighlightParams;
 import org.apache.solr.common.params.SolrParams;
import org.apache.solr.core.SolrInfoMBean;
import org.apache.solr.core.SolrInfoBean;
 import org.apache.solr.util.plugin.NamedListInitializedPlugin;
 
 public abstract class SolrFragmentsBuilder extends HighlightingPluginBase
  implements SolrInfoMBean, NamedListInitializedPlugin {
  implements SolrInfoBean, NamedListInitializedPlugin {
   
   public static final String DEFAULT_PRE_TAGS = "&lt;em&gt;";
   public static final String DEFAULT_POST_TAGS = "&lt;/em&gt;";
@@ -37,7 +37,7 @@ public abstract class SolrFragmentsBuilder extends HighlightingPluginBase
    * @return An appropriate {@link org.apache.lucene.search.vectorhighlight.FragmentsBuilder}.
    */</comment>
   <function><type><specifier>public</specifier> <name>FragmentsBuilder</name></type> <name>getFragmentsBuilder</name><parameter_list>(<parameter><decl><type><name>SolrParams</name></type> <name>params</name></decl></parameter>, <parameter><decl><type><name>BoundaryScanner</name></type> <name>bs</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name>numRequests</name><operator>++</operator></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>numRequests</name><operator>.</operator><name>inc</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>params</name> <operator>=</operator> <call><name><name>SolrParams</name><operator>.</operator><name>wrapDefaults</name></name><argument_list>(<argument><expr><name>params</name></expr></argument>, <argument><expr><name>defaults</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <return>return <expr><call><name>getFragmentsBuilder</name><argument_list>( <argument><expr><name>params</name></expr></argument>, <argument><expr><call><name>getPreTags</name><argument_list>( <argument><expr><name>params</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument> )</argument_list></call></expr></argument>, <argument><expr><call><name>getPostTags</name><argument_list>( <argument><expr><name>params</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument> )</argument_list></call></expr></argument>, <argument><expr><name>bs</name></expr></argument> )</argument_list></call></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>WeightedFragListBuilder</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>WeightedFragListBuilder</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f44c0f0b430</name><operator>..</operator><name>b97cc31c89d</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>WeightedFragListBuilder</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>highlight</name><operator>/</operator><name><name>WeightedFragListBuilder</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>WeightedFragListBuilder</name> extends <name>HighlightingPluginBase</name> implements
     <comment type="line">// If that ever changes, it should wrap them with defaults...</comment>
     <comment type="line">// params = SolrParams.wrapDefaults(params, defaults)</comment>
     
    <name>numRequests</name><operator>++</operator></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>numRequests</name><operator>.</operator><name>inc</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     
     <return>return <expr><operator>new</operator> <call><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>vectorhighlight</name><operator>.</operator><name>WeightedFragListBuilder</name></name><argument_list>()</argument_list></call></expr>;</return>
   </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>AltBufferPoolMetricSet</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>AltBufferPoolMetricSet</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">00000000000..f9d3a43b7dc</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>AltBufferPoolMetricSet</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">47</literal> @@</expr></expr_stmt>
<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>management</name><operator>.</operator><name>BufferPoolMXBean</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>management</name><operator>.</operator><name>ManagementFactory</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>Gauge</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>Metric</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricSet</name></name>;</import>

<comment type="block" format="javadoc">/**
 * This is an alternative implementation of {@link com.codahale.metrics.jvm.BufferPoolMetricSet} that
 * doesn't need an MBean server.
 */</comment>
<class><specifier>public</specifier> class <name>AltBufferPoolMetricSet</name> <super_list><implements>implements <super><name>MetricSet</name></super></implements></super_list> <block>{

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Metric</name></argument>&gt;</argument_list></name></type> <name>getMetrics</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Metric</name></argument>&gt;</argument_list></name></type> <name>metrics</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>BufferPoolMXBean</name></argument>&gt;</argument_list></name></type> <name>pools</name> <init>= <expr><call><name><name>ManagementFactory</name><operator>.</operator><name>getPlatformMXBeans</name></name><argument_list>(<argument><expr><name><name>BufferPoolMXBean</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><specifier>final</specifier> <name>BufferPoolMXBean</name></type> <name>pool</name> <range>: <expr><name>pools</name></expr></range></decl></init>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>String</name></type> <name>name</name> <init>= <expr><call><name><name>pool</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>metrics</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>name</name> <operator>+</operator> <literal type="string">".Count"</literal></expr></argument>, <argument><expr><operator>(</operator><name><name>Gauge</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name><operator>)</operator><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>pool</name><operator>.</operator><name>getCount</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>metrics</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>name</name> <operator>+</operator> <literal type="string">".MemoryUsed"</literal></expr></argument>, <argument><expr><operator>(</operator><name><name>Gauge</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name><operator>)</operator><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>pool</name><operator>.</operator><name>getMemoryUsed</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>metrics</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>name</name> <operator>+</operator> <literal type="string">".TotalCapacity"</literal></expr></argument>, <argument><expr><operator>(</operator><name><name>Gauge</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name><operator>)</operator><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>pool</name><operator>.</operator><name>getTotalCapacity</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return>return <expr><name>metrics</name></expr>;</return>
  </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>MetricsMap</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>MetricsMap</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">00000000000..f43c60b5927</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>MetricsMap</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">184</literal> @@</expr></expr_stmt>
<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name></name>;</package>

<import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>Attribute</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>AttributeList</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>AttributeNotFoundException</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>DynamicMBean</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>InvalidAttributeValueException</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>MBeanAttributeInfo</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>MBeanException</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>MBeanInfo</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>ReflectionException</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>openmbean</name><operator>.</operator><name>OpenMBeanAttributeInfoSupport</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>openmbean</name><operator>.</operator><name>OpenType</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>openmbean</name><operator>.</operator><name>SimpleType</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>invoke</name><operator>.</operator><name>MethodHandles</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>reflect</name><operator>.</operator><name>Field</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>function</name><operator>.</operator><name>BiConsumer</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>Gauge</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>Metric</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>AlreadyClosedException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Dynamically constructed map of metrics, intentionally different from {@link com.codahale.metrics.MetricSet}
 * where each metric had to be known in advance and registered separately in {@link com.codahale.metrics.MetricRegistry}.
 * &lt;p&gt;Note: this awkwardly extends {@link Gauge} and not {@link Metric} because awkwardly {@link Metric} instances
 * are not supported by {@link com.codahale.metrics.MetricRegistryListener} :(&lt;/p&gt;
 * &lt;p&gt;Note 2: values added to this metric map should belong to the list of types supported by JMX:
 * {@link javax.management.openmbean.OpenType#ALLOWED_CLASSNAMES_LIST}, otherwise only their toString()
 * representation will be shown in JConsole.&lt;/p&gt;
 */</comment>
<class><specifier>public</specifier> class <name>MetricsMap</name> <super_list><implements>implements <super><name><name>Gauge</name><argument_list type="generic">&lt;<argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></super>, <super><name>DynamicMBean</name></super></implements></super_list> <block>{
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Logger</name></type> <name>log</name> <init>= <expr><call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><call><name><name>MethodHandles</name><operator>.</operator><name>lookup</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>lookupClass</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <comment type="line">// set to true to use cached statistics between getMBeanInfo calls to work</comment>
  <comment type="line">// around over calling getStatistics on MBeanInfos when iterating over all attributes (SOLR-6586)</comment>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>boolean</name></type> <name>useCachedStatsBetweenGetMBeanInfoCalls</name> <init>= <expr><call><name><name>Boolean</name><operator>.</operator><name>getBoolean</name></name><argument_list>(<argument><expr><literal type="string">"useCachedStatsBetweenGetMBeanInfoCalls"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>private</specifier> <name><name>BiConsumer</name><argument_list type="generic">&lt;<argument><name>Boolean</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>initializer</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>volatile</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>cachedValue</name></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>MetricsMap</name><parameter_list>(<parameter><decl><type><name><name>BiConsumer</name><argument_list type="generic">&lt;<argument><name>Boolean</name></argument>, <argument><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>initializer</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>initializer</name></name> <operator>=</operator> <name>initializer</name></expr>;</expr_stmt>
  </block_content>}</block></constructor>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>getValue</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>getValue</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>getValue</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>detailed</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>map</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>initializer</name><operator>.</operator><name>accept</name></name><argument_list>(<argument><expr><name>detailed</name></expr></argument>, <argument><expr><name>map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>map</name></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>String</name></type> <name>toString</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>getValue</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>Object</name></type> <name>getAttribute</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>attribute</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>AttributeNotFoundException</name></expr></argument>, <argument><expr><name>MBeanException</name></expr></argument>, <argument><expr><name>ReflectionException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>Object</name></type> <name>val</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>stats</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>useCachedStatsBetweenGetMBeanInfoCalls</name></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>cachedStats</name> <init>= <expr><name><name>this</name><operator>.</operator><name>cachedValue</name></name></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>cachedStats</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>stats</name> <operator>=</operator> <name>cachedStats</name></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>stats</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>stats</name> <operator>=</operator> <call><name>getValue</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt><expr><name>val</name> <operator>=</operator> <call><name><name>stats</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>attribute</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt><if>if <condition>(<expr><name>val</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <comment type="line">// It's String or one of the simple types, just return it as JMX suggests direct support for such types</comment>
      <for>for <control>(<init><decl><type><name>String</name></type> <name>simpleTypeName</name> <range>: <expr><name><name>SimpleType</name><operator>.</operator><name>ALLOWED_CLASSNAMES_LIST</name></name></expr></range></decl></init>)</control> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name><name>val</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getName</name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>simpleTypeName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
          <return>return <expr><name>val</name></expr>;</return>
        </block_content>}</block></if></if_stmt>
      </block_content>}</block></for>
      <comment type="line">// It's an arbitrary object which could be something complex and odd, return its toString, assuming that is</comment>
      <comment type="line">// a workable representation of the object</comment>
      <return>return <expr><call><name><name>val</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <return>return <expr><literal type="null">null</literal></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>setAttribute</name><parameter_list>(<parameter><decl><type><name>Attribute</name></type> <name>attribute</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>AttributeNotFoundException</name></expr></argument>, <argument><expr><name>InvalidAttributeValueException</name></expr></argument>, <argument><expr><name>MBeanException</name></expr></argument>, <argument><expr><name>ReflectionException</name></expr></argument></throws> <block>{<block_content>
    <throw>throw <expr><operator>new</operator> <call><name>UnsupportedOperationException</name><argument_list>(<argument><expr><literal type="string">"Operation not Supported"</literal></expr></argument>)</argument_list></call></expr>;</throw>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>AttributeList</name></type> <name>getAttributes</name><parameter_list>(<parameter><decl><type><name><name>String</name><index>[]</index></name></type> <name>attributes</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>AttributeList</name></type> <name>list</name> <init>= <expr><operator>new</operator> <call><name>AttributeList</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>String</name></type> <name>attribute</name> <range>: <expr><name>attributes</name></expr></range></decl></init>)</control> <block>{<block_content>
      <try>try <block>{<block_content>
        <expr_stmt><expr><call><name><name>list</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Attribute</name><argument_list>(<argument><expr><name>attribute</name></expr></argument>, <argument><expr><call><name>getAttribute</name><argument_list>(<argument><expr><name>attribute</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Could not get attribute "</literal> <operator>+</operator> <name>attribute</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></catch></try>
    </block_content>}</block></for>
    <return>return <expr><name>list</name></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>AttributeList</name></type> <name>setAttributes</name><parameter_list>(<parameter><decl><type><name>AttributeList</name></type> <name>attributes</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <throw>throw <expr><operator>new</operator> <call><name>UnsupportedOperationException</name><argument_list>(<argument><expr><literal type="string">"Operation not Supported"</literal></expr></argument>)</argument_list></call></expr>;</throw>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>Object</name></type> <name>invoke</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>actionName</name></decl></parameter>, <parameter><decl><type><name><name>Object</name><index>[]</index></name></type> <name>params</name></decl></parameter>, <parameter><decl><type><name><name>String</name><index>[]</index></name></type> <name>signature</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>MBeanException</name></expr></argument>, <argument><expr><name>ReflectionException</name></expr></argument></throws> <block>{<block_content>
    <throw>throw <expr><operator>new</operator> <call><name>UnsupportedOperationException</name><argument_list>(<argument><expr><literal type="string">"Operation not Supported"</literal></expr></argument>)</argument_list></call></expr>;</throw>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>MBeanInfo</name></type> <name>getMBeanInfo</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>MBeanAttributeInfo</name></argument>&gt;</argument_list></name></type> <name>attrInfoList</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>stats</name> <init>= <expr><call><name>getValue</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>useCachedStatsBetweenGetMBeanInfoCalls</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>cachedValue</name> <operator>=</operator> <name>stats</name></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <try>try <block>{<block_content>
      <expr_stmt><expr><call><name><name>stats</name><operator>.</operator><name>forEach</name></name><argument_list>(<argument><expr><lambda><parameter_list>(<parameter><decl><name>k</name></decl></parameter>, <parameter><decl><name>v</name></decl></parameter>)</parameter_list> -&gt; <block>{<block_content>
        <decl_stmt><decl><type><name>Class</name></type> <name>type</name> <init>= <expr><call><name><name>v</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>OpenType</name></type> <name>typeBox</name> <init>= <expr><call><name>determineType</name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><call><name><name>type</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>String</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call> <operator>||</operator> <name>typeBox</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>attrInfoList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>MBeanAttributeInfo</name><argument_list>(<argument><expr><name>k</name></expr></argument>, <argument><expr><call><name><name>String</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>,
              <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <else>else <block>{<block_content>
          <expr_stmt><expr><call><name><name>attrInfoList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>OpenMBeanAttributeInfoSupport</name><argument_list>(
              <argument><expr><name>k</name></expr></argument>, <argument><expr><name>k</name></expr></argument>, <argument><expr><name>typeBox</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
      </block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <comment type="line">// don't log issue if the core is closing</comment>
      <if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><call><name><name>SolrException</name><operator>.</operator><name>getRootCause</name></name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call> <operator>instanceof</operator> <name>AlreadyClosedException</name><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Could not get attributes of MetricsMap: {}"</literal></expr></argument>, <argument><expr><name>this</name></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></catch></try>
    <decl_stmt><decl><type><name><name>MBeanAttributeInfo</name><index>[]</index></name></type> <name>attrInfoArr</name> <init>= <expr><call><name><name>attrInfoList</name>
        <operator>.</operator><name>toArray</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>MBeanAttributeInfo</name><index>[<expr><call><name><name>attrInfoList</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <return>return <expr><operator>new</operator> <call><name>MBeanInfo</name><argument_list>(<argument><expr><call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getName</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"MetricsMap"</literal></expr></argument>, <argument><expr><name>attrInfoArr</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <name>OpenType</name></type> <name>determineType</name><parameter_list>(<parameter><decl><type><name>Class</name></type> <name>type</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <try>try <block>{<block_content>
      <for>for <control>(<init><decl><type><name>Field</name></type> <name>field</name> <range>: <expr><call><name><name>SimpleType</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getFields</name></name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name><name>field</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name><name>SimpleType</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
          <decl_stmt><decl><type><name>SimpleType</name></type> <name>candidate</name> <init>= <expr><operator>(</operator><name>SimpleType</name><operator>)</operator> <call><name><name>field</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>SimpleType</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <if_stmt><if>if <condition>(<expr><call><name><name>candidate</name><operator>.</operator><name>getTypeName</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><call><name><name>type</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
            <return>return <expr><name>candidate</name></expr>;</return>
          </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
      </block_content>}</block></for>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></catch></try>
    <return>return <expr><literal type="null">null</literal></expr>;</return>
  </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><operator>\</operator> <name>No</name> <name>newline</name> <name>at</name> <name>end</name> <name>of</name> <name>file</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>OperatingSystemMetricSet</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>OperatingSystemMetricSet</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">34ef5d1c2e6</literal><operator>..</operator><literal type="number">21957eb2285</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>OperatingSystemMetricSet</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>OperatingSystemMetricSet</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">77</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">31</literal> @@
  <operator>*</operator><operator>/</operator></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name></name>;</package>
 
<import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>JMException</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>MBeanAttributeInfo</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>MBeanInfo</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>MBeanServer</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>ObjectName</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>invoke</name><operator>.</operator><name>MethodHandles</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>management</name><operator>.</operator><name>ManagementFactory</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>management</name><operator>.</operator><name>OperatingSystemMXBean</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 
<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>JmxAttributeGauge</name></name>;</import>
 <import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>Metric</name></name>;</import>
 <import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricSet</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>stats</name><operator>.</operator><name>MetricUtils</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
  * This is an extended replacement for {@link com.codahale.metrics.jvm.FileDescriptorRatioGauge}
 * - that class uses reflection and doesn't work under Java 9. We can also get much more
 * information about OS environment once we have to go through MBeanServer anyway.
 * - that class uses reflection and doesn't work under Java 9. This implementation tries to retrieve
 * bean properties from known implementations of {@link java.lang.management.OperatingSystemMXBean}.
  */</comment>
 <class><specifier>public</specifier> class <name>OperatingSystemMetricSet</name> <super_list><implements>implements <super><name>MetricSet</name></super></implements></super_list> <block>{
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Logger</name></type> <name>log</name> <init>= <expr><call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><call><name><name>MethodHandles</name><operator>.</operator><name>lookup</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>lookupClass</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <comment type="block" format="javadoc">/** Metric names - these correspond to known numeric MBean attributes. Depending on the OS and
   * Java implementation only some of them may be actually present.
   */</comment>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name><name>String</name><index>[]</index></name></type> <name>METRICS</name> <init>= <expr><block>{
      <expr><literal type="string">"AvailableProcessors"</literal></expr>,
      <expr><literal type="string">"CommittedVirtualMemorySize"</literal></expr>,
      <expr><literal type="string">"FreePhysicalMemorySize"</literal></expr>,
      <expr><literal type="string">"FreeSwapSpaceSize"</literal></expr>,
      <expr><literal type="string">"MaxFileDescriptorCount"</literal></expr>,
      <expr><literal type="string">"OpenFileDescriptorCount"</literal></expr>,
      <expr><literal type="string">"ProcessCpuLoad"</literal></expr>,
      <expr><literal type="string">"ProcessCpuTime"</literal></expr>,
      <expr><literal type="string">"SystemLoadAverage"</literal></expr>,
      <expr><literal type="string">"TotalPhysicalMemorySize"</literal></expr>,
      <expr><literal type="string">"TotalSwapSpaceSize"</literal></expr>
  }</block></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>MBeanServer</name></type> <name>mBeanServer</name></decl>;</decl_stmt>

  <constructor><specifier>public</specifier> <name>OperatingSystemMetricSet</name><parameter_list>(<parameter><decl><type><name>MBeanServer</name></type> <name>mBeanServer</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>mBeanServer</name></name> <operator>=</operator> <name>mBeanServer</name></expr>;</expr_stmt>
  </block_content>}</block></constructor>
 
   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Metric</name></argument>&gt;</argument_list></name></type> <name>getMetrics</name><parameter_list>()</parameter_list> <block>{<block_content>
     <decl_stmt><decl><type><specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Metric</name></argument>&gt;</argument_list></name></type> <name>metrics</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <try>try <block>{<block_content>
      <decl_stmt><decl><type><specifier>final</specifier> <name>ObjectName</name></type> <name>on</name> <init>= <expr><operator>new</operator> <call><name>ObjectName</name><argument_list>(<argument><expr><literal type="string">"java.lang:type=OperatingSystem"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <comment type="line">// verify that it exists</comment>
      <decl_stmt><decl><type><name>MBeanInfo</name></type> <name>info</name> <init>= <expr><call><name><name>mBeanServer</name><operator>.</operator><name>getMBeanInfo</name></name><argument_list>(<argument><expr><name>on</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <comment type="line">// collect valid attributes</comment>
      <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>attributes</name> <init>= <expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <for>for <control>(<init><decl><type><name>MBeanAttributeInfo</name></type> <name>ai</name> <range>: <expr><call><name><name>info</name><operator>.</operator><name>getAttributes</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
        <expr_stmt><expr><call><name><name>attributes</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>ai</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></for>
      <for>for <control>(<init><decl><type><name>String</name></type> <name>metric</name> <range>: <expr><name>METRICS</name></expr></range></decl></init>)</control> <block>{<block_content>
        <comment type="line">// verify that an attribute exists before attempting to add it</comment>
        <if_stmt><if>if <condition>(<expr><call><name><name>attributes</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><name>metric</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>metrics</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>metric</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>JmxAttributeGauge</name><argument_list>(<argument><expr><name>mBeanServer</name></expr></argument>, <argument><expr><name>on</name></expr></argument>, <argument><expr><name>metric</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    <decl_stmt><decl><type><name>OperatingSystemMXBean</name></type> <name>os</name> <init>= <expr><call><name><name>ManagementFactory</name><operator>.</operator><name>getOperatingSystemMXBean</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>MetricUtils</name><operator>.</operator><name>addMXBeanMetrics</name></name><argument_list>(<argument><expr><name>os</name></expr></argument>, <argument><expr><name><name>MetricUtils</name><operator>.</operator><name>OS_MXBEAN_CLASSES</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><lambda><parameter_list>(<parameter><decl><name>k</name></decl></parameter>, <parameter><decl><name>v</name></decl></parameter>)</parameter_list> -&gt; <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>metrics</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><name>k</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>metrics</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>k</name></expr></argument>, <argument><expr><name>v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if></if_stmt>
    </block_content>}</block></lambda></expr></argument></argument_list></call></expr></expr_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>JMException</name></type> <name>ignored</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Unable to load OperatingSystem MBean"</literal></expr></argument>, <argument><expr><name>ignored</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></catch>

    </block_content>}</block></for>)</block_content></block><empty_stmt>;</empty_stmt></try>
     <return>return <expr><name>metrics</name></expr>;</return>
   </block_content>}</block></function>
 }</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrCoreMetricManager</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrCoreMetricManager</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">43f35352ebf</literal><operator>..</operator><literal type="number">193bf68ff3e</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrCoreMetricManager</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrCoreMetricManager</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Closeable</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>invoke</name><operator>.</operator><name>MethodHandles</name></name>;</import>
 
<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricRegistry</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>cloud</name><operator>.</operator><name>CloudDescriptor</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>NodeConfig</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>PluginInfo</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrCore</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoMBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">76</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">77</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrCoreMetricManager</name> implements <name>Closeable</name> <block>{
   }</block>
 
   <comment type="block" format="javadoc">/**
   * Load reporters configured globally and specific to {@link org.apache.solr.core.SolrInfoMBean.Group#core}
   * Load reporters configured globally and specific to {@link org.apache.solr.core.SolrInfoBean.Group#core}
    * group or with a registry name specific to this core.
    */</comment>
   <specifier>public</specifier> <name>void</name> <call><name>loadReporters</name><argument_list>()</argument_list></call> <block>{
     <expr><name>NodeConfig</name> <name>nodeConfig</name> <operator>=</operator> <call><name><name>core</name><operator>.</operator><name>getCoreDescriptor</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCoreContainer</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getConfig</name><argument_list>()</argument_list></call></expr>;
     <name><name>PluginInfo</name><index>[]</index></name> <name>pluginInfos</name> <operator>=</operator> <call><name><name>nodeConfig</name><operator>.</operator><name>getMetricReporterPlugins</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>loadReporters</name></name><argument_list>(<argument><expr><name>pluginInfos</name></expr></argument>, <argument><expr><call><name><name>core</name><operator>.</operator><name>getResourceLoader</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>tag</name></expr></argument>,
        <argument><expr><name><name>SolrInfoMBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>core</name></name></expr></argument>, <argument><expr><name>registryName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>SolrInfoBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>core</name></name></expr><operator>,</operator> <expr><name>registryName</name></expr></expr_stmt>)</block><empty_stmt>;</empty_stmt></interface>
     <if_stmt><if>if <condition>(<expr><name>cloudMode</name></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>loadShardReporters</name></name><argument_list>(<argument><expr><name>pluginInfos</name></expr></argument>, <argument><expr><name>core</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if></if_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">126</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">127</literal></expr><operator>,</operator><expr><literal type="number">26</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrCoreMetricManager</name> implements <name>Closeable</name> <block>{
     <expr><call><name><name>producer</name><operator>.</operator><name>initializeMetrics</name></name><argument_list>(<argument><expr><name>metricManager</name></expr></argument>, <argument><expr><call><name>getRegistryName</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;
   }</block></expr></expr_stmt>
 
  <comment type="block" format="javadoc">/**
   * Return the registry used by this SolrCore.
   */</comment>
  <function><type><specifier>public</specifier> <name>MetricRegistry</name></type> <name>getRegistry</name><parameter_list>()</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>registryName</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <return>return <expr><call><name><name>metricManager</name><operator>.</operator><name>registry</name></name><argument_list>(<argument><expr><name>registryName</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <return>return <expr><literal type="null">null</literal></expr>;</return>
    </block_content>}</block></else></if_stmt>
  </block_content>}</block></function>

   <comment type="block" format="javadoc">/**
    * Closes reporters specific to this core.
    */</comment>
   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>close</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>closeReporters</name></name><argument_list>(<argument><expr><call><name>getRegistryName</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><call><name>getLeaderRegistryName</name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>closeReporters</name></name><argument_list>(<argument><expr><call><name>getLeaderRegistryName</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
   </block_content>}</block></function>
 
   <function><type><specifier>public</specifier> <name>SolrCore</name></type> <name>getCore</name><parameter_list>()</parameter_list> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">176</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">191</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrCoreMetricManager</name> implements <name>Closeable</name> <block>{
 
   <expr><specifier>public</specifier> <specifier>static</specifier> <name>String</name> <call><name>createRegistryName</name><argument_list>(<argument><expr><name>boolean</name> <name>cloud</name></expr></argument>, <argument><expr><name>String</name> <name>collectionName</name></expr></argument>, <argument><expr><name>String</name> <name>shardName</name></expr></argument>, <argument><expr><name>String</name> <name>replicaName</name></expr></argument>, <argument><expr><name>String</name> <name>coreName</name></expr></argument>)</argument_list></call> <block>{
     <if_stmt><if>if <condition>(<expr><name>cloud</name></expr>)</condition> <block>{<block_content> <comment type="line">// build registry name from logical names</comment>
      <return>return <expr><call><name><name>SolrMetricManager</name><operator>.</operator><name>getRegistryName</name></name><argument_list>(<argument><expr><name><name>SolrInfoMBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>core</name></name></expr></argument>, <argument><expr><name>collectionName</name></expr></argument>, <argument><expr><name>shardName</name></expr></argument>, <argument><expr><name>replicaName</name></expr></argument>)</argument_list></call></expr>;</return>
      <return>return <expr><call><name><name>SolrMetricManager</name><operator>.</operator><name>getRegistryName</name></name><argument_list>(<argument><expr><name><name>SolrInfoBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>core</name></name></expr></argument>, <argument><expr><name>collectionName</name></expr></argument>, <argument><expr><name>shardName</name></expr></argument>, <argument><expr><name>replicaName</name></expr></argument>)</argument_list></call></expr>;</return>
     <expr_stmt/></block_content></block></if></if_stmt></block></expr>}</block></expr></expr_stmt> <if_stmt><else>else <block>{<block_content>
      <return>return <expr><call><name><name>SolrMetricManager</name><operator>.</operator><name>getRegistryName</name></name><argument_list>(<argument><expr><name><name>SolrInfoMBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>core</name></name></expr></argument>, <argument><expr><name>coreName</name></expr></argument>)</argument_list></call></expr>;</return>
      <return>return <expr><call><name><name>SolrMetricManager</name><operator>.</operator><name>getRegistryName</name></name><argument_list>(<argument><expr><name><name>SolrInfoBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>core</name></name></expr></argument>, <argument><expr><name>coreName</name></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></else></if_stmt>
   </block_content>}</block></function>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">224</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">239</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrCoreMetricManager</name> implements <name>Closeable</name> <block>{
 
   <expr><specifier>public</specifier> <specifier>static</specifier> <name>String</name> <call><name>createLeaderRegistryName</name><argument_list>(<argument><expr><name>boolean</name> <name>cloud</name></expr></argument>, <argument><expr><name>String</name> <name>collectionName</name></expr></argument>, <argument><expr><name>String</name> <name>shardName</name></expr></argument>)</argument_list></call> <block>{
     <if_stmt><if>if <condition>(<expr><name>cloud</name></expr>)</condition> <block>{<block_content>
      <return>return <expr><call><name><name>SolrMetricManager</name><operator>.</operator><name>getRegistryName</name></name><argument_list>(<argument><expr><name><name>SolrInfoMBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>collection</name></name></expr></argument>, <argument><expr><name>collectionName</name></expr></argument>, <argument><expr><name>shardName</name></expr></argument>, <argument><expr><literal type="string">"leader"</literal></expr></argument>)</argument_list></call></expr>;</return>
      <return>return <expr><call><name><name>SolrMetricManager</name><operator>.</operator><name>getRegistryName</name></name><argument_list>(<argument><expr><name><name>SolrInfoBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>collection</name></name></expr></argument>, <argument><expr><name>collectionName</name></expr></argument>, <argument><expr><name>shardName</name></expr></argument>, <argument><expr><literal type="string">"leader"</literal></expr></argument>)</argument_list></call></expr>;</return>
     <expr_stmt/></block_content></block></if></if_stmt></block></expr>}</block></expr></expr_stmt> <if_stmt><else>else <block>{<block_content>
       <return>return <expr><literal type="null">null</literal></expr>;</return>
     </block_content>}</block></else></if_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrMetricInfo</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrMetricInfo</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">4d093ebb43c</literal><operator>..</operator><literal type="number">8edfa042809</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrMetricInfo</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrMetricInfo</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name></name>;</package>
 
 <import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricRegistry</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoMBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoBean</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
  * Wraps meta-data for a metric.
@@ -25,7 +25,7 @@ import org.apache.solr.core.SolrInfoMBean;
 public final class SolrMetricInfo {
   public final String name;
   public final String scope;
  public final SolrInfoMBean.Category category;
  public final SolrInfoBean.Category category;
 
   /**
    * Creates a new instance of {@link SolrMetricInfo}.
@@ -34,7 +34,7 @@ public final class SolrMetricInfo {
    * @param scope    the scope of the metric (e.g. `/admin/ping`)
    * @param name     the name of the metric (e.g. `Requests`)
    */</comment>
  <constructor><specifier>public</specifier> <name>SolrMetricInfo</name><parameter_list>(<parameter><decl><type><name><name>SolrInfoMBean</name><operator>.</operator><name>Category</name></name></type> <name>category</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>scope</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>name</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <constructor><specifier>public</specifier> <name>SolrMetricInfo</name><parameter_list>(<parameter><decl><type><name><name>SolrInfoBean</name><operator>.</operator><name>Category</name></name></type> <name>category</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>scope</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>name</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <expr_stmt><expr><name><name>this</name><operator>.</operator><name>name</name></name> <operator>=</operator> <name>name</name></expr>;</expr_stmt>
     <expr_stmt><expr><name><name>this</name><operator>.</operator><name>scope</name></name> <operator>=</operator> <name>scope</name></expr>;</expr_stmt>
     <expr_stmt><expr><name><name>this</name><operator>.</operator><name>category</name></name> <operator>=</operator> <name>category</name></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">45</literal></expr><operator>,</operator><expr><literal type="number">18</literal> <operator>+</operator><literal type="number">45</literal></expr><operator>,</operator><expr><literal type="number">25</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>SolrMetricInfo</name> <block>{
       <return>return <expr><literal type="null">null</literal></expr>;</return>
     }</block></expr></expr_stmt>
     <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>names</name> <init>= <expr><call><name><name>fullName</name><operator>.</operator><name>split</name></name><argument_list>(<argument><expr><literal type="string">"\\."</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name><name>names</name><operator>.</operator><name>length</name></name> <operator>&lt;</operator> <literal type="number">3</literal></expr>)</condition> <block>{<block_content> <comment type="line">// not a valid info</comment>
    <if_stmt><if>if <condition>(<expr><name><name>names</name><operator>.</operator><name>length</name></name> <operator>&lt;</operator> <literal type="number">2</literal></expr>)</condition> <block>{<block_content> <comment type="line">// not a valid info</comment>
       <return>return <expr><literal type="null">null</literal></expr>;</return>
     </block_content>}</block></if></if_stmt>
     <comment type="line">// check top-level name for valid category</comment>
    <decl_stmt><decl><type><name><name>SolrInfoMBean</name><operator>.</operator><name>Category</name></name></type> <name>category</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>SolrInfoBean</name><operator>.</operator><name>Category</name></name></type> <name>category</name></decl>;</decl_stmt>
     <try>try <block>{<block_content>
      <expr_stmt><expr><name>category</name> <operator>=</operator> <call><name><name>SolrInfoMBean</name><operator>.</operator><name>Category</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><name><name>names</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>category</name> <operator>=</operator> <call><name><name>SolrInfoBean</name><operator>.</operator><name>Category</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><name><name>names</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IllegalArgumentException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content> <comment type="line">// not a valid category</comment>
       <return>return <expr><literal type="null">null</literal></expr>;</return>
     </block_content>}</block></catch></try>
    <decl_stmt><decl><type><name>String</name></type> <name>scope</name> <init>= <expr><name><name>names</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>name</name> <init>= <expr><call><name><name>fullName</name><operator>.</operator><name>substring</name></name><argument_list>(<argument><expr><name><name>names</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><call><name>length</name><argument_list>()</argument_list></call> <operator>+</operator> <name><name>names</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><call><name>length</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="number">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>scope</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>name</name></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name><name>names</name><operator>.</operator><name>length</name></name> <operator>==</operator> <literal type="number">2</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>scope</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
      <expr_stmt><expr><name>name</name> <operator>=</operator> <call><name><name>fullName</name><operator>.</operator><name>substring</name></name><argument_list>(<argument><expr><name><name>names</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><call><name>length</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <expr_stmt><expr><name>scope</name> <operator>=</operator> <name><name>names</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
      <expr_stmt><expr><name>name</name> <operator>=</operator> <call><name><name>fullName</name><operator>.</operator><name>substring</name></name><argument_list>(<argument><expr><name><name>names</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><call><name>length</name><argument_list>()</argument_list></call> <operator>+</operator> <name><name>names</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><call><name>length</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
     <return>return <expr><operator>new</operator> <call><name>SolrMetricInfo</name><argument_list>(<argument><expr><name>category</name></expr></argument>, <argument><expr><name>scope</name></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></if></if_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrMetricManager</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrMetricManager</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f4abee0cc92</name><operator>..</operator><name>d4eb06ae7de</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrMetricManager</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrMetricManager</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">51</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">51</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>CoreContainer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>PluginInfo</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrCore</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoMBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrResourceLoader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>reporters</name><operator>.</operator><name>solr</name><operator>.</operator><name>SolrClusterReporter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>reporters</name><operator>.</operator><name>solr</name><operator>.</operator><name>SolrShardReporter</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">69</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">69</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
  <expr_stmt><expr><operator>*</operator> <block>{@<expr><name>link</name> <name>MetricRegistry</name></expr>}</block> <name>instances</name> <name>are</name> <name>automatically</name> <name>created</name> <name>when</name> <name>first</name> <name>referenced</name> <name>by</name> <name><name>name</name><operator>.</operator> <name>Similarly</name></name></expr><operator>,</operator>
  <expr><operator>*</operator> <name>instances</name> <name>of</name> <block>{@<expr><name>link</name> <name>Metric</name></expr>}</block> <name>implementations</name></expr><operator>,</operator> <expr><name>such</name> <name>as</name> <block>{@<expr><name>link</name> <name>Meter</name></expr>}</block></expr><operator>,</operator> <expr><block>{@<expr><name>link</name> <name>Counter</name></expr>}</block></expr><operator>,</operator> <expr><block>{@<expr><name>link</name> <name>Timer</name></expr>}</block> <name>and</name>
  <operator>*</operator> <block>{@<expr><name>link</name> <name>Histogram</name></expr>}</block> <name>are</name> <name>automatically</name> <name>created</name> <name>and</name> <name>registered</name> <name>under</name> <name>hierarchical</name> <name>names</name></expr><operator>,</operator> <expr><name>in</name> <name>a</name> <name>specified</name>
 <operator>*</operator> <name>registry</name></expr><operator>,</operator> <expr><name>when</name> <block>{@<expr><name>link</name> <operator>#</operator><call><name>meter</name><argument_list>(<argument><expr><name>String</name></expr></argument>, <argument><expr><name>String</name></expr></argument>, <argument><expr><name>String</name><operator>...</operator></expr></argument>)</argument_list></call></expr>}</block> <name>and</name> <name>other</name> <name>similar</name> <name>methods</name> <name>are</name> <name><name>called</name><operator>.</operator></name>
 * <name>registry</name></expr><operator>,</operator> <expr><name>when</name> <block>{@<expr><name>link</name> <operator>#</operator><call><name>meter</name><argument_list>(<argument><expr><name>SolrInfoBean</name></expr></argument>, <argument><expr><name>String</name></expr></argument>, <argument><expr><name>String</name></expr></argument>, <argument><expr><name>String</name><operator>...</operator></expr></argument>)</argument_list></call></expr>}</block> <name>and</name> <name>other</name> <name>similar</name> <name>methods</name> <name>are</name> <name><name>called</name><operator>.</operator></name>
  * <operator>&lt;</operator><name>p</name><operator>&gt;</operator><name>This</name> <name>class</name> <name>enforces</name> <name>a</name> <name>common</name> <call><name>prefix</name> <argument_list>(<argument><expr><block>{@<expr><name>link</name> <operator>#</operator><name>REGISTRY_NAME_PREFIX</name></expr>}</block></expr></argument>)</argument_list></call> <name>in</name> <name>all</name> <name>registry</name>
  <operator>*</operator> <name><name>names</name><operator>.</operator></name>&lt;<operator>/</operator><name>p</name><operator>&gt;</operator>
  <operator>*</operator> <operator>&lt;</operator><name>p</name><operator>&gt;</operator><name>Solr</name> <name>uses</name> <name>several</name> <name>different</name> <name>registries</name></expr></expr_stmt> <for>for collecting metrics belonging to different groups<operator>,</operator> <expr_stmt><expr><name>using</name>
 <operator>*</operator> <block>{@<expr><name>link</name> <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoMBean</name><operator>.</operator><name>Group</name></name></expr>}</block> <name>as</name> <name>the</name> <name>main</name> <name>name</name> <name>of</name> <name>the</name> <call><name>registry</name> <argument_list>(<argument><expr><name>plus</name> <name>the</name>
 <operator>*</operator> <block>{@<expr><name>link</name> <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoBean</name><operator>.</operator><name>Group</name></name></expr>}</block> <name>as</name> <name>the</name> <name>main</name> <name>name</name> <name>of</name> <name>the</name> <call><name>registry</name> <argument_list>(<argument><expr><name>plus</name> <name>the</name>
  <operator>*</operator> <name>above</name><operator>-</operator><name>mentioned</name> <name>prefix</name></expr></argument>)</argument_list></call><operator>.</operator> <name>Instances</name> <name>of</name> <block>{@<expr><name>link</name> <name>SolrMetricManager</name></expr>}</block> <name>are</name> <name>created</name></expr></argument></argument_list></call></expr></expr_stmt></for> <for>for each <block>{<block_content><annotation>@<name>link</name></annotation> <expr><name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>CoreContainer</name></name></expr></block_content>}</block></for><operator>,</operator>
  <expr_stmt><expr><operator>*</operator> <name>and</name> <name>most</name> <name>registries</name> <name>are</name> <name>local</name> <name>to</name> <name>each</name> <name>instance</name></expr><operator>,</operator> <expr><name>with</name> <name>the</name> <name>exception</name> <name>of</name> <name>two</name> <name>global</name> <name>registries</name><operator>:</operator>
  <operator>*</operator> <operator>&lt;</operator><name>code</name><operator>&gt;</operator><name><name>solr</name><operator>.</operator><name><name>jetty</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>code</name></argument>&gt;</argument_list></name></name> <name><name>and</name> <argument_list type="generic">&lt;<argument><name>code</name></argument>&gt;</argument_list></name><name><name>solr</name><operator>.</operator><name><name>jvm</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>code</name></argument>&gt;</argument_list></name></name></expr><operator>,</operator> <expr><name>which</name> <name>are</name> <name>shared</name> <name>between</name> <name>all</name> <block>{@<expr><name>link</name> <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>CoreContainer</name></name></expr>}</block><operator>-</operator><name><name>s</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>p</name></argument>&gt;</argument_list></name>
@@ <operator>-</operator><literal type="number">87</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">87</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrMetricManager</name> <block>{
 
   <comment type="block" format="javadoc">/** Registry name for Jetty-specific metrics. This name is also subject to overrides controlled by
    * system properties. This registry is shared between instances of {@link SolrMetricManager}. */</comment>
  <expr><specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>JETTY_REGISTRY</name> <operator>=</operator> <name>REGISTRY_NAME_PREFIX</name> <operator>+</operator> <call><name><name>SolrInfoMBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>jetty</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr>;
  <specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>JETTY_REGISTRY</name> <operator>=</operator> <name>REGISTRY_NAME_PREFIX</name> <operator>+</operator> <call><name><name>SolrInfoBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>jetty</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
 
   <comment type="block" format="javadoc">/** Registry name for JVM-specific metrics. This name is also subject to overrides controlled by
    * system properties. This registry is shared between instances of {@link SolrMetricManager}. */</comment>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>JVM_REGISTRY</name> <init>= <expr><name>REGISTRY_NAME_PREFIX</name> <operator>+</operator> <call><name><name>SolrInfoMBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>jvm</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>JVM_REGISTRY</name> <init>= <expr><name>REGISTRY_NAME_PREFIX</name> <operator>+</operator> <call><name><name>SolrInfoBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>jvm</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name><name>ConcurrentMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>MetricRegistry</name></argument>&gt;</argument_list></name></type> <name>registries</name> <init>= <expr><operator>new</operator> <call><name><name>ConcurrentHashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">247</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">247</literal></expr><operator>,</operator><expr><literal type="number">66</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrMetricManager</name> <block>{
     }</block></expr></expr_stmt>
   </block_content>}</block></constructor>
 
  <class><specifier>public</specifier> <specifier>static</specifier> class <name>OrFilter</name> <super_list><implements>implements <super><name>MetricFilter</name></super></implements></super_list> <block>{
    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>MetricFilter</name></argument>&gt;</argument_list></name></type> <name>filters</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <constructor><specifier>public</specifier> <name>OrFilter</name><parameter_list>(<parameter><decl><type><name><name>Collection</name><argument_list type="generic">&lt;<argument><name>MetricFilter</name></argument>&gt;</argument_list></name></type> <name>filters</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>filters</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>filters</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><name>filters</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></constructor>

    <constructor><specifier>public</specifier> <name>OrFilter</name><parameter_list>(<parameter><decl><type><name>MetricFilter</name><modifier>...</modifier></type> <name>filters</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>filters</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <for>for <control>(<init><decl><type><name>MetricFilter</name></type> <name>filter</name> <range>: <expr><name>filters</name></expr></range></decl></init>)</control> <block>{<block_content>
          <if_stmt><if>if <condition>(<expr><name>filter</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>filters</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></constructor>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>boolean</name></type> <name>matches</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>s</name></decl></parameter>, <parameter><decl><type><name>Metric</name></type> <name>metric</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <for>for <control>(<init><decl><type><name>MetricFilter</name></type> <name>filter</name> <range>: <expr><name>filters</name></expr></range></decl></init>)</control> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name><name>filter</name><operator>.</operator><name>matches</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><name>metric</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
          <return>return <expr><literal type="boolean">true</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>
      </block_content>}</block></for>
      <return>return <expr><literal type="boolean">false</literal></expr>;</return>
    </block_content>}</block></function>
  }</block></class>

  <class><specifier>public</specifier> <specifier>static</specifier> class <name>AndFilter</name> <super_list><implements>implements <super><name>MetricFilter</name></super></implements></super_list> <block>{
    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>MetricFilter</name></argument>&gt;</argument_list></name></type> <name>filters</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <constructor><specifier>public</specifier> <name>AndFilter</name><parameter_list>(<parameter><decl><type><name><name>Collection</name><argument_list type="generic">&lt;<argument><name>MetricFilter</name></argument>&gt;</argument_list></name></type> <name>filters</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>filters</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>filters</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><name>filters</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></constructor>

    <constructor><specifier>public</specifier> <name>AndFilter</name><parameter_list>(<parameter><decl><type><name>MetricFilter</name><modifier>...</modifier></type> <name>filters</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>filters</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <for>for <control>(<init><decl><type><name>MetricFilter</name></type> <name>filter</name> <range>: <expr><name>filters</name></expr></range></decl></init>)</control> <block>{<block_content>
          <if_stmt><if>if <condition>(<expr><name>filter</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>filters</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></constructor>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>boolean</name></type> <name>matches</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>s</name></decl></parameter>, <parameter><decl><type><name>Metric</name></type> <name>metric</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <for>for <control>(<init><decl><type><name>MetricFilter</name></type> <name>filter</name> <range>: <expr><name>filters</name></expr></range></decl></init>)</control> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>filter</name><operator>.</operator><name>matches</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><name>metric</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
          <return>return <expr><literal type="boolean">false</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>
      </block_content>}</block></for>
      <return>return <expr><literal type="boolean">true</literal></expr>;</return>
    </block_content>}</block></function>
  }</block></class>

   <comment type="block" format="javadoc">/**
    * Return a set of existing registry names.
    */</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">451</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">511</literal></expr><operator>,</operator><expr><literal type="number">21</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrMetricManager</name> <block>{
     <return>return <expr><call><name><name>filter</name><operator>.</operator><name>getMatched</name></name><argument_list>()</argument_list></call></expr>;</return>
   }</block></expr></expr_stmt>
 
  <comment type="block" format="javadoc">/**
   * Retrieve matching metrics and their names.
   * @param registry registry name.
   * @param metricFilter filter (null is equivalent to {@link MetricFilter#ALL}).
   * @return map of matching names and metrics
   */</comment>
  <function><type><specifier>public</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Metric</name></argument>&gt;</argument_list></name></type> <name>getMetrics</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>registry</name></decl></parameter>, <parameter><decl><type><name>MetricFilter</name></type> <name>metricFilter</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>metricFilter</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <name>metricFilter</name> <operator>==</operator> <name><name>MetricFilter</name><operator>.</operator><name>ALL</name></name></expr>)</condition> <block>{<block_content>
      <return>return <expr><call><name>registry</name><argument_list>(<argument><expr><name>registry</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getMetrics</name><argument_list>()</argument_list></call></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <return>return <expr><call><name>registry</name><argument_list>(<argument><expr><name>registry</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getMetrics</name><argument_list>()</argument_list></call><operator>.</operator><call><name>entrySet</name><argument_list>()</argument_list></call><operator>.</operator><call><name>stream</name><argument_list>()</argument_list></call>
        <operator>.</operator><call><name>filter</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>entry</name></decl></parameter></parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>metricFilter</name><operator>.</operator><name>matches</name></name><argument_list>(<argument><expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block_content></block></lambda></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>collect</name><argument_list>(<argument><expr><call><name><name>Collectors</name><operator>.</operator><name>toMap</name></name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>entry</name></decl></parameter></parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>entry</name></decl></parameter></parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

   <comment type="block" format="javadoc">/**
    * Create or get an existing named {@link Meter}
    * @param registry registry name
@@ -459,8 +534,12 @@ public class SolrMetricManager {
    * @param metricPath (optional) additional top-most metric name path elements
    * @return existing or a newly created {@link Meter}
    */</comment>
  <function><type><specifier>public</specifier> <name>Meter</name></type> <name>meter</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>registry</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>metricName</name></decl></parameter>, <parameter><decl><type><name>String</name><modifier>...</modifier></type> <name>metricPath</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>registry</name><argument_list>(<argument><expr><name>registry</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>meter</name><argument_list>(<argument><expr><call><name>mkName</name><argument_list>(<argument><expr><name>metricName</name></expr></argument>, <argument><expr><name>metricPath</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  <function><type><specifier>public</specifier> <name>Meter</name></type> <name>meter</name><parameter_list>(<parameter><decl><type><name>SolrInfoBean</name></type> <name>info</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>registry</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>metricName</name></decl></parameter>, <parameter><decl><type><name>String</name><modifier>...</modifier></type> <name>metricPath</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>name</name> <init>= <expr><call><name>mkName</name><argument_list>(<argument><expr><name>metricName</name></expr></argument>, <argument><expr><name>metricPath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>info</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>info</name><operator>.</operator><name>registerMetricName</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <return>return <expr><call><name>registry</name><argument_list>(<argument><expr><name>registry</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>meter</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 
   <comment type="block" format="javadoc">/**
@@ -471,8 +550,12 @@ public class SolrMetricManager {
    * @param metricPath (optional) additional top-most metric name path elements
    * @return existing or a newly created {@link Timer}
    */</comment>
  <function><type><specifier>public</specifier> <name>Timer</name></type> <name>timer</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>registry</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>metricName</name></decl></parameter>, <parameter><decl><type><name>String</name><modifier>...</modifier></type> <name>metricPath</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>registry</name><argument_list>(<argument><expr><name>registry</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>timer</name><argument_list>(<argument><expr><call><name>mkName</name><argument_list>(<argument><expr><name>metricName</name></expr></argument>, <argument><expr><name>metricPath</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  <function><type><specifier>public</specifier> <name>Timer</name></type> <name>timer</name><parameter_list>(<parameter><decl><type><name>SolrInfoBean</name></type> <name>info</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>registry</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>metricName</name></decl></parameter>, <parameter><decl><type><name>String</name><modifier>...</modifier></type> <name>metricPath</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>name</name> <init>= <expr><call><name>mkName</name><argument_list>(<argument><expr><name>metricName</name></expr></argument>, <argument><expr><name>metricPath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>info</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>info</name><operator>.</operator><name>registerMetricName</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <return>return <expr><call><name>registry</name><argument_list>(<argument><expr><name>registry</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>timer</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 
   <comment type="block" format="javadoc">/**
@@ -483,8 +566,12 @@ public class SolrMetricManager {
    * @param metricPath (optional) additional top-most metric name path elements
    * @return existing or a newly created {@link Counter}
    */</comment>
  <function><type><specifier>public</specifier> <name>Counter</name></type> <name>counter</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>registry</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>metricName</name></decl></parameter>, <parameter><decl><type><name>String</name><modifier>...</modifier></type> <name>metricPath</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>registry</name><argument_list>(<argument><expr><name>registry</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>counter</name><argument_list>(<argument><expr><call><name>mkName</name><argument_list>(<argument><expr><name>metricName</name></expr></argument>, <argument><expr><name>metricPath</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  <function><type><specifier>public</specifier> <name>Counter</name></type> <name>counter</name><parameter_list>(<parameter><decl><type><name>SolrInfoBean</name></type> <name>info</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>registry</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>metricName</name></decl></parameter>, <parameter><decl><type><name>String</name><modifier>...</modifier></type> <name>metricPath</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>name</name> <init>= <expr><call><name>mkName</name><argument_list>(<argument><expr><name>metricName</name></expr></argument>, <argument><expr><name>metricPath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>info</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>info</name><operator>.</operator><name>registerMetricName</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <return>return <expr><call><name>registry</name><argument_list>(<argument><expr><name>registry</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>counter</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 
   <comment type="block" format="javadoc">/**
@@ -495,8 +582,12 @@ public class SolrMetricManager {
    * @param metricPath (optional) additional top-most metric name path elements
    * @return existing or a newly created {@link Histogram}
    */</comment>
  <function><type><specifier>public</specifier> <name>Histogram</name></type> <name>histogram</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>registry</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>metricName</name></decl></parameter>, <parameter><decl><type><name>String</name><modifier>...</modifier></type> <name>metricPath</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>registry</name><argument_list>(<argument><expr><name>registry</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>histogram</name><argument_list>(<argument><expr><call><name>mkName</name><argument_list>(<argument><expr><name>metricName</name></expr></argument>, <argument><expr><name>metricPath</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  <function><type><specifier>public</specifier> <name>Histogram</name></type> <name>histogram</name><parameter_list>(<parameter><decl><type><name>SolrInfoBean</name></type> <name>info</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>registry</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>metricName</name></decl></parameter>, <parameter><decl><type><name>String</name><modifier>...</modifier></type> <name>metricPath</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>name</name> <init>= <expr><call><name>mkName</name><argument_list>(<argument><expr><name>metricName</name></expr></argument>, <argument><expr><name>metricPath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>info</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>info</name><operator>.</operator><name>registerMetricName</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <return>return <expr><call><name>registry</name><argument_list>(<argument><expr><name>registry</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>histogram</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 
   <comment type="block" format="javadoc">/**
@@ -510,9 +601,12 @@ public class SolrMetricManager {
    *                   using dotted notation
    * @param metricPath (optional) additional top-most metric name path elements
    */</comment>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>register</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>registry</name></decl></parameter>, <parameter><decl><type><name>Metric</name></type> <name>metric</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>force</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>metricName</name></decl></parameter>, <parameter><decl><type><name>String</name><modifier>...</modifier></type> <name>metricPath</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>register</name><parameter_list>(<parameter><decl><type><name>SolrInfoBean</name></type> <name>info</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>registry</name></decl></parameter>, <parameter><decl><type><name>Metric</name></type> <name>metric</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>force</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>metricName</name></decl></parameter>, <parameter><decl><type><name>String</name><modifier>...</modifier></type> <name>metricPath</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <decl_stmt><decl><type><name>MetricRegistry</name></type> <name>metricRegistry</name> <init>= <expr><call><name>registry</name><argument_list>(<argument><expr><name>registry</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>fullName</name> <init>= <expr><call><name>mkName</name><argument_list>(<argument><expr><name>metricName</name></expr></argument>, <argument><expr><name>metricPath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>info</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>info</name><operator>.</operator><name>registerMetricName</name></name><argument_list>(<argument><expr><name>fullName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
     <synchronized>synchronized <init>(<expr><name>metricRegistry</name></expr>)</init> <block>{<block_content>
       <if_stmt><if>if <condition>(<expr><name>force</name> <operator>&amp;&amp;</operator> <call><name><name>metricRegistry</name><operator>.</operator><name>getMetrics</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>containsKey</name><argument_list>(<argument><expr><name>fullName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><call><name><name>metricRegistry</name><operator>.</operator><name>remove</name></name><argument_list>(<argument><expr><name>fullName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">521</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">615</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrMetricManager</name> <block>{
     }</block></expr></expr_stmt>
   </block_content>}</block></if></if_stmt>
 
  <function><type><specifier>public</specifier> <name>void</name></type> <name>registerGauge</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>registry</name></decl></parameter>, <parameter><decl><type><name><name>Gauge</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name></type> <name>gauge</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>force</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>metricName</name></decl></parameter>, <parameter><decl><type><name>String</name><modifier>...</modifier></type> <name>metricPath</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>register</name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><name>gauge</name></expr></argument>, <argument><expr><name>force</name></expr></argument>, <argument><expr><name>metricName</name></expr></argument>, <argument><expr><name>metricPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>registerGauge</name><parameter_list>(<parameter><decl><type><name>SolrInfoBean</name></type> <name>info</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>registry</name></decl></parameter>, <parameter><decl><type><name><name>Gauge</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name></type> <name>gauge</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>force</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>metricName</name></decl></parameter>, <parameter><decl><type><name>String</name><modifier>...</modifier></type> <name>metricPath</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>register</name><argument_list>(<argument><expr><name>info</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><name>gauge</name></expr></argument>, <argument><expr><name>force</name></expr></argument>, <argument><expr><name>metricName</name></expr></argument>, <argument><expr><name>metricPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
   <comment type="block" format="javadoc">/**
@@ -569,7 +663,7 @@ public class SolrMetricManager {
    * &lt;/pre&gt;
    * &lt;b&gt;NOTE:&lt;/b&gt; Once a registry is renamed in a way that its metrics are combined with another repository
    * it is no longer possible to retrieve the original metrics until this renaming is removed and the Solr
   * {@link org.apache.solr.core.SolrInfoMBean.Group} of components that reported to that name is restarted.
   * {@link org.apache.solr.core.SolrInfoBean.Group} of components that reported to that name is restarted.
    * @param registry The name of the registry
    * @return A potentially overridden (via System properties) registry name
    */</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">600</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">694</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrMetricManager</name> <block>{
    <expr><operator>*</operator>              <name>and</name> <name>the</name> <name>group</name> <name>parameter</name> <name>will</name> <name>be</name> <name><name>ignored</name><operator>.</operator></name>
    * @</expr><return>return <expr><name>fully</name><operator>-</operator><name>qualified</name> <name>and</name> <name>prefixed</name> <name>registry</name> <name>name</name></expr><operator>,</operator> <expr><name>with</name> <name>overrides</name> <name><name>applied</name><operator>.</operator></name>
    *<operator>/</operator>
  <specifier>public</specifier> <specifier>static</specifier> <name>String</name> <call><name>getRegistryName</name><argument_list>(<argument><expr><name><name>SolrInfoMBean</name><operator>.</operator><name>Group</name></name> <name>group</name></expr></argument>, <argument><expr><name>String</name><operator>...</operator> <name>names</name></expr></argument>)</argument_list></call> <block>{
  <expr><specifier>public</specifier> <specifier>static</specifier> <name>String</name> <call><name>getRegistryName</name><argument_list>(<argument><expr><name><name>SolrInfoBean</name><operator>.</operator><name>Group</name></name> <name>group</name></expr></argument>, <argument><expr><name>String</name><operator>...</operator> <name>names</name></expr></argument>)</argument_list></call> <block>{
     <expr><name>String</name> <name>fullName</name></expr>;
     <name>String</name> <name>prefix</name> <operator>=</operator> <name>REGISTRY_NAME_PREFIX</name> <operator>+</operator> <call><name><name>group</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"."</literal></block></expr>;
     <comment type="line">// check for existing prefix and group</comment>
@@ <operator>-</operator><literal type="number">622</literal><operator>,</operator><literal type="number">7</literal> <operator>+</operator><literal type="number">716</literal><operator>,</operator><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrMetricManager</name> <block>{
   <comment type="line">// reporter management</comment>
 
   <comment type="block" format="javadoc">/**
   * Create and register {@link SolrMetricReporter}-s specific to a {@link org.apache.solr.core.SolrInfoMBean.Group}.
   * Create and register {@link SolrMetricReporter}-s specific to a {@link org.apache.solr.core.SolrInfoBean.Group}.
    * Note: reporters that specify neither "group" nor "registry" attributes are treated as universal -
    * they will always be loaded for any group. These two attributes may also contain multiple comma- or
    * whitespace-separated values, in which case the reporter will be loaded for any matching value from
@@ -634,7 +728,7 @@ public class SolrMetricManager {
    * @param group selected group, not null
    * @param registryNames optional child registry name elements
    */</comment>
  <expr><specifier>public</specifier> <name>void</name> <call><name>loadReporters</name><argument_list>(<argument><expr><name><name>PluginInfo</name><index>[]</index></name> <name>pluginInfos</name></expr></argument>, <argument><expr><name>SolrResourceLoader</name> <name>loader</name></expr></argument>, <argument><expr><name>String</name> <name>tag</name></expr></argument>, <argument><expr><name><name>SolrInfoMBean</name><operator>.</operator><name>Group</name></name> <name>group</name></expr></argument>, <argument><expr><name>String</name><operator>...</operator> <name>registryNames</name></expr></argument>)</argument_list></call> <block>{
  <expr><specifier>public</specifier> <name>void</name> <call><name>loadReporters</name><argument_list>(<argument><expr><name><name>PluginInfo</name><index>[]</index></name> <name>pluginInfos</name></expr></argument>, <argument><expr><name>SolrResourceLoader</name> <name>loader</name></expr></argument>, <argument><expr><name>String</name> <name>tag</name></expr></argument>, <argument><expr><name><name>SolrInfoBean</name><operator>.</operator><name>Group</name></name> <name>group</name></expr></argument>, <argument><expr><name>String</name><operator>...</operator> <name>registryNames</name></expr></argument>)</argument_list></call> <block>{
     <if_stmt><if>if <condition>(<expr><name>pluginInfos</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <name><name>pluginInfos</name><operator>.</operator><name>length</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
       <return>return;</return>
     <expr_stmt/></block_content></block></if></if_stmt></block></expr>}</block>
@@ <operator>-</operator><literal type="number">941</literal></expr>,<expr><literal type="number">13</literal> <operator>+</operator><literal type="number">1035</literal></expr>,<expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrMetricManager</name> <block>{
     <comment type="line">// prepare default plugin if none present in the config</comment>
     <expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name> <name>attrs</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
     <call><name><name>attrs</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"name"</literal></expr></argument>, <argument><expr><literal type="string">"shardDefault"</literal></expr></argument>)</argument_list></call></block></expr>;
    <call><name><name>attrs</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"group"</literal></expr></argument>, <argument><expr><call><name><name>SolrInfoMBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>shard</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></block></expr>;</return>
    <call><name><name>attrs</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"group"</literal></expr></argument>, <argument><expr><call><name><name>SolrInfoBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>shard</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>initArgs</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>initArgs</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"period"</literal></expr></argument>, <argument><expr><name>DEFAULT_CLOUD_REPORTER_PERIOD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>String</name></type> <name>registryName</name> <init>= <expr><call><name><name>core</name><operator>.</operator><name>getCoreMetricManager</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getRegistryName</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <comment type="line">// collect infos and normalize</comment>
    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>PluginInfo</name></argument>&gt;</argument_list></name></type> <name>infos</name> <init>= <expr><call><name>prepareCloudPlugins</name><argument_list>(<argument><expr><name>pluginInfos</name></expr></argument>, <argument><expr><call><name><name>SolrInfoMBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>shard</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>SolrShardReporter</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>,
    <argument><expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>PluginInfo</name></argument>&gt;</argument_list></name> <name>infos</name> <operator>=</operator> <call><name>prepareCloudPlugins</name><argument_list>(<argument><expr><name>pluginInfos</name></expr></argument>, <argument><expr><call><name><name>SolrInfoBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>shard</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>SolrShardReporter</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>,
         <argument><expr><name>attrs</name></expr></argument>, <argument><expr><name>initArgs</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></argument>;</argument_list></call></expr></init></decl></decl_stmt>
     <for>for <control>(<init><decl><type><name>PluginInfo</name></type> <name>info</name> <range>: <expr><name>infos</name></expr></range></decl></init>)</control> <block>{<block_content>
       <try>try <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">967</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">1061</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrMetricManager</name> <block>{
     }</block>
     <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name> <name>attrs</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>attrs</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"name"</literal></expr></argument>, <argument><expr><literal type="string">"clusterDefault"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>attrs</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"group"</literal></expr></argument>, <argument><expr><call><name><name>SolrInfoMBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>cluster</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>attrs</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"group"</literal></expr></argument>, <argument><expr><call><name><name>SolrInfoBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>cluster</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>initArgs</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>initArgs</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"period"</literal></expr></argument>, <argument><expr><name>DEFAULT_CLOUD_REPORTER_PERIOD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>PluginInfo</name></argument>&gt;</argument_list></name></type> <name>infos</name> <init>= <expr><call><name>prepareCloudPlugins</name><argument_list>(<argument><expr><name>pluginInfos</name></expr></argument>, <argument><expr><call><name><name>SolrInfoMBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>cluster</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>SolrClusterReporter</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>,
    <argument><expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>PluginInfo</name></argument>&gt;</argument_list></name> <name>infos</name> <operator>=</operator> <call><name>prepareCloudPlugins</name><argument_list>(<argument><expr><name>pluginInfos</name></expr></argument>, <argument><expr><call><name><name>SolrInfoBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>cluster</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>SolrClusterReporter</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>,
         <argument><expr><name>attrs</name></expr></argument>, <argument><expr><name>initArgs</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></argument>;</argument_list></call></expr></init></decl></decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>registryName</name> <init>= <expr><call><name>getRegistryName</name><argument_list>(<argument><expr><name><name>SolrInfoMBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>cluster</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>registryName</name> <init>= <expr><call><name>getRegistryName</name><argument_list>(<argument><expr><name><name>SolrInfoBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>cluster</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <for>for <control>(<init><decl><type><name>PluginInfo</name></type> <name>info</name> <range>: <expr><name>infos</name></expr></range></decl></init>)</control> <block>{<block_content>
       <try>try <block>{<block_content>
         <decl_stmt><decl><type><name>SolrMetricReporter</name></type> <name>reporter</name> <init>= <expr><call><name>loadReporter</name><argument_list>(<argument><expr><name>registryName</name></expr></argument>, <argument><expr><call><name><name>cc</name><operator>.</operator><name>getResourceLoader</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>info</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrMetricReporter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrMetricReporter</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ff2d3fcbdc6</name><operator>..</operator><literal type="number">9ad15d0168d</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrMetricReporter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrMetricReporter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">30</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">30</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>SolrMetricReporter</name> implements <name>Closeable</name></expr><operator>,</operator> <expr><name>PluginInfoInitial</name>
   <specifier>protected</specifier> <name>final</name> <name>String</name> <name>registryName</name></expr>;</expr_stmt>
   <decl_stmt><decl><type><specifier>protected</specifier> <specifier>final</specifier> <name>SolrMetricManager</name></type> <name>metricManager</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>protected</specifier> <name>PluginInfo</name></type> <name>pluginInfo</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>protected</specifier> <name>boolean</name></type> <name>enabled</name> <init>= <expr><literal type="boolean">true</literal></expr></init></decl>;</decl_stmt>
 
   <comment type="block" format="javadoc">/**
    * Create a reporter for metrics managed in a named registry.
@@ -57,6 +58,17 @@ public abstract class SolrMetricReporter implements Closeable, PluginInfoInitial
     validate();
   }
 
  /**
   * Enable reporting, defaults to true. Implementations should check this flag in
   * {@link #validate()} and accordingly enable or disable reporting.
   * @param enabled enable, defaults to true when null or not set.
   */</comment>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>setEnabled</name><parameter_list>(<parameter><decl><type><name>Boolean</name></type> <name>enabled</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>enabled</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>enabled</name></name> <operator>=</operator> <name>enabled</name></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
  </block_content>}</block></function>

   <comment type="block" format="javadoc">/**
    * Get the effective {@link PluginInfo} instance that was used for
    * initialization of this plugin.
diff --git a/solr/core/src/java/org/apache/solr/metrics/reporters/JmxObjectNameFactory.java b/solr/core/src/java/org/apache/solr/metrics/reporters/JmxObjectNameFactory.java
index 1f5b4f01513..4298c1842da 100644
-- a/solr/core/src/java/org/apache/solr/metrics/reporters/JmxObjectNameFactory.java
++ b/solr/core/src/java/org/apache/solr/metrics/reporters/JmxObjectNameFactory.java
@@ -50,6 +50,20 @@ public class JmxObjectNameFactory implements ObjectNameFactory {
     this.props = additionalProperties;
   }
 
  /**
   * Return current domain.
   */</comment>
  <function><type><specifier>public</specifier> <name>String</name></type> <name>getDomain</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>domain</name></expr>;</return>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * Return current reporterName.
   */</comment>
  <function><type><specifier>public</specifier> <name>String</name></type> <name>getReporterName</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>reporterName</name></expr>;</return>
  </block_content>}</block></function>

   <comment type="block" format="javadoc">/**
    * Create a hierarchical name.
    *
@@ -60,7 +74,8 @@ public class JmxObjectNameFactory implements ObjectNameFactory {
   @Override
   public ObjectName createName(String type, String currentDomain, String name) {
     SolrMetricInfo metricInfo = SolrMetricInfo.of(name);

    String safeName = metricInfo != null ? metricInfo.name : name;
    safeName = safeName.replaceAll(":", "_");
     // It turns out that ObjectName(String) mostly preserves key ordering
     // as specified in the constructor (except for the 'type' key that ends
     // up at top level) - unlike ObjectName(String, Map) constructor
@@ -90,24 +105,42 @@ public class JmxObjectNameFactory implements ObjectNameFactory {
       sb.append(currentDomain);
       sb.append(':');
     }
    sb.append("reporter=");
    sb.append(reporterName);
    sb.append(',');
    if (props != null &amp;&amp; props.length &gt; 0) {
      boolean added = false;
      for (int i = 0; i &lt; props.length; i += 2) {
        if (props[i] == null || props[i].isEmpty()) {
          continue;
        }
        if (props[i + 1] == null || props[i + 1].isEmpty()) {
          continue;
        }
        sb.append(',');
        sb.append(props[i]);
        sb.append('=');
        sb.append(props[i + 1]);
        added = true;
      }
      if (added) {
        sb.append(',');
      }
    }
     if (metricInfo != null) {
       sb.append("category=");
       sb.append(metricInfo.category.toString());
      sb.append(",scope=");
      sb.append(metricInfo.scope);
      if (metricInfo.scope != null) {
        sb.append(",scope=");
        sb.append(metricInfo.scope);
      }
       // we could also split by type, but don't call it 'type' :)
       // if (type != null) {
       //   sb.append(",class=");
       //   sb.append(type);
       // }
       sb.append(",name=");
      sb.append(metricInfo.name);
      sb.append(safeName);
     } else {
       // make dotted names into hierarchies
      String[] path = name.split("\\.");
      String[] path = safeName.split("\\.");
       for (int i = 0; i &lt; path.length - 1; i++) {
         if (i &gt; 0) {
           sb.append(',');
@@ -127,20 +160,6 @@ public class JmxObjectNameFactory implements ObjectNameFactory {
       sb.append("name=");
       sb.append(path[path.length - 1]);
     }
    if (props != null &amp;&amp; props.length &gt; 0) {
      for (int i = 0; i &lt; props.length; i += 2) {
        if (props[i] == null || props[i].isEmpty()) {
          continue;
        }
        if (props[i + 1] == null || props[i + 1].isEmpty()) {
          continue;
        }
        sb.append(',');
        sb.append(props[i]);
        sb.append('=');
        sb.append(props[i + 1]);
      }
    }
 
     ObjectName objectName;
 
diff --git a/solr/core/src/java/org/apache/solr/metrics/reporters/ReporterClientCache.java b/solr/core/src/java/org/apache/solr/metrics/reporters/ReporterClientCache.java
new file mode 100644
index 00000000000..5745dec1738
-- /dev/null
++ b/solr/core/src/java/org/apache/solr/metrics/reporters/ReporterClientCache.java
@@ -0,0 +1,84 @@
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>reporters</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Closeable</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>invoke</name><operator>.</operator><name>MethodHandles</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>ConcurrentHashMap</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Simple cache for reusable service clients used by some implementations of
 * {@link org.apache.solr.metrics.SolrMetricReporter}.
 */</comment>
<class><specifier>public</specifier> class <name><name>ReporterClientCache</name><parameter_list>&lt;<parameter><name>T</name></parameter>&gt;</parameter_list></name> <super_list><implements>implements <super><name>Closeable</name></super></implements></super_list> <block>{
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Logger</name></type> <name>LOG</name> <init>= <expr><call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><call><name><name>MethodHandles</name><operator>.</operator><name>lookup</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>lookupClass</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>T</name></argument>&gt;</argument_list></name></type> <name>cache</name> <init>= <expr><operator>new</operator> <call><name><name>ConcurrentHashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

  <comment type="block" format="javadoc">/**
   * Provide an instance of service client.
   * @param &lt;T&gt; formal type
   */</comment>
  <interface><specifier>public</specifier> interface <name><name>ClientProvider</name><parameter_list>&lt;<parameter><name>T</name></parameter>&gt;</parameter_list></name> <block>{
    <comment type="block" format="javadoc">/**
     * Get an instance of a service client. It's not specified that each time this
     * method is invoked a new client instance should be returned.
     * @return client instance
     * @throws Exception when client creation encountered an error.
     */</comment>
    <function_decl><type><name>T</name></type> <name>get</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws>;</function_decl>
  }</block></interface>

  <comment type="block" format="javadoc">/**
   * Get existing or register a new client.
   * @param id client id
   * @param clientProvider provider of new client instances
   */</comment>
  <function><type><specifier>public</specifier> <specifier>synchronized</specifier> <name>T</name></type> <name>getOrCreate</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name><name>ClientProvider</name><argument_list type="generic">&lt;<argument><name>T</name></argument>&gt;</argument_list></name></type> <name>clientProvider</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>T</name></type> <name>item</name> <init>= <expr><call><name><name>cache</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>item</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <try>try <block>{<block_content>
        <expr_stmt><expr><name>item</name> <operator>=</operator> <call><name><name>clientProvider</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>cache</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>id</name></expr></argument>, <argument><expr><name>item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Error providing a new client for id="</literal> <operator>+</operator> <name>id</name></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>item</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
      </block_content>}</block></catch></try>
    </block_content>}</block></if></if_stmt>
    <return>return <expr><name>item</name></expr>;</return>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * Empty this cache, and close all clients that are {@link Closeable}.
   */</comment>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>close</name><parameter_list>()</parameter_list> <block>{<block_content>
    <for>for <control>(<init><decl><type><name>T</name></type> <name>client</name> <range>: <expr><call><name><name>cache</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>client</name> <operator>instanceof</operator> <name>Closeable</name></expr>)</condition> <block>{<block_content>
        <try>try <block>{<block_content>
          <expr_stmt><expr><operator>(</operator><operator>(</operator><name>Closeable</name><operator>)</operator><name>client</name><operator>)</operator><operator>.</operator><call><name>close</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
          <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Error closing client "</literal> <operator>+</operator> <name>client</name> <operator>+</operator> <literal type="string">", ignoring..."</literal></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></catch></try>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <expr_stmt><expr><call><name><name>cache</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name><name>SolrGangliaReporter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name><name>SolrGangliaReporter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">45561e58b58</literal><operator>..</operator><literal type="number">142ddd884e6</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name><name>SolrGangliaReporter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name><name>SolrGangliaReporter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>reporters</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>invoke</name><operator>.</operator><name>MethodHandles</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>TimeUnit</name></name>;</import>
 
 <import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricFilter</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">24</literal></expr><operator>,</operator><expr><literal type="number">21</literal> <operator>+</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">26</literal> @@</expr></expr_stmt> <import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>ganglia</name><operator>.</operator><name>GangliaReporter</name></name>;</import>
 <import>import <name><name>info</name><operator>.</operator><name>ganglia</name><operator>.</operator><name>gmetric4j</name><operator>.</operator><name>gmetric</name><operator>.</operator><name>GMetric</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricManager</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricReporter</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
  *
  */</comment>
 <class><specifier>public</specifier> class <name>SolrGangliaReporter</name> <super_list><extends>extends <super><name>SolrMetricReporter</name></super></extends></super_list> <block>{
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Logger</name></type> <name>log</name> <init>= <expr><call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><call><name><name>MethodHandles</name><operator>.</operator><name>lookup</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>lookupClass</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
   <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>host</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>int</name></type> <name>port</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>boolean</name></type> <name>multicast</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>int</name></type> <name>period</name> <init>= <expr><literal type="number">60</literal></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>instancePrefix</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>filterPrefix</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>filters</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>boolean</name></type> <name>testing</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>GangliaReporter</name></type> <name>reporter</name></decl>;</decl_stmt>
 
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name><name>ReporterClientCache</name><argument_list type="generic">&lt;<argument><name>GMetric</name></argument>&gt;</argument_list></name></type> <name>serviceRegistry</name> <init>= <expr><operator>new</operator> <call><name><name>ReporterClientCache</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

   <comment type="line">// for unit tests</comment>
   <decl_stmt><decl><type><name>GMetric</name></type> <name>ganglia</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">65</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">73</literal></expr><operator>,</operator><expr><literal type="number">24</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrGangliaReporter</name> extends <name>SolrMetricReporter</name> <block>{
     <expr><name><name>this</name><operator>.</operator><name>instancePrefix</name></name> <operator>=</operator> <name>prefix</name></expr>;
   }</block></expr></expr_stmt>
 
  <function><type><specifier>public</specifier> <name>void</name></type> <name>setFilter</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>filter</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>filterPrefix</name></name> <operator>=</operator> <name>filter</name></expr>;</expr_stmt>
  <comment type="block" format="javadoc">/**
   * Report only metrics with names matching any of the prefix filters.
   * @param filters list of 0 or more prefixes. If the list is empty then
   *                all names will match.
   */</comment>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>setFilter</name><parameter_list>(<parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>filters</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>filters</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <call><name><name>filters</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <return>return;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>filters</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><name>filters</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
  <comment type="line">// due to vagaries of SolrPluginUtils.invokeSetters we need this too</comment>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>setFilter</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>filter</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>filter</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>filter</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>filters</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
  </block_content>}</block></function>
 
   <function><type><specifier>public</specifier> <name>void</name></type> <name>setPeriod</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>period</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <expr_stmt><expr><name><name>this</name><operator>.</operator><name>period</name></name> <operator>=</operator> <name>period</name></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">89</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">111</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrGangliaReporter</name> extends <name>SolrMetricReporter</name> <block>{
 
   @<expr><name>Override</name>
   <specifier>protected</specifier> <name>void</name> <call><name>validate</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IllegalStateException</name> <block>{</block></expr></argument></throws></expr>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><name>enabled</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Reporter disabled for registry "</literal> <operator>+</operator> <name>registryName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <return>return;</return>
    </block_content>}</block></if></if_stmt></block></expr></expr_stmt>
     <if_stmt><if>if <condition>(<expr><name>host</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <throw>throw <expr><operator>new</operator> <call><name>IllegalStateException</name><argument_list>(<argument><expr><literal type="string">"Init argument 'host' must be set to a valid Ganglia server name."</literal></expr></argument>)</argument_list></call></expr>;</throw>
     </block_content>}</block></if></if_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">106</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">132</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrGangliaReporter</name> extends <name>SolrMetricReporter</name> <block>{
   <comment type="line">//this is a separate method for unit tests</comment>
   <expr><name>void</name> <call><name>start</name><argument_list>()</argument_list></call> <block>{
     <if_stmt><if>if <condition>(<expr><operator>!</operator><name>testing</name></expr>)</condition> <block>{<block_content>
      <try>try <block>{<block_content>
        <expr_stmt><expr><name>ganglia</name> <operator>=</operator> <operator>new</operator> <call><name>GMetric</name><argument_list>(<argument><expr><name>host</name></expr></argument>, <argument><expr><name>port</name></expr></argument>,
            <argument><expr><ternary><condition><expr><name>multicast</name></expr> ?</condition><then> <expr><name><name>GMetric</name><operator>.</operator><name>UDPAddressingMode</name><operator>.</operator><name>MULTICAST</name></name></expr> </then><else>: <expr><name><name>GMetric</name><operator>.</operator><name>UDPAddressingMode</name><operator>.</operator><name>UNICAST</name></name></expr></else></ternary></expr></argument>,
            <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt/></block_content></block></try></block_content></block></if></if_stmt></block></expr>}</block></expr></expr_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>ioe</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <throw>throw <expr><operator>new</operator> <call><name>IllegalStateException</name><argument_list>(<argument><expr><literal type="string">"Exception connecting to Ganglia"</literal></expr></argument>, <argument><expr><name>ioe</name></expr></argument>)</argument_list></call></expr>;</throw>
      <decl_stmt><decl><type><name>String</name></type> <name>id</name> <init>= <expr><name>host</name> <operator>+</operator> <literal type="string">":"</literal> <operator>+</operator> <name>port</name> <operator>+</operator> <literal type="string">":"</literal> <operator>+</operator> <name>multicast</name></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><name>ganglia</name> <operator>=</operator> <call><name><name>serviceRegistry</name><operator>.</operator><name>getOrCreate</name></name><argument_list>(<argument><expr><name>id</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><operator>new</operator> <call><name>GMetric</name><argument_list>(<argument><expr><name>host</name></expr></argument>, <argument><expr><name>port</name></expr></argument>,
          <argument><expr><ternary><condition><expr><name>multicast</name></expr> ?</condition><then> <expr><name><name>GMetric</name><operator>.</operator><name>UDPAddressingMode</name><operator>.</operator><name>MULTICAST</name></name></expr> </then><else>: <expr><name><name>GMetric</name><operator>.</operator><name>UDPAddressingMode</name><operator>.</operator><name>UNICAST</name></name></expr></else></ternary></expr></argument>,
          <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></block_content></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><name>ganglia</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <return>return;</return>
       </block_content>}</block></if></if_stmt>
     </block_content>}</block></catch>
     <if_stmt><if>if <condition>(<expr><name>instancePrefix</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">125</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">151</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrGangliaReporter</name> extends <name>SolrMetricReporter</name> <block>{
         <expr><operator>.</operator><call><name>convertDurationsTo</name><argument_list>(<argument><expr><name><name>TimeUnit</name><operator>.</operator><name>MILLISECONDS</name></name></expr></argument>)</argument_list></call>
         <operator>.</operator><call><name>prefixedWith</name><argument_list>(<argument><expr><name>instancePrefix</name></expr></argument>)</argument_list></call></expr>;
     <name>MetricFilter</name> <name>filter</name></block></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>filterPrefix</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>filter</name> <operator>=</operator> <operator>new</operator> <call><name><name>SolrMetricManager</name><operator>.</operator><name>PrefixFilter</name></name><argument_list>(<argument><expr><name>filterPrefix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>filters</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>filter</name> <operator>=</operator> <operator>new</operator> <call><name><name>SolrMetricManager</name><operator>.</operator><name>PrefixFilter</name></name><argument_list>(<argument><expr><name>filters</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if> <else>else <block>{<block_content>
       <expr_stmt><expr><name>filter</name> <operator>=</operator> <name><name>MetricFilter</name><operator>.</operator><name>ALL</name></name></expr>;</expr_stmt>
     </block_content>}</block></else></if_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name><name>SolrGraphiteReporter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name><name>SolrGraphiteReporter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8565ce86c05</literal><operator>..</operator><name>d5b7a203ab8</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name><name>SolrGraphiteReporter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name><name>SolrGraphiteReporter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>reporters</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>invoke</name><operator>.</operator><name>MethodHandles</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>TimeUnit</name></name>;</import>
 
 <import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricFilter</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">41</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrGraphiteReporter</name> extends <name>SolrMetricReporter</name> <block>{
   <expr><specifier>private</specifier> <name>int</name> <name>period</name> <operator>=</operator> <literal type="number">60</literal></expr>;
   <specifier>private</specifier> <name>boolean</name> <name>pickled</name> <operator>=</operator> <literal type="boolean">false</literal></block></expr>;</expr_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>instancePrefix</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>filterPrefix</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>filters</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>GraphiteReporter</name></type> <name>reporter</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
 
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name><name>ReporterClientCache</name><argument_list type="generic">&lt;<argument><name>GraphiteSender</name></argument>&gt;</argument_list></name></type> <name>serviceRegistry</name> <init>= <expr><operator>new</operator> <call><name><name>ReporterClientCache</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

   <comment type="block" format="javadoc">/**
    * Create a Graphite reporter for metrics managed in a named registry.
    *
@@ -67,10 +71,25 @@ public class SolrGraphiteReporter extends SolrMetricReporter {
     this.instancePrefix = prefix;
   }
 
  /**
   * Report only metrics with names matching any of the prefix filters.
   * @param filters list of 0 or more prefixes. If the list is empty then
   *                all names will match.
   */</comment>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>setFilter</name><parameter_list>(<parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>filters</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>filters</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <call><name><name>filters</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <return>return;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>filters</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><name>filters</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

   <function><type><specifier>public</specifier> <name>void</name></type> <name>setFilter</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>filter</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>filterPrefix</name></name> <operator>=</operator> <name>filter</name></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>filter</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>filter</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>filters</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
   </block_content>}</block></function>
 

   <function><type><specifier>public</specifier> <name>void</name></type> <name>setPickled</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>pickled</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <expr_stmt><expr><name><name>this</name><operator>.</operator><name>pickled</name></name> <operator>=</operator> <name>pickled</name></expr>;</expr_stmt>
   </block_content>}</block></function>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">81</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">100</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrGraphiteReporter</name> extends <name>SolrMetricReporter</name> <block>{
 
   @<expr><name>Override</name>
   <specifier>protected</specifier> <name>void</name> <call><name>validate</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IllegalStateException</name> <block>{</block></expr></argument></throws></expr>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><name>enabled</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Reporter disabled for registry "</literal> <operator>+</operator> <name>registryName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <return>return;</return>
    </block_content>}</block></if></if_stmt></block></expr></expr_stmt>
     <if_stmt><if>if <condition>(<expr><name>host</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <throw>throw <expr><operator>new</operator> <call><name>IllegalStateException</name><argument_list>(<argument><expr><literal type="string">"Init argument 'host' must be set to a valid Graphite server name."</literal></expr></argument>)</argument_list></call></expr>;</throw>
     </block_content>}</block></if></if_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">93</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">116</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrGraphiteReporter</name> extends <name>SolrMetricReporter</name> <block>{
     <if_stmt><if>if <condition>(<expr><name>period</name> <operator>&lt;</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
       <throw>throw <expr><operator>new</operator> <call><name>IllegalStateException</name><argument_list>(<argument><expr><literal type="string">"Init argument 'period' is in time unit 'seconds' and must be at least 1."</literal></expr></argument>)</argument_list></call></expr>;</throw>
     </block_content>}</block></if></if_stmt>
    <name>final</name> <name>GraphiteSender</name> <name>graphite</name></block></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>pickled</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>graphite</name> <operator>=</operator> <operator>new</operator> <call><name>PickledGraphite</name><argument_list>(<argument><expr><name>host</name></expr></argument>, <argument><expr><name>port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <expr_stmt><expr><name>graphite</name> <operator>=</operator> <operator>new</operator> <call><name>Graphite</name><argument_list>(<argument><expr><name>host</name></expr></argument>, <argument><expr><name>port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <decl_stmt><decl><type><name>GraphiteSender</name></type> <name>graphite</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>id</name> <init>= <expr><name>host</name> <operator>+</operator> <literal type="string">":"</literal> <operator>+</operator> <name>port</name> <operator>+</operator> <literal type="string">":"</literal> <operator>+</operator> <name>pickled</name></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>graphite</name> <operator>=</operator> <call><name><name>serviceRegistry</name><operator>.</operator><name>getOrCreate</name></name><argument_list>(<argument><expr><name>id</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt; <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>pickled</name></expr>)</condition> <block>{<block_content>
        <return>return <expr><operator>new</operator> <call><name>PickledGraphite</name><argument_list>(<argument><expr><name>host</name></expr></argument>, <argument><expr><name>port</name></expr></argument>)</argument_list></call></expr>;</return>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <return>return <expr><operator>new</operator> <call><name>Graphite</name><argument_list>(<argument><expr><name>host</name></expr></argument>, <argument><expr><name>port</name></expr></argument>)</argument_list></call></expr>;</return>
      </block_content>}</block></else></if_stmt>
    </block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <if_stmt><if>if <condition>(<expr><name>instancePrefix</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><name>instancePrefix</name> <operator>=</operator> <name>registryName</name></expr>;</expr_stmt>
     </block_content>}</block></if> <else>else <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">110</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">136</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrGraphiteReporter</name> extends <name>SolrMetricReporter</name> <block>{
         <expr><operator>.</operator><call><name>convertRatesTo</name><argument_list>(<argument><expr><name><name>TimeUnit</name><operator>.</operator><name>SECONDS</name></name></expr></argument>)</argument_list></call>
         <operator>.</operator><call><name>convertDurationsTo</name><argument_list>(<argument><expr><name><name>TimeUnit</name><operator>.</operator><name>MILLISECONDS</name></name></expr></argument>)</argument_list></call></expr>;
     <name>MetricFilter</name> <name>filter</name></block></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>filterPrefix</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>filter</name> <operator>=</operator> <operator>new</operator> <call><name><name>SolrMetricManager</name><operator>.</operator><name>PrefixFilter</name></name><argument_list>(<argument><expr><name>filterPrefix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>filters</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>filter</name> <operator>=</operator> <operator>new</operator> <call><name><name>SolrMetricManager</name><operator>.</operator><name>PrefixFilter</name></name><argument_list>(<argument><expr><name>filters</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if> <else>else <block>{<block_content>
       <expr_stmt><expr><name>filter</name> <operator>=</operator> <name><name>MetricFilter</name><operator>.</operator><name>ALL</name></name></expr>;</expr_stmt>
     </block_content>}</block></else></if_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name><name>SolrJmxReporter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name><name>SolrJmxReporter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">0e78eee038a</literal><operator>..</operator><name>d09e0437214</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name><name>SolrJmxReporter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name><name>SolrJmxReporter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">15</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">25</literal> @@
  <operator>*</operator><operator>/</operator></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>reporters</name></name>;</package>
 
<import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>InstanceNotFoundException</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>MBeanServer</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>ObjectInstance</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>ObjectName</name></name>;</import>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>invoke</name><operator>.</operator><name>MethodHandles</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>management</name><operator>.</operator><name>ManagementFactory</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Locale</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 
<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>Gauge</name></name>;</import>
 <import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>JmxReporter</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricFilter</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricRegistry</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricRegistryListener</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>PluginInfo</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricsMap</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricManager</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricReporter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>JmxUtil</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">34</literal></expr><operator>,</operator><expr><literal type="number">17</literal> <operator>+</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">25</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
 <comment type="block" format="javadoc">/**
  * A {@link SolrMetricReporter} that finds (or creates) a MBeanServer from
  * the given configuration and registers metrics to it with JMX.
 * &lt;p&gt;NOTE: {@link JmxReporter} that this class uses exports only newly added metrics (it doesn't
 * process already existing metrics in a registry)&lt;/p&gt;
  */</comment>
 <class><specifier>public</specifier> class <name>SolrJmxReporter</name> <super_list><extends>extends <super><name>SolrMetricReporter</name></super></extends></super_list> <block>{
 
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Logger</name></type> <name>log</name> <init>= <expr><call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><call><name><name>MethodHandles</name><operator>.</operator><name>lookup</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>lookupClass</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name><name>ReporterClientCache</name><argument_list type="generic">&lt;<argument><name>MBeanServer</name></argument>&gt;</argument_list></name></type> <name>serviceRegistry</name> <init>= <expr><operator>new</operator> <call><name><name>ReporterClientCache</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

   <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>domain</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>agentId</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>serviceUrl</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>rootName</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>filters</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
   <decl_stmt><decl><type><specifier>private</specifier> <name>JmxReporter</name></type> <name>reporter</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>MetricRegistry</name></type> <name>registry</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>MBeanServer</name></type> <name>mBeanServer</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>MetricsMapListener</name></type> <name>listener</name></decl>;</decl_stmt>
 
   <comment type="block" format="javadoc">/**
    * Creates a new instance of {@link SolrJmxReporter}.
@@ -57,7 +75,7 @@ public class SolrJmxReporter extends SolrMetricReporter {
   }
 
   /**
   * Initializes the reporter by finding (or creating) a MBeanServer
   * Initializes the reporter by finding an MBeanServer
    * and registering the metricManager's metric registry.
    *
    * @param pluginInfo the configuration for the reporter
@@ -65,44 +83,62 @@ public class SolrJmxReporter extends SolrMetricReporter {
   @Override
   public synchronized void init(PluginInfo pluginInfo) {
     super.init(pluginInfo);

    if (!enabled) {
      log.info("Reporter disabled for registry " + registryName);
      return;
    }
    log.debug("Initializing for registry " + registryName);
     if (serviceUrl != null &amp;&amp; agentId != null) {
      ManagementFactory.getPlatformMBeanServer(); // Ensure at least one MBeanServer is available.
       mBeanServer = JmxUtil.findFirstMBeanServer();
      log.warn("No more than one of serviceUrl(%s) and agentId(%s) should be configured, using first MBeanServer instead of configuration.",
      log.warn("No more than one of serviceUrl({}) and agentId({}) should be configured, using first MBeanServer instead of configuration.",
           serviceUrl, agentId, mBeanServer);
    }
    else if (serviceUrl != null) {
      try {
        mBeanServer = JmxUtil.findMBeanServerForServiceUrl(serviceUrl);
      } catch (IOException e) {
        log.warn("findMBeanServerForServiceUrl(%s) exception: %s", serviceUrl, e);
        mBeanServer = null;
      }
    }
    else if (agentId != null) {
    } else if (serviceUrl != null) {
      // reuse existing services
      mBeanServer = serviceRegistry.getOrCreate(serviceUrl, () -&gt; JmxUtil.findMBeanServerForServiceUrl(serviceUrl));
    } else if (agentId != null) {
       mBeanServer = JmxUtil.findMBeanServerForAgentId(agentId);
     } else {
      ManagementFactory.getPlatformMBeanServer(); // Ensure at least one MBeanServer is available.
       mBeanServer = JmxUtil.findFirstMBeanServer();
      log.warn("No serviceUrl or agentId was configured, using first MBeanServer.", mBeanServer);
      log.debug("No serviceUrl or agentId was configured, using first MBeanServer: " + mBeanServer);
     }
 
     if (mBeanServer == null) {
      log.warn("No JMX server found. Not exposing Solr metrics.");
      log.warn("No JMX server found. Not exposing Solr metrics via JMX.");
       return;
     }
 
    JmxObjectNameFactory jmxObjectNameFactory = new JmxObjectNameFactory(pluginInfo.name, domain);
    if (domain == null || domain.isEmpty()) {
      domain = registryName;
    }
    String fullDomain = domain;
    if (rootName != null &amp;&amp; !rootName.isEmpty()) {
      fullDomain = rootName + "." + domain;
    }
    JmxObjectNameFactory jmxObjectNameFactory = new JmxObjectNameFactory(pluginInfo.name, fullDomain);
    registry = metricManager.registry(registryName);
    // filter out MetricsMap gauges - we have a better way of handling them
    MetricFilter mmFilter = (name, metric) -&gt; !(metric instanceof MetricsMap);
    MetricFilter filter;
    if (filters.isEmpty()) {
      filter = mmFilter;
    } else {
      // apply also prefix filters
      SolrMetricManager.PrefixFilter prefixFilter = new SolrMetricManager.PrefixFilter(filters);
      filter = new SolrMetricManager.AndFilter(prefixFilter, mmFilter);
    }
 
    reporter = JmxReporter.forRegistry(metricManager.registry(registryName))
    reporter = JmxReporter.forRegistry(registry)
                           .registerWith(mBeanServer)
                          .inDomain(domain)
                          .inDomain(fullDomain)
                          .filter(filter)
                           .createsObjectNamesWith(jmxObjectNameFactory)
                           .build();
     reporter.start();
    // workaround for inability to register custom MBeans (to be available in metrics 4.0?)
    listener = new MetricsMapListener(mBeanServer, jmxObjectNameFactory);
    registry.addListener(listener);
 
    log.info("JMX monitoring enabled at server: " + mBeanServer);
    log.info("JMX monitoring for '" + fullDomain + "' (registry '" + registryName + "') enabled at server: " + mBeanServer);
   }
 
   /**
@@ -114,6 +150,11 @@ public class SolrJmxReporter extends SolrMetricReporter {
       reporter.close();
       reporter = null;
     }
    if (listener != null &amp;&amp; registry != null) {
      registry.removeListener(listener);
      listener.close();
      listener = null;
    }
   }
 
   /**
@@ -127,9 +168,19 @@ public class SolrJmxReporter extends SolrMetricReporter {
     // Nothing to validate
   }
 

  /**
   * Set root name of the JMX hierarchy for this reporter. Default (null or empty) is none, ie.
   * the hierarchy will start from the domain name.
   * @param rootName root name of the JMX name hierarchy, or null or empty for default.
   */</comment>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>setRootName</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>rootName</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>rootName</name></name> <operator>=</operator> <name>rootName</name></expr>;</expr_stmt>
  </block_content>}</block></function>

   <comment type="block" format="javadoc">/**
    * Sets the domain with which MBeans are published. If none is set,
   * the domain defaults to the name of the core.
   * the domain defaults to the name of the registry.
    *
    * @param domain the domain
    */</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">162</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">213</literal></expr><operator>,</operator><expr><literal type="number">46</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrJmxReporter</name> extends <name>SolrMetricReporter</name> <block>{
   }</block>
 
   <comment type="block" format="javadoc">/**
   * Retrieves the reporter's MBeanServer.
   * Return configured agentId or null.
   */</comment>
  <specifier>public</specifier> <name>String</name> <call><name>getAgentId</name><argument_list>()</argument_list></call> <block>{
    <return>return <expr><name>agentId</name></expr>;</return>
  }</block></expr></expr_stmt>

  <comment type="block" format="javadoc">/**
   * Return configured serviceUrl or null.
   */</comment>
  <function><type><specifier>public</specifier> <name>String</name></type> <name>getServiceUrl</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>serviceUrl</name></expr>;</return>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * Return configured domain or null.
   */</comment>
  <function><type><specifier>public</specifier> <name>String</name></type> <name>getDomain</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>domain</name></expr>;</return>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * Report only metrics with names matching any of the prefix filters.
   * @param filters list of 0 or more prefixes. If the list is empty then
   *                all names will match.
   */</comment>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>setFilter</name><parameter_list>(<parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>filters</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>filters</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <call><name><name>filters</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <return>return;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>filters</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><name>filters</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>void</name></type> <name>setFilter</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>filter</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>filter</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>filter</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>filters</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * Return the reporter's MBeanServer.
    *
    * @return the reporter's MBeanServer
    */</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">170</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">260</literal></expr><operator>,</operator><expr><literal type="number">72</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrJmxReporter</name> extends <name>SolrMetricReporter</name> <block>{
     <return>return <expr><name>mBeanServer</name></expr>;</return>
   }</block></expr></expr_stmt>
 
  <comment type="block" format="javadoc">/**
   * For unit tests.
   * @return true if this reporter is actively reporting metrics to JMX.
   */</comment>
  <function><type><specifier>public</specifier> <name>boolean</name></type> <name>isActive</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>reporter</name> <operator>!=</operator> <literal type="null">null</literal></expr>;</return>
  </block_content>}</block></function>

   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>String</name></type> <name>toString</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><name><name>Locale</name><operator>.</operator><name>ENGLISH</name></name></expr></argument>, <argument><expr><literal type="string">"[%s@%s: domain = %s, service url = %s, agent id = %s]"</literal></expr></argument>,
        <argument><expr><call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getName</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>Integer</name><operator>.</operator><name>toHexString</name></name><argument_list>(<argument><expr><call><name>hashCode</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>domain</name></expr></argument>, <argument><expr><name>serviceUrl</name></expr></argument>, <argument><expr><name>agentId</name></expr></argument>)</argument_list></call></expr>;</return>
    <return>return <expr><call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><name><name>Locale</name><operator>.</operator><name>ENGLISH</name></name></expr></argument>, <argument><expr><literal type="string">"[%s@%s: rootName = %s, domain = %s, service url = %s, agent id = %s]"</literal></expr></argument>,
        <argument><expr><call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getName</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>Integer</name><operator>.</operator><name>toHexString</name></name><argument_list>(<argument><expr><call><name>hashCode</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>rootName</name></expr></argument>, <argument><expr><name>domain</name></expr></argument>, <argument><expr><name>serviceUrl</name></expr></argument>, <argument><expr><name>agentId</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 
  <class><specifier>private</specifier> <specifier>static</specifier> class <name>MetricsMapListener</name> <super_list><extends>extends <super><name><name>MetricRegistryListener</name><operator>.</operator><name>Base</name></name></super></extends></super_list> <block>{
    <decl_stmt><decl><type><name>MBeanServer</name></type> <name>server</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>JmxObjectNameFactory</name></type> <name>nameFactory</name></decl>;</decl_stmt>
    <comment type="line">// keep the names so that we can unregister them on core close</comment>
    <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>ObjectName</name></argument>&gt;</argument_list></name></type> <name>registered</name> <init>= <expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <constructor><name>MetricsMapListener</name><parameter_list>(<parameter><decl><type><name>MBeanServer</name></type> <name>server</name></decl></parameter>, <parameter><decl><type><name>JmxObjectNameFactory</name></type> <name>nameFactory</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>server</name></name> <operator>=</operator> <name>server</name></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>this</name><operator>.</operator><name>nameFactory</name></name> <operator>=</operator> <name>nameFactory</name></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>onGaugeAdded</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>name</name></decl></parameter>, <parameter><decl><type><name><name>Gauge</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name></type> <name>gauge</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>gauge</name> <operator>instanceof</operator> <name>MetricsMap</name><operator>)</operator></expr>)</condition> <block>{<block_content>
        <return>return;</return>
      </block_content>}</block></if></if_stmt>
      <synchronized>synchronized <init>(<expr><name>server</name></expr>)</init> <block>{<block_content>
        <try>try <block>{<block_content>
          <decl_stmt><decl><type><name>ObjectName</name></type> <name>objectName</name> <init>= <expr><call><name><name>nameFactory</name><operator>.</operator><name>createName</name></name><argument_list>(<argument><expr><literal type="string">"gauges"</literal></expr></argument>, <argument><expr><call><name><name>nameFactory</name><operator>.</operator><name>getDomain</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"REGISTER "</literal> <operator>+</operator> <name>objectName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <if_stmt><if>if <condition>(<expr><call><name><name>registered</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><name>objectName</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name><name>server</name><operator>.</operator><name>isRegistered</name></name><argument_list>(<argument><expr><name>objectName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"-unregistering old instance of "</literal> <operator>+</operator> <name>objectName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <try>try <block>{<block_content>
              <expr_stmt><expr><call><name><name>server</name><operator>.</operator><name>unregisterMBean</name></name><argument_list>(<argument><expr><name>objectName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>InstanceNotFoundException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
              <comment type="line">// ignore</comment>
            </block_content>}</block></catch></try>
          </block_content>}</block></if></if_stmt>
          <comment type="line">// some MBean servers re-write object name to include additional properties</comment>
          <decl_stmt><decl><type><name>ObjectInstance</name></type> <name>instance</name> <init>= <expr><call><name><name>server</name><operator>.</operator><name>registerMBean</name></name><argument_list>(<argument><expr><name>gauge</name></expr></argument>, <argument><expr><name>objectName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <if_stmt><if>if <condition>(<expr><name>instance</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>registered</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>instance</name><operator>.</operator><name>getObjectName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></if></if_stmt>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
          <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"bean registration error"</literal></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></catch></try>
      </block_content>}</block></synchronized>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>close</name><parameter_list>()</parameter_list> <block>{<block_content>
      <synchronized>synchronized <init>(<expr><name>server</name></expr>)</init> <block>{<block_content>
        <for>for <control>(<init><decl><type><name>ObjectName</name></type> <name>name</name> <range>: <expr><name>registered</name></expr></range></decl></init>)</control> <block>{<block_content>
          <try>try <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><call><name><name>server</name><operator>.</operator><name>isRegistered</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
              <expr_stmt><expr><call><name><name>server</name><operator>.</operator><name>unregisterMBean</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
          </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"bean unregistration error"</literal></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></catch></try>
        </block_content>}</block></for>
        <expr_stmt><expr><call><name><name>registered</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></synchronized>
    </block_content>}</block></function>
  }</block></class>
 }</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name><name>SolrSlf4jReporter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name><name>SolrSlf4jReporter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">817dda17f94</literal><operator>..</operator><literal type="number">8b7c35e88e4</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name><name>SolrSlf4jReporter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name><name>SolrSlf4jReporter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>reporters</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>invoke</name><operator>.</operator><name>MethodHandles</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>TimeUnit</name></name>;</import>
 
 <import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricFilter</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">47</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">49</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrSlf4jReporter</name> extends <name>SolrMetricReporter</name> <block>{
   <expr><specifier>private</specifier> <name>int</name> <name>period</name> <operator>=</operator> <literal type="number">60</literal></expr>;
   <specifier>private</specifier> <name>String</name> <name>instancePrefix</name> <operator>=</operator> <literal type="null">null</literal></block></expr>;</expr_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>logger</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>filterPrefix</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>filters</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>Slf4jReporter</name></type> <name>reporter</name></decl>;</decl_stmt>
 
   <comment type="block" format="javadoc">/**
@@ -65,10 +67,25 @@ public class SolrSlf4jReporter extends SolrMetricReporter {
     this.instancePrefix = prefix;
   }
 
  /**
   * Report only metrics with names matching any of the prefix filters.
   * @param filters list of 0 or more prefixes. If the list is empty then
   *                all names will match.
   */</comment>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>setFilter</name><parameter_list>(<parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>filters</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>filters</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <call><name><name>filters</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <return>return;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>filters</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><name>filters</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

   <function><type><specifier>public</specifier> <name>void</name></type> <name>setFilter</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>filter</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>filterPrefix</name></name> <operator>=</operator> <name>filter</name></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>filter</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>filter</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>filters</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
   </block_content>}</block></function>
 

   <function><type><specifier>public</specifier> <name>void</name></type> <name>setLogger</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>logger</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <expr_stmt><expr><name><name>this</name><operator>.</operator><name>logger</name></name> <operator>=</operator> <name>logger</name></expr>;</expr_stmt>
   </block_content>}</block></function>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">79</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">96</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrSlf4jReporter</name> extends <name>SolrMetricReporter</name> <block>{
 
   @<expr><name>Override</name>
   <specifier>protected</specifier> <name>void</name> <call><name>validate</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IllegalStateException</name> <block>{</block></expr></argument></throws></expr>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><name>enabled</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Reporter disabled for registry "</literal> <operator>+</operator> <name>registryName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <return>return;</return>
    </block_content>}</block></if></if_stmt></block></expr></expr_stmt>
     <if_stmt><if>if <condition>(<expr><name>period</name> <operator>&lt;</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
       <throw>throw <expr><operator>new</operator> <call><name>IllegalStateException</name><argument_list>(<argument><expr><literal type="string">"Init argument 'period' is in time unit 'seconds' and must be at least 1."</literal></expr></argument>)</argument_list></call></expr>;</throw>
     </block_content>}</block></if></if_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">93</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">114</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrSlf4jReporter</name> extends <name>SolrMetricReporter</name> <block>{
         <expr><operator>.</operator><call><name>convertDurationsTo</name><argument_list>(<argument><expr><name><name>TimeUnit</name><operator>.</operator><name>MILLISECONDS</name></name></expr></argument>)</argument_list></call></expr>;
 
     <name>MetricFilter</name> <name>filter</name></block></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>filterPrefix</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>filter</name> <operator>=</operator> <operator>new</operator> <call><name><name>SolrMetricManager</name><operator>.</operator><name>PrefixFilter</name></name><argument_list>(<argument><expr><name>filterPrefix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>filters</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>filter</name> <operator>=</operator> <operator>new</operator> <call><name><name>SolrMetricManager</name><operator>.</operator><name>PrefixFilter</name></name><argument_list>(<argument><expr><name>filters</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if> <else>else <block>{<block_content>
       <expr_stmt><expr><name>filter</name> <operator>=</operator> <name><name>MetricFilter</name><operator>.</operator><name>ALL</name></name></expr>;</expr_stmt>
     </block_content>}</block></else></if_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrClusterReporter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrClusterReporter</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a34accd82aa</name><operator>..</operator><name>c4374570b23</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrClusterReporter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrClusterReporter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>cloud</name><operator>.</operator><name>ZkController</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>cloud</name><operator>.</operator><name>SolrZkClient</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>cloud</name><operator>.</operator><name>ZkNodeProps</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>CoreContainer</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoMBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>handler</name><operator>.</operator><name>admin</name><operator>.</operator><name>MetricsCollectorHandler</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricManager</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricReporter</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">92</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">92</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@</expr></expr_stmt> <import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>CommonParams</name><operator>.</operator><name>ID</name></name>;</import>
 <class><specifier>public</specifier> class <name>SolrClusterReporter</name> <super_list><extends>extends <super><name>SolrMetricReporter</name></super></extends></super_list> <block>{
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Logger</name></type> <name>log</name> <init>= <expr><call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><call><name><name>MethodHandles</name><operator>.</operator><name>lookup</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>lookupClass</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>CLUSTER_GROUP</name> <init>= <expr><call><name><name>SolrMetricManager</name><operator>.</operator><name>overridableRegistryName</name></name><argument_list>(<argument><expr><call><name><name>SolrInfoMBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>cluster</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>CLUSTER_GROUP</name> <init>= <expr><call><name><name>SolrMetricManager</name><operator>.</operator><name>overridableRegistryName</name></name><argument_list>(<argument><expr><call><name><name>SolrInfoBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>cluster</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
   <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name><name>SolrReporter</name><operator>.</operator><name>Report</name></name></argument>&gt;</argument_list></name></type> <name>DEFAULT_REPORTS</name> <init>= <expr><operator>new</operator> <class><super><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name><name>SolrReporter</name><operator>.</operator><name>Report</name></name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{<block>{<block_content>
     <expr_stmt><expr><call><name>add</name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>SolrReporter</name><operator>.</operator><name>Report</name></name><argument_list>(<argument><expr><name>CLUSTER_GROUP</name></expr></argument>, <argument><expr><literal type="string">"jetty"</literal></expr></argument>,
        <argument><expr><call><name><name>SolrMetricManager</name><operator>.</operator><name>overridableRegistryName</name></name><argument_list>(<argument><expr><call><name><name>SolrInfoMBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>jetty</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
        <argument><expr><call><name><name>SolrMetricManager</name><operator>.</operator><name>overridableRegistryName</name></name><argument_list>(<argument><expr><call><name><name>SolrInfoBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>jetty</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
         <argument><expr><call><name><name>Collections</name><operator>.</operator><name>emptySet</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// all metrics</comment>
     <expr_stmt><expr><call><name>add</name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>SolrReporter</name><operator>.</operator><name>Report</name></name><argument_list>(<argument><expr><name>CLUSTER_GROUP</name></expr></argument>, <argument><expr><literal type="string">"jvm"</literal></expr></argument>,
        <argument><expr><call><name><name>SolrMetricManager</name><operator>.</operator><name>overridableRegistryName</name></name><argument_list>(<argument><expr><call><name><name>SolrInfoMBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>jvm</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
        <argument><expr><call><name><name>SolrMetricManager</name><operator>.</operator><name>overridableRegistryName</name></name><argument_list>(<argument><expr><call><name><name>SolrInfoBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>jvm</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
         <argument><expr><operator>new</operator> <class><super><name><name>HashSet</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{<block>{<block_content>
           <expr_stmt><expr><call><name>add</name><argument_list>(<argument><expr><literal type="string">"memory\\.total\\..*"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           <expr_stmt><expr><call><name>add</name><argument_list>(<argument><expr><literal type="string">"memory\\.heap\\..*"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">109</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">109</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>SolrClusterReporter</name> extends <name>SolrMetricReporter</name> <block>{
           <expr><call><name>add</name><argument_list>(<argument><expr><literal type="string">"os\\.OpenFileDescriptorCount"</literal></expr></argument>)</argument_list></call></expr>;
           <call><name>add</name><argument_list>(<argument><expr><literal type="string">"threads\\.count"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
         </block_content>}</block>}</block></class></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>add</name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>SolrReporter</name><operator>.</operator><name>Report</name></name><argument_list>(<argument><expr><name>CLUSTER_GROUP</name></expr></argument>, <argument><expr><literal type="string">"node"</literal></expr></argument>, <argument><expr><call><name><name>SolrMetricManager</name><operator>.</operator><name>overridableRegistryName</name></name><argument_list>(<argument><expr><call><name><name>SolrInfoMBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>node</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
    <argument><expr><call><name>add</name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>SolrReporter</name><operator>.</operator><name>Report</name></name><argument_list>(<argument><expr><name>CLUSTER_GROUP</name></expr></argument>, <argument><expr><literal type="string">"node"</literal></expr></argument>, <argument><expr><call><name><name>SolrMetricManager</name><operator>.</operator><name>overridableRegistryName</name></name><argument_list>(<argument><expr><call><name><name>SolrInfoBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>node</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
         <argument><expr><operator>new</operator> <class><super><name><name>HashSet</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{<block>{<block_content>
           <expr_stmt><expr><call><name>add</name><argument_list>(<argument><expr><literal type="string">"CONTAINER\\.cores\\..*"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           <expr_stmt><expr><call><name>add</name><argument_list>(<argument><expr><literal type="string">"CONTAINER\\.fs\\..*"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">159</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">159</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@ <specifier>public</specifier> class <name>SolrClusterReporter</name> extends <name>SolrMetricReporter</name> <block>{
     }</block></expr></expr_stmt></block_content></block></block></class></expr></argument>)</argument_list></call></expr></argument>;</argument_list></call></expr></argument></argument_list></call></expr></argument></argument_list></call></expr></expr_stmt>
   </block_content>}</block>
 
  <function><type><specifier>public</specifier> <name>void</name></type> <name>setReport</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>map</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>map</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <call><name><name>map</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <return>return;</return>
    </block_content>}</block></if></if_stmt>
    <decl_stmt><decl><type><name><name>SolrReporter</name><operator>.</operator><name>Report</name></name></type> <name>r</name> <init>= <expr><call><name><name>SolrReporter</name><operator>.</operator><name>Report</name><operator>.</operator><name>fromMap</name></name><argument_list>(<argument><expr><name>map</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>r</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>reports</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
  </block_content>}</block></function>

   <comment type="line">// for unit tests</comment>
   <function><type><name>int</name></type> <name>getPeriod</name><parameter_list>()</parameter_list> <block>{<block_content>
     <return>return <expr><name>period</name></expr>;</return>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">170</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">180</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrClusterReporter</name> extends <name>SolrMetricReporter</name> <block>{
 
   @<expr><name>Override</name>
   <specifier>protected</specifier> <name>void</name> <call><name>validate</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IllegalStateException</name> <block>{</block></expr></argument></throws></expr>
    <if_stmt><if>if <condition>(<expr><name>period</name> <operator>&lt;</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Turning off node reporter, period="</literal> <operator>+</operator> <name>period</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt></block></expr></expr_stmt>
     <if_stmt><if>if <condition>(<expr><call><name><name>reports</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content> <comment type="line">// set defaults</comment>
       <expr_stmt><expr><name>reports</name> <operator>=</operator> <name>DEFAULT_REPORTS</name></expr>;</expr_stmt>
     </block_content>}</block></if></if_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">189</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">196</literal></expr><operator>,</operator><expr><literal type="number">17</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrClusterReporter</name> extends <name>SolrMetricReporter</name> <block>{
     <if_stmt><if>if <condition>(<expr><name>reporter</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><call><name><name>reporter</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt><empty_stmt>;</empty_stmt>
     </block_content>}</block></if></if_stmt></block></expr></expr_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><name>enabled</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Reporter disabled for registry "</literal> <operator>+</operator> <name>registryName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <return>return;</return>
    </block_content>}</block></if></if_stmt>
     <comment type="line">// start reporter only in cloud mode</comment>
     <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>cc</name><operator>.</operator><name>isZooKeeperAware</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Not ZK-aware, not starting..."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <return>return;</return>
     </block_content>}</block></if></if_stmt>
     <if_stmt><if>if <condition>(<expr><name>period</name> <operator>&lt;</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content> <comment type="line">// don't start it</comment>
      <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Turning off node reporter, period="</literal> <operator>+</operator> <name>period</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <return>return;</return>
     </block_content>}</block></if></if_stmt>
     <decl_stmt><decl><type><name>HttpClient</name></type> <name>httpClient</name> <init>= <expr><call><name><name>cc</name><operator>.</operator><name>getUpdateShardHandler</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getHttpClient</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrShardReporter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrShardReporter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8b36d3e0c96</literal><operator>..</operator><name>b36c59679b7</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrShardReporter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrShardReporter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">98</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">98</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrShardReporter</name> extends <name>SolrMetricReporter</name> <block>{
     <if_stmt><if>if <condition>(<expr><name>filterConfig</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <call><name><name>filterConfig</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
       <return>return;</return>
     </block_content>}</block></if></if_stmt>
    <name>filters</name> <operator>=</operator> <name>filterConfig</name></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>filters</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><name>filterConfig</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><type><specifier>public</specifier> <name>void</name></type> <name>setFilter</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>filter</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>filter</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>filter</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>filters</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
   </block_content>}</block></function>
 
   <comment type="line">// for unit tests</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">108</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">114</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrShardReporter</name> extends <name>SolrMetricReporter</name> <block>{
 
   @<expr><name>Override</name>
   <specifier>protected</specifier> <name>void</name> <call><name>validate</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IllegalStateException</name> <block>{</block></expr></argument></throws></expr>
    <if_stmt><if>if <condition>(<expr><name>period</name> <operator>&lt;</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Turning off shard reporter, period="</literal> <operator>+</operator> <name>period</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt></block></expr></expr_stmt>
     <if_stmt><if>if <condition>(<expr><call><name><name>filters</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><name>filters</name> <operator>=</operator> <name>DEFAULT_FILTERS</name></expr>;</expr_stmt>
     </block_content>}</block></if></if_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">128</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">131</literal></expr><operator>,</operator><expr><literal type="number">17</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrShardReporter</name> extends <name>SolrMetricReporter</name> <block>{
     <if_stmt><if>if <condition>(<expr><name>reporter</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><call><name><name>reporter</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if></if_stmt></block></expr></expr_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><name>enabled</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Reporter disabled for registry "</literal> <operator>+</operator> <name>registryName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <return>return;</return>
    </block_content>}</block></if></if_stmt>
     <if_stmt><if>if <condition>(<expr><call><name><name>core</name><operator>.</operator><name>getCoreDescriptor</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCloudDescriptor</name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <comment type="line">// not a cloud core</comment>
       <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Not initializing shard reporter for non-cloud core "</literal> <operator>+</operator> <call><name><name>core</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <return>return;</return>
     </block_content>}</block></if></if_stmt>
     <if_stmt><if>if <condition>(<expr><name>period</name> <operator>&lt;</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content> <comment type="line">// don't start it</comment>
      <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Not starting shard reporter "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"period="</literal> <operator>+</operator> <name>period</name> <operator>+</operator> <literal type="string">", not starting shard reporter "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <return>return;</return>
     </block_content>}</block></if></if_stmt>
     <comment type="line">// our id is coreNodeName</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>SolrRequestHandler</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>SolrRequestHandler</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">82ce2e0fbeb</literal><operator>..</operator><literal type="number">8350f9ed1c0</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>SolrRequestHandler</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>request</name><operator>/</operator><name><name>SolrRequestHandler</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>request</name></name>;</package>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoMBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>response</name><operator>.</operator><name>SolrQueryResponse</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
@@ -38,7 +38,7 @@ import org.apache.solr.response.SolrQueryResponse;
  *
  *
  */</comment>
<interface><specifier>public</specifier> interface <name>SolrRequestHandler</name> <super_list><extends>extends <super><name>SolrInfoMBean</name></super></extends></super_list> <block>{
<interface><specifier>public</specifier> interface <name>SolrRequestHandler</name> <super_list><extends>extends <super><name>SolrInfoBean</name></super></extends></super_list> <block>{
 
   <comment type="block" format="javadoc">/** &lt;code&gt;init&lt;/code&gt; will be called just once, immediately after creation.
    * &lt;p&gt;The args are user-level initialization parameters that
diff --git a/solr/core/src/java/org/apache/solr/search/FastLRUCache.java b/solr/core/src/java/org/apache/solr/search/FastLRUCache.java
index 9c4b8920aab..cb699b25abc 100644
-- a/solr/core/src/java/org/apache/solr/search/FastLRUCache.java
++ b/solr/core/src/java/org/apache/solr/search/FastLRUCache.java
@@ -15,15 +15,17 @@
  * limitations under the License.
  */</comment>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name></name>;</package>

<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricRegistry</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricsMap</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricManager</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>ConcurrentLRUCache</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>SimpleOrderedMap</name></name>;</import>
 
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Serializable</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>invoke</name><operator>.</operator><name>MethodHandles</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">57</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">59</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name><name>FastLRUCache</name><argument_list type="generic">&lt;<argument><name>K</name></argument>, <argument><name>V</name></argument>&gt;</argument_list></name> extends <name>SolrCacheBase</name> implements <name><name>SolrCache</name><argument_list type="generic">&lt;<argument><name>K</name></argument>,<argument><name>V</name></argument>&gt;</argument_list></name>
 
   <specifier>private</specifier> <name>long</name> <name>maxRamBytes</name></expr>;</expr_stmt>
 
  <decl_stmt><decl><type><specifier>private</specifier> <name>MetricsMap</name></type> <name>cacheMap</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>metricNames</name> <init>= <expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>MetricRegistry</name></type> <name>registry</name></decl>;</decl_stmt>

   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>Object</name></type> <name>init</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>args</name></decl></parameter>, <parameter><decl><type><name>Object</name></type> <name>persistence</name></decl></parameter>, <parameter><decl><type><name>CacheRegenerator</name></type> <name>regenerator</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>args</name></expr></argument>, <argument><expr><name>regenerator</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">215</literal></expr><operator>,</operator><expr><literal type="number">68</literal> <operator>+</operator><literal type="number">221</literal></expr><operator>,</operator><expr><literal type="number">80</literal> @@ <specifier>public</specifier> <name>class</name> <name><name>FastLRUCache</name><argument_list type="generic">&lt;<argument><name>K</name></argument>, <argument><name>V</name></argument>&gt;</argument_list></name> extends <name>SolrCacheBase</name> implements <name><name>SolrCache</name><argument_list type="generic">&lt;<argument><name>K</name></argument>,<argument><name>V</name></argument>&gt;</argument_list></name></expr></expr_stmt>
   </block_content>}</block></function>
 
   <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>String</name></type> <name>getSource</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><literal type="null">null</literal></expr>;</return>
  <function><type><specifier>public</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>getMetricNames</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>metricNames</name></expr>;</return>
   </block_content>}</block></function>
 

   <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>NamedList</name></type> <name>getStatistics</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Serializable</name></argument>&gt;</argument_list></name></type> <name>lst</name> <init>= <expr><operator>new</operator> <call><name><name>SimpleOrderedMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>cache</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>  <return>return <expr><name>lst</name></expr>;</return></block_content></block></if></if_stmt>
    <decl_stmt><decl><type><name><name>ConcurrentLRUCache</name><operator>.</operator><name>Stats</name></name></type> <name>stats</name> <init>= <expr><call><name><name>cache</name><operator>.</operator><name>getStats</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name>lookups</name> <init>= <expr><call><name><name>stats</name><operator>.</operator><name>getCumulativeLookups</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name>hits</name> <init>= <expr><call><name><name>stats</name><operator>.</operator><name>getCumulativeHits</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name>inserts</name> <init>= <expr><call><name><name>stats</name><operator>.</operator><name>getCumulativePuts</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name>evictions</name> <init>= <expr><call><name><name>stats</name><operator>.</operator><name>getCumulativeEvictions</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name>size</name> <init>= <expr><call><name><name>stats</name><operator>.</operator><name>getCurrentSize</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name>clookups</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name>chits</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name>cinserts</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name>cevictions</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

    <comment type="line">// NOTE: It is safe to iterate on a CopyOnWriteArrayList</comment>
    <for>for <control>(<init><decl><type><name><name>ConcurrentLRUCache</name><operator>.</operator><name>Stats</name></name></type> <name>statistiscs</name> <range>: <expr><name>statsList</name></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><name>clookups</name> <operator>+=</operator> <call><name><name>statistiscs</name><operator>.</operator><name>getCumulativeLookups</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>chits</name> <operator>+=</operator> <call><name><name>statistiscs</name><operator>.</operator><name>getCumulativeHits</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>cinserts</name> <operator>+=</operator> <call><name><name>statistiscs</name><operator>.</operator><name>getCumulativePuts</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>cevictions</name> <operator>+=</operator> <call><name><name>statistiscs</name><operator>.</operator><name>getCumulativeEvictions</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>initializeMetrics</name><parameter_list>(<parameter><decl><type><name>SolrMetricManager</name></type> <name>manager</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>registryName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>scope</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name>registry</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>registry</name></name><argument_list>(<argument><expr><name>registryName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>cacheMap</name> <operator>=</operator> <operator>new</operator> <call><name>MetricsMap</name><argument_list>(<argument><expr><lambda><parameter_list>(<parameter><decl><name>detailed</name></decl></parameter>, <parameter><decl><name>map</name></decl></parameter>)</parameter_list> -&gt; <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>cache</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <decl_stmt><decl><type><name><name>ConcurrentLRUCache</name><operator>.</operator><name>Stats</name></name></type> <name>stats</name> <init>= <expr><call><name><name>cache</name><operator>.</operator><name>getStats</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>long</name></type> <name>lookups</name> <init>= <expr><call><name><name>stats</name><operator>.</operator><name>getCumulativeLookups</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>long</name></type> <name>hits</name> <init>= <expr><call><name><name>stats</name><operator>.</operator><name>getCumulativeHits</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>long</name></type> <name>inserts</name> <init>= <expr><call><name><name>stats</name><operator>.</operator><name>getCumulativePuts</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>long</name></type> <name>evictions</name> <init>= <expr><call><name><name>stats</name><operator>.</operator><name>getCumulativeEvictions</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>long</name></type> <name>size</name> <init>= <expr><call><name><name>stats</name><operator>.</operator><name>getCurrentSize</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>long</name></type> <name>clookups</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>long</name></type> <name>chits</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>long</name></type> <name>cinserts</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>long</name></type> <name>cevictions</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

        <comment type="line">// NOTE: It is safe to iterate on a CopyOnWriteArrayList</comment>
        <for>for <control>(<init><decl><type><name><name>ConcurrentLRUCache</name><operator>.</operator><name>Stats</name></name></type> <name>statistiscs</name> <range>: <expr><name>statsList</name></expr></range></decl></init>)</control> <block>{<block_content>
          <expr_stmt><expr><name>clookups</name> <operator>+=</operator> <call><name><name>statistiscs</name><operator>.</operator><name>getCumulativeLookups</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><name>chits</name> <operator>+=</operator> <call><name><name>statistiscs</name><operator>.</operator><name>getCumulativeHits</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><name>cinserts</name> <operator>+=</operator> <call><name><name>statistiscs</name><operator>.</operator><name>getCumulativePuts</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><name>cevictions</name> <operator>+=</operator> <call><name><name>statistiscs</name><operator>.</operator><name>getCumulativeEvictions</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>

        <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"lookups"</literal></expr></argument>, <argument><expr><name>lookups</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>, <argument><expr><name>hits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"hitratio"</literal></expr></argument>, <argument><expr><call><name>calcHitRatio</name><argument_list>(<argument><expr><name>lookups</name></expr></argument>, <argument><expr><name>hits</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>, <argument><expr><name>inserts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"evictions"</literal></expr></argument>, <argument><expr><name>evictions</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"size"</literal></expr></argument>, <argument><expr><name>size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"warmupTime"</literal></expr></argument>, <argument><expr><name>warmupTime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"cumulative_lookups"</literal></expr></argument>, <argument><expr><name>clookups</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"cumulative_hits"</literal></expr></argument>, <argument><expr><name>chits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"cumulative_hitratio"</literal></expr></argument>, <argument><expr><call><name>calcHitRatio</name><argument_list>(<argument><expr><name>clookups</name></expr></argument>, <argument><expr><name>chits</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"cumulative_inserts"</literal></expr></argument>, <argument><expr><name>cinserts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"cumulative_evictions"</literal></expr></argument>, <argument><expr><name>cevictions</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt><if>if <condition>(<expr><name>detailed</name> <operator>&amp;&amp;</operator> <name>showItems</name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
          <decl_stmt><decl><type><name>Map</name></type> <name>items</name> <init>= <expr><call><name><name>cache</name><operator>.</operator><name>getLatestAccessedItems</name></name><argument_list>( <argument><expr><ternary><condition><expr><name>showItems</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr> ?</condition><then> <expr><name><name>Integer</name><operator>.</operator><name>MAX_VALUE</name></name></expr> </then><else>: <expr><name>showItems</name></expr></else></ternary></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
          <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name>Entry</name></name></type> <name>e</name> <range>: <expr><operator>(</operator><name><name>Set</name> <argument_list type="generic">&lt;<argument><name><name>Map</name><operator>.</operator><name>Entry</name></name></argument>&gt;</argument_list></name><operator>)</operator><call><name><name>items</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
            <decl_stmt><decl><type><name>Object</name></type> <name>k</name> <init>= <expr><call><name><name>e</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>Object</name></type> <name>v</name> <init>= <expr><call><name><name>e</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name>String</name></type> <name>ks</name> <init>= <expr><literal type="string">"item_"</literal> <operator>+</operator> <name>k</name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>String</name></type> <name>vs</name> <init>= <expr><call><name><name>v</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>ks</name></expr></argument>,<argument><expr><name>vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></for>
 
    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"lookups"</literal></expr></argument>, <argument><expr><name>lookups</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>, <argument><expr><name>hits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"hitratio"</literal></expr></argument>, <argument><expr><call><name>calcHitRatio</name><argument_list>(<argument><expr><name>lookups</name></expr></argument>, <argument><expr><name>hits</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>, <argument><expr><name>inserts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"evictions"</literal></expr></argument>, <argument><expr><name>evictions</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"size"</literal></expr></argument>, <argument><expr><name>size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"warmupTime"</literal></expr></argument>, <argument><expr><name>warmupTime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"cumulative_lookups"</literal></expr></argument>, <argument><expr><name>clookups</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"cumulative_hits"</literal></expr></argument>, <argument><expr><name>chits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"cumulative_hitratio"</literal></expr></argument>, <argument><expr><call><name>calcHitRatio</name><argument_list>(<argument><expr><name>clookups</name></expr></argument>, <argument><expr><name>chits</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"cumulative_inserts"</literal></expr></argument>, <argument><expr><name>cinserts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"cumulative_evictions"</literal></expr></argument>, <argument><expr><name>cevictions</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt><if>if <condition>(<expr><name>showItems</name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>Map</name></type> <name>items</name> <init>= <expr><call><name><name>cache</name><operator>.</operator><name>getLatestAccessedItems</name></name><argument_list>( <argument><expr><ternary><condition><expr><name>showItems</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr> ?</condition><then> <expr><name><name>Integer</name><operator>.</operator><name>MAX_VALUE</name></name></expr> </then><else>: <expr><name>showItems</name></expr></else></ternary></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
      <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name>Entry</name></name></type> <name>e</name> <range>: <expr><operator>(</operator><name><name>Set</name> <argument_list type="generic">&lt;<argument><name><name>Map</name><operator>.</operator><name>Entry</name></name></argument>&gt;</argument_list></name><operator>)</operator><call><name><name>items</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
        <decl_stmt><decl><type><name>Object</name></type> <name>k</name> <init>= <expr><call><name><name>e</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Object</name></type> <name>v</name> <init>= <expr><call><name><name>e</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><name>String</name></type> <name>ks</name> <init>= <expr><literal type="string">"item_"</literal> <operator>+</operator> <name>k</name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>vs</name> <init>= <expr><call><name><name>v</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>ks</name></expr></argument>,<argument><expr><name>vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
       </block_content>}</block></if></if_stmt>
      
    </block_content>}</block></if></if_stmt>
    </block_content>}</block></if></if_stmt><expr_stmt><expr/></expr_stmt></block_content></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registryName</name></expr></argument>, <argument><expr><name>cacheMap</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><name>scope</name></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <comment type="line">// for unit tests only</comment>
  <function><type><name>MetricsMap</name></type> <name>getMetricsMap</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>cacheMap</name></expr>;</return>
  </block_content>}</block></function>
 
    <return>return <expr><name>lst</name></expr>;</return>
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>MetricRegistry</name></type> <name>getMetricRegistry</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>registry</name></expr>;</return>
   </block_content>}</block></function>
 
   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>String</name></type> <name>toString</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>name</name><argument_list>()</argument_list></call> <operator>+</operator> <call><name>getStatistics</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr>;</return>
    <return>return <expr><ternary><condition><expr><call><name>name</name><argument_list>()</argument_list></call> <operator>+</operator> <name>cacheMap</name> <operator>!=</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><call><name><name>cacheMap</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr> </then><else>: <expr><literal type="string">""</literal></expr></else></ternary></expr>;</return>
   </block_content>}</block></function>

 </block_content>}</block></function>
 
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>LFUCache</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>LFUCache</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2b593c6f57a</literal><operator>..</operator><literal type="number">82ba6d26536</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>LFUCache</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>LFUCache</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">15</literal></expr><operator>,</operator><expr><literal type="number">19</literal> <operator>+</operator><literal type="number">15</literal></expr><operator>,</operator><expr><literal type="number">19</literal> @@
  <operator>*</operator> <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
  *<operator>/</operator></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name></name>;</package>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Serializable</name></name>;</import>

 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>invoke</name><operator>.</operator><name>MethodHandles</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URL</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>CopyOnWriteArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>TimeUnit</name></name>;</import>
 
<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricRegistry</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>SimpleOrderedMap</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrCore</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricsMap</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricManager</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>ConcurrentLFUCache</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">64</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">64</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name><name>LFUCache</name><argument_list type="generic">&lt;<argument><name>K</name></argument>, <argument><name>V</name></argument>&gt;</argument_list></name> implements <name><name>SolrCache</name><argument_list type="generic">&lt;<argument><name>K</name></argument>, <argument><name>V</name></argument>&gt;</argument_list></name> <block>{
   <expr><specifier>private</specifier> <name><name>ConcurrentLFUCache</name><argument_list type="generic">&lt;<argument><name>K</name></argument>, <argument><name>V</name></argument>&gt;</argument_list></name> <name>cache</name></expr>;
   <specifier>private</specifier> <name>int</name> <name>showItems</name> <operator>=</operator> <literal type="number">0</literal></block></expr>;</expr_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>Boolean</name></type> <name>timeDecay</name> <init>= <expr><literal type="boolean">true</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>MetricsMap</name></type> <name>cacheMap</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>metricNames</name> <init>= <expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>MetricRegistry</name></type> <name>registry</name></decl>;</decl_stmt>
 
   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>Object</name></type> <name>init</name><parameter_list>(<parameter><decl><type><name>Map</name></type> <name>args</name></decl></parameter>, <parameter><decl><type><name>Object</name></type> <name>persistence</name></decl></parameter>, <parameter><decl><type><name>CacheRegenerator</name></type> <name>regenerator</name></decl></parameter>)</parameter_list> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">211</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">214</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name><name>LFUCache</name><argument_list type="generic">&lt;<argument><name>K</name></argument>, <argument><name>V</name></argument>&gt;</argument_list></name> implements <name><name>SolrCache</name><argument_list type="generic">&lt;<argument><name>K</name></argument>, <argument><name>V</name></argument>&gt;</argument_list></name> <block>{
     <return>return <expr><call><name><name>LFUCache</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr>;</return>
   }</block></expr></expr_stmt>
 
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>String</name></type> <name>getVersion</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name><name>SolrCore</name><operator>.</operator><name>version</name></name></expr>;</return>
  </block_content>}</block></function>

   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>String</name></type> <name>getDescription</name><parameter_list>()</parameter_list> <block>{<block_content>
     <return>return <expr><name>description</name></expr>;</return>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">226</literal></expr><operator>,</operator><expr><literal type="number">16</literal> <operator>+</operator><literal type="number">224</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name><name>LFUCache</name><argument_list type="generic">&lt;<argument><name>K</name></argument>, <argument><name>V</name></argument>&gt;</argument_list></name> implements <name><name>SolrCache</name><argument_list type="generic">&lt;<argument><name>K</name></argument>, <argument><name>V</name></argument>&gt;</argument_list></name> <block>{
     <return>return <expr><name><name>Category</name><operator>.</operator><name>CACHE</name></name></expr>;</return>
   }</block></expr></expr_stmt>
 
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>String</name></type> <name>getSource</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><literal type="null">null</literal></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name><name>URL</name><index>[]</index></name></type> <name>getDocs</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><literal type="null">null</literal></expr>;</return>
  </block_content>}</block></function>

   <comment type="line">// returns a ratio, not a percent.</comment>
   <function><type><specifier>private</specifier> <specifier>static</specifier> <name>String</name></type> <name>calcHitRatio</name><parameter_list>(<parameter><decl><type><name>long</name></type> <name>lookups</name></decl></parameter>, <parameter><decl><type><name>long</name></type> <name>hits</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <if_stmt><if>if <condition>(<expr><name>lookups</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="string">"0.00"</literal></expr>;</return></block_content></block></if></if_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">246</literal></expr><operator>,</operator><expr><literal type="number">62</literal> <operator>+</operator><literal type="number">234</literal></expr><operator>,</operator><expr><literal type="number">81</literal> @@ <specifier>public</specifier> <name>class</name> <name><name>LFUCache</name><argument_list type="generic">&lt;<argument><name>K</name></argument>, <argument><name>V</name></argument>&gt;</argument_list></name> implements <name><name>SolrCache</name><argument_list type="generic">&lt;<argument><name>K</name></argument>, <argument><name>V</name></argument>&gt;</argument_list></name> <block>{
   }</block>
 
   @<name>Override</name>
  <specifier>public</specifier> <name>NamedList</name> <call><name>getStatistics</name><argument_list>()</argument_list></call> <block>{
    <expr><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Serializable</name></argument>&gt;</argument_list></name> <name>lst</name> <operator>=</operator> <operator>new</operator> <call><name><name>SimpleOrderedMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</block></expr></expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>cache</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>lst</name></expr>;</return></block_content></block></if></if_stmt>
    <decl_stmt><decl><type><name><name>ConcurrentLFUCache</name><operator>.</operator><name>Stats</name></name></type> <name>stats</name> <init>= <expr><call><name><name>cache</name><operator>.</operator><name>getStats</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name>lookups</name> <init>= <expr><call><name><name>stats</name><operator>.</operator><name>getCumulativeLookups</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name>hits</name> <init>= <expr><call><name><name>stats</name><operator>.</operator><name>getCumulativeHits</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name>inserts</name> <init>= <expr><call><name><name>stats</name><operator>.</operator><name>getCumulativePuts</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name>evictions</name> <init>= <expr><call><name><name>stats</name><operator>.</operator><name>getCumulativeEvictions</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name>size</name> <init>= <expr><call><name><name>stats</name><operator>.</operator><name>getCurrentSize</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"lookups"</literal></expr></argument>, <argument><expr><name>lookups</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>, <argument><expr><name>hits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"hitratio"</literal></expr></argument>, <argument><expr><call><name>calcHitRatio</name><argument_list>(<argument><expr><name>lookups</name></expr></argument>, <argument><expr><name>hits</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>, <argument><expr><name>inserts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"evictions"</literal></expr></argument>, <argument><expr><name>evictions</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"size"</literal></expr></argument>, <argument><expr><name>size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"warmupTime"</literal></expr></argument>, <argument><expr><name>warmupTime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"timeDecay"</literal></expr></argument>, <argument><expr><name>timeDecay</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>long</name></type> <name>clookups</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name>chits</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name>cinserts</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name>cevictions</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

    <comment type="line">// NOTE: It is safe to iterate on a CopyOnWriteArrayList</comment>
    <for>for <control>(<init><decl><type><name><name>ConcurrentLFUCache</name><operator>.</operator><name>Stats</name></name></type> <name>statistics</name> <range>: <expr><name>statsList</name></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><name>clookups</name> <operator>+=</operator> <call><name><name>statistics</name><operator>.</operator><name>getCumulativeLookups</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>chits</name> <operator>+=</operator> <call><name><name>statistics</name><operator>.</operator><name>getCumulativeHits</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>cinserts</name> <operator>+=</operator> <call><name><name>statistics</name><operator>.</operator><name>getCumulativePuts</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>cevictions</name> <operator>+=</operator> <call><name><name>statistics</name><operator>.</operator><name>getCumulativeEvictions</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"cumulative_lookups"</literal></expr></argument>, <argument><expr><name>clookups</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"cumulative_hits"</literal></expr></argument>, <argument><expr><name>chits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"cumulative_hitratio"</literal></expr></argument>, <argument><expr><call><name>calcHitRatio</name><argument_list>(<argument><expr><name>clookups</name></expr></argument>, <argument><expr><name>chits</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"cumulative_inserts"</literal></expr></argument>, <argument><expr><name>cinserts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"cumulative_evictions"</literal></expr></argument>, <argument><expr><name>cevictions</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt><if>if <condition>(<expr><name>showItems</name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>Map</name></type> <name>items</name> <init>= <expr><call><name><name>cache</name><operator>.</operator><name>getMostUsedItems</name></name><argument_list>(<argument><expr><ternary><condition><expr><name>showItems</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr> ?</condition><then> <expr><name><name>Integer</name><operator>.</operator><name>MAX_VALUE</name></name></expr> </then><else>: <expr><name>showItems</name></expr></else></ternary></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name>Entry</name></name></type> <name>e</name> <range>: <expr><operator>(</operator><name><name>Set</name><argument_list type="generic">&lt;<argument><name><name>Map</name><operator>.</operator><name>Entry</name></name></argument>&gt;</argument_list></name><operator>)</operator> <call><name><name>items</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
        <decl_stmt><decl><type><name>Object</name></type> <name>k</name> <init>= <expr><call><name><name>e</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Object</name></type> <name>v</name> <init>= <expr><call><name><name>e</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><name>String</name></type> <name>ks</name> <init>= <expr><literal type="string">"item_"</literal> <operator>+</operator> <name>k</name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>vs</name> <init>= <expr><call><name><name>v</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>ks</name></expr></argument>, <argument><expr><name>vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>initializeMetrics</name><parameter_list>(<parameter><decl><type><name>SolrMetricManager</name></type> <name>manager</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>registryName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>scope</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name>registry</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>registry</name></name><argument_list>(<argument><expr><name>registryName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>cacheMap</name> <operator>=</operator> <operator>new</operator> <call><name>MetricsMap</name><argument_list>(<argument><expr><lambda><parameter_list>(<parameter><decl><name>detailed</name></decl></parameter>, <parameter><decl><name>map</name></decl></parameter>)</parameter_list> -&gt; <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>cache</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <decl_stmt><decl><type><name><name>ConcurrentLFUCache</name><operator>.</operator><name>Stats</name></name></type> <name>stats</name> <init>= <expr><call><name><name>cache</name><operator>.</operator><name>getStats</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>long</name></type> <name>lookups</name> <init>= <expr><call><name><name>stats</name><operator>.</operator><name>getCumulativeLookups</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>long</name></type> <name>hits</name> <init>= <expr><call><name><name>stats</name><operator>.</operator><name>getCumulativeHits</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>long</name></type> <name>inserts</name> <init>= <expr><call><name><name>stats</name><operator>.</operator><name>getCumulativePuts</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>long</name></type> <name>evictions</name> <init>= <expr><call><name><name>stats</name><operator>.</operator><name>getCumulativeEvictions</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>long</name></type> <name>size</name> <init>= <expr><call><name><name>stats</name><operator>.</operator><name>getCurrentSize</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"lookups"</literal></expr></argument>, <argument><expr><name>lookups</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>, <argument><expr><name>hits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"hitratio"</literal></expr></argument>, <argument><expr><call><name>calcHitRatio</name><argument_list>(<argument><expr><name>lookups</name></expr></argument>, <argument><expr><name>hits</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>, <argument><expr><name>inserts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"evictions"</literal></expr></argument>, <argument><expr><name>evictions</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"size"</literal></expr></argument>, <argument><expr><name>size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"warmupTime"</literal></expr></argument>, <argument><expr><name>warmupTime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"timeDecay"</literal></expr></argument>, <argument><expr><name>timeDecay</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>long</name></type> <name>clookups</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>long</name></type> <name>chits</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>long</name></type> <name>cinserts</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>long</name></type> <name>cevictions</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

        <comment type="line">// NOTE: It is safe to iterate on a CopyOnWriteArrayList</comment>
        <for>for <control>(<init><decl><type><name><name>ConcurrentLFUCache</name><operator>.</operator><name>Stats</name></name></type> <name>statistics</name> <range>: <expr><name>statsList</name></expr></range></decl></init>)</control> <block>{<block_content>
          <expr_stmt><expr><name>clookups</name> <operator>+=</operator> <call><name><name>statistics</name><operator>.</operator><name>getCumulativeLookups</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><name>chits</name> <operator>+=</operator> <call><name><name>statistics</name><operator>.</operator><name>getCumulativeHits</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><name>cinserts</name> <operator>+=</operator> <call><name><name>statistics</name><operator>.</operator><name>getCumulativePuts</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><name>cevictions</name> <operator>+=</operator> <call><name><name>statistics</name><operator>.</operator><name>getCumulativeEvictions</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
        <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"cumulative_lookups"</literal></expr></argument>, <argument><expr><name>clookups</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"cumulative_hits"</literal></expr></argument>, <argument><expr><name>chits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"cumulative_hitratio"</literal></expr></argument>, <argument><expr><call><name>calcHitRatio</name><argument_list>(<argument><expr><name>clookups</name></expr></argument>, <argument><expr><name>chits</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"cumulative_inserts"</literal></expr></argument>, <argument><expr><name>cinserts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"cumulative_evictions"</literal></expr></argument>, <argument><expr><name>cevictions</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt><if>if <condition>(<expr><name>detailed</name> <operator>&amp;&amp;</operator> <name>showItems</name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
          <decl_stmt><decl><type><name>Map</name></type> <name>items</name> <init>= <expr><call><name><name>cache</name><operator>.</operator><name>getMostUsedItems</name></name><argument_list>(<argument><expr><ternary><condition><expr><name>showItems</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr> ?</condition><then> <expr><name><name>Integer</name><operator>.</operator><name>MAX_VALUE</name></name></expr> </then><else>: <expr><name>showItems</name></expr></else></ternary></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name>Entry</name></name></type> <name>e</name> <range>: <expr><operator>(</operator><name><name>Set</name><argument_list type="generic">&lt;<argument><name><name>Map</name><operator>.</operator><name>Entry</name></name></argument>&gt;</argument_list></name><operator>)</operator> <call><name><name>items</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
            <decl_stmt><decl><type><name>Object</name></type> <name>k</name> <init>= <expr><call><name><name>e</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>Object</name></type> <name>v</name> <init>= <expr><call><name><name>e</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name>String</name></type> <name>ks</name> <init>= <expr><literal type="string">"item_"</literal> <operator>+</operator> <name>k</name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>String</name></type> <name>vs</name> <init>= <expr><call><name><name>v</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>ks</name></expr></argument>, <argument><expr><name>vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

       </block_content>}</block></if></if_stmt>
    </block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registryName</name></expr></argument>, <argument><expr><name>cacheMap</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><name>scope</name></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>
 
    </block_content>}</block></for>
  <comment type="line">// for unit tests only</comment>
  <function><type><name>MetricsMap</name></type> <name>getMetricsMap</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>cacheMap</name></expr>;</return>
  </block_content>}</block></function>
 
    <return>return <expr><name>lst</name></expr>;</return>
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>getMetricNames</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>metricNames</name></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>MetricRegistry</name></type> <name>getMetricRegistry</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>registry</name></expr>;</return>
   </block_content>}</block></function>
 
   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>String</name></type> <name>toString</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>name</name> <operator>+</operator> <call><name>getStatistics</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr>;</return>
    <return>return <expr><ternary><condition><expr><name>name</name> <operator>+</operator> <name>cacheMap</name> <operator>!=</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><call><name><name>cacheMap</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr> </then><else>: <expr><literal type="string">""</literal></expr></else></ternary></expr>;</return>
   </block_content>}</block></function>

 </block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>LRUCache</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>LRUCache</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b178fb21b1f</name><operator>..</operator><name>ce206fe2f7e</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>LRUCache</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>LRUCache</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">18</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">21</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name></name>;</package>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>invoke</name><operator>.</operator><name>MethodHandles</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Iterator</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>LinkedHashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>TimeUnit</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>atomic</name><operator>.</operator><name>LongAdder</name></name>;</import>
 
<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricRegistry</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>Accountable</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>Accountables</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>RamUsageEstimator</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>SimpleOrderedMap</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricsMap</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricManager</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">55</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">58</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name><name>LRUCache</name><argument_list type="generic">&lt;<argument><name>K</name></argument>,<argument><name>V</name></argument>&gt;</argument_list></name> extends <name>SolrCacheBase</name> implements <name><name>SolrCache</name><argument_list type="generic">&lt;<argument><name>K</name></argument>,<argument><name>V</name></argument>&gt;</argument_list></name></expr><operator>,</operator> <expr><name>Acco</name>
   <specifier>static</specifier> <name>final</name> <name>long</name> <name>LINKED_HASHTABLE_RAM_BYTES_PER_ENTRY</name> <operator>=</operator>
       <name>HASHTABLE_RAM_BYTES_PER_ENTRY</name>
           <operator>+</operator> <literal type="number">2</literal> <operator>*</operator> <name><name>RamUsageEstimator</name><operator>.</operator><name>NUM_BYTES_OBJECT_REF</name></name></expr>;</expr_stmt> <comment type="line">// previous &amp; next references</comment>

   <comment type="line" format="doxygen">/// End copied code</comment>
 
   <comment type="block">/* An instance of this class will be shared across multiple instances
@@ -82,6 +86,9 @@ public class LRUCache&lt;K,V&gt; extends SolrCacheBase implements SolrCache&lt;K,V&gt;, Acco
 
   private Map&lt;K,V&gt; map;
   private String description="LRU Cache";
  private MetricsMap cacheMap;
  private Set&lt;String&gt; metricNames = new HashSet&lt;&gt;();
  private MetricRegistry registry;
 
   private long maxRamBytes = Long.MAX_VALUE;
   // The synchronization used for the map will be used to update this,
@@ -319,45 +326,56 @@ public class LRUCache&lt;K,V&gt; extends SolrCacheBase implements SolrCache&lt;K,V&gt;, Acco
   }
 
   @Override
  public String getSource() {
    return null;
  public Set&lt;String&gt; getMetricNames() {
    return metricNames;
   }
 
   @Override
  public NamedList getStatistics() {
    NamedList lst = new SimpleOrderedMap();
    synchronized (map) {
      lst.add("lookups", lookups);
      lst.add("hits", hits);
      lst.add("hitratio", calcHitRatio(lookups,hits));
      lst.add("inserts", inserts);
      lst.add("evictions", evictions);
      lst.add("size", map.size());
  public void initializeMetrics(SolrMetricManager manager, String registryName, String scope) {
    registry = manager.registry(registryName);
    cacheMap = new MetricsMap((detailed, res) -&gt; {
      synchronized (map) {
        res.put("lookups", lookups);
        res.put("hits", hits);
        res.put("hitratio", calcHitRatio(lookups,hits));
        res.put("inserts", inserts);
        res.put("evictions", evictions);
        res.put("size", map.size());
        if (maxRamBytes != Long.MAX_VALUE)  {
          res.put("maxRamMB", maxRamBytes / 1024L / 1024L);
          res.put("ramBytesUsed", ramBytesUsed());
          res.put("evictionsRamUsage", evictionsRamUsage);
        }
      }
      res.put("warmupTime", warmupTime);

      long clookups = stats.lookups.longValue();
      long chits = stats.hits.longValue();
      res.put("cumulative_lookups", clookups);
      res.put("cumulative_hits", chits);
      res.put("cumulative_hitratio", calcHitRatio(clookups, chits));
      res.put("cumulative_inserts", stats.inserts.longValue());
      res.put("cumulative_evictions", stats.evictions.longValue());
       if (maxRamBytes != Long.MAX_VALUE)  {
        lst.add("maxRamMB", maxRamBytes / 1024L / 1024L);
        lst.add("ramBytesUsed", ramBytesUsed());
        lst.add("evictionsRamUsage", evictionsRamUsage);
        res.put("cumulative_evictionsRamUsage", stats.evictionsRamUsage.longValue());
       }
    }
    lst.add("warmupTime", warmupTime);
    
    long clookups = stats.lookups.longValue();
    long chits = stats.hits.longValue();
    lst.add("cumulative_lookups", clookups);
    lst.add("cumulative_hits", chits);
    lst.add("cumulative_hitratio", calcHitRatio(clookups, chits));
    lst.add("cumulative_inserts", stats.inserts.longValue());
    lst.add("cumulative_evictions", stats.evictions.longValue());
    if (maxRamBytes != Long.MAX_VALUE)  {
      lst.add("cumulative_evictionsRamUsage", stats.evictionsRamUsage.longValue());
    }
    
    return lst;
    });
    manager.registerGauge(this, registryName, cacheMap, true, scope, getCategory().toString());
  }

  // for unit tests only
  MetricsMap getMetricsMap() {
    return cacheMap;
  }

  @Override
  public MetricRegistry getMetricRegistry() {
    return registry;
   }
 
   @Override
   public String toString() {
    return name() + getStatistics().toString();
    return name() + cacheMap != null ? cacheMap.getValue().toString() : "";
   }
 
   @Override
diff --git a/solr/core/src/java/org/apache/solr/search/QParserPlugin.java b/solr/core/src/java/org/apache/solr/search/QParserPlugin.java
index 34089d201a0..872c618afaa 100644
-- a/solr/core/src/java/org/apache/solr/search/QParserPlugin.java
++ b/solr/core/src/java/org/apache/solr/search/QParserPlugin.java
@@ -16,14 +16,14 @@
  */</comment>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URL</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>SolrParams</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoMBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>request</name><operator>.</operator><name>SolrQueryRequest</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>join</name><operator>.</operator><name>BlockJoinChildQParserPlugin</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>join</name><operator>.</operator><name>BlockJoinParentQParserPlugin</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">31</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">31</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>join</name><operator>.</operator><name>GraphQParserPlugin</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>mlt</name><operator>.</operator><name>MLTQParserPlugin</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>plugin</name><operator>.</operator><name>NamedListInitializedPlugin</name></name>;</import>
 
<class><specifier>public</specifier> <specifier>abstract</specifier> class <name>QParserPlugin</name> <super_list><implements>implements <super><name>NamedListInitializedPlugin</name></super>, <super><name>SolrInfoMBean</name></super></implements></super_list> <block>{
<class><specifier>public</specifier> <specifier>abstract</specifier> class <name>QParserPlugin</name> <super_list><implements>implements <super><name>NamedListInitializedPlugin</name></super>, <super><name>SolrInfoBean</name></super></implements></super_list> <block>{
   <comment type="block" format="javadoc">/** internal use - name of the default parser */</comment>
   <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>DEFAULT_QTYPE</name> <init>= <expr><name><name>LuceneQParserPlugin</name><operator>.</operator><name>NAME</name></name></expr></init></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">98</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">98</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>QParserPlugin</name> implements <name>NamedListInitializedPlugin</name></expr><operator>,</operator> <expr><name>SolrI</name></expr></expr_stmt>
     <return>return <expr><call><name><name>this</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getName</name><argument_list>()</argument_list></call></expr>;</return>
   }</block></class>
 
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>String</name></type> <name>getVersion</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><literal type="null">null</literal></expr>;</return>
  </block_content>}</block></function>

   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>String</name></type> <name>getDescription</name><parameter_list>()</parameter_list> <block>{<block_content>
     <return>return <expr><literal type="string">""</literal></expr>;</return>  <comment type="line">// UI required non-null to work</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">114</literal></expr><operator>,</operator><expr><literal type="number">19</literal> <operator>+</operator><literal type="number">109</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>QParserPlugin</name> implements <name>NamedListInitializedPlugin</name></expr><operator>,</operator> <expr><name>SolrI</name></expr></expr_stmt>
   </block_content>}</block></function>
 
   <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>String</name></type> <name>getSource</name><parameter_list>()</parameter_list> <block>{<block_content>
  <function><type><specifier>public</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>getMetricNames</name><parameter_list>()</parameter_list> <block>{<block_content>
     <return>return <expr><literal type="null">null</literal></expr>;</return>
   </block_content>}</block></function>
 
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name><name>URL</name><index>[]</index></name></type> <name>getDocs</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><operator>new</operator> <name><name>URL</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>NamedList</name></type> <name>getStatistics</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><literal type="null">null</literal></expr>;</return>
  </block_content>}</block></function>
 </block_content>}</block></function>
 
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrCache</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrCache</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9a2d0fc38e4</literal><operator>..</operator><name>caa5c2c3b32</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrCache</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrCache</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@
  <operator>*</operator><operator>/</operator></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name></name>;</package>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoMBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricProducer</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">24</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">25</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 <comment type="block" format="javadoc">/**
  * Primary API for dealing with Solr's internal caches.
  */</comment>
<interface><specifier>public</specifier> interface <name><name>SolrCache</name><parameter_list>&lt;<parameter><name>K</name></parameter>,<parameter><name>V</name></parameter>&gt;</parameter_list></name> <super_list><extends>extends <super><name>SolrInfoMBean</name></super></extends></super_list> <block>{
<interface><specifier>public</specifier> interface <name><name>SolrCache</name><parameter_list>&lt;<parameter><name>K</name></parameter>,<parameter><name>V</name></parameter>&gt;</parameter_list></name> <super_list><extends>extends <super><name>SolrInfoBean</name></super>, <super><name>SolrMetricProducer</name></super></extends></super_list> <block>{
 
   <comment type="block" format="javadoc">/**
    * The initialization routine. Instance specific arguments are passed in
diff --git a/solr/core/src/java/org/apache/solr/search/SolrCacheBase.java b/solr/core/src/java/org/apache/solr/search/SolrCacheBase.java
index 85caa90cfee..c388d548036 100644
-- a/solr/core/src/java/org/apache/solr/search/SolrCacheBase.java
++ b/solr/core/src/java/org/apache/solr/search/SolrCacheBase.java
@@ -18,11 +18,10 @@ package org.apache.solr.search;
 
 import java.math.BigDecimal;
 import java.math.RoundingMode;
import java.net.URL;
 import java.util.Map;
 
 import org.apache.solr.core.SolrCore;
import org.apache.solr.core.SolrInfoMBean.Category;
import org.apache.solr.core.SolrInfoBean.Category;
 import org.apache.solr.search.SolrCache.State;
 
 import static org.apache.solr.common.params.CommonParams.NAME;
@@ -106,10 +105,6 @@ public abstract class SolrCacheBase {
     return Category.CACHE;
   }
 
  public URL[] getDocs() {
    return null;
  }
  
   public void init(Map&lt;String, String&gt; args, CacheRegenerator regenerator) {
     this.regenerator = regenerator;
     state = State.CREATED;
diff --git a/solr/core/src/java/org/apache/solr/search/SolrFieldCacheBean.java b/solr/core/src/java/org/apache/solr/search/SolrFieldCacheBean.java
new file mode 100644
index 00000000000..ffcc37d64cf
-- /dev/null
++ b/solr/core/src/java/org/apache/solr/search/SolrFieldCacheBean.java
@@ -0,0 +1,77 @@
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricRegistry</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricsMap</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricManager</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricProducer</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>uninverting</name><operator>.</operator><name>UninvertingReader</name></name>;</import>

<comment type="block" format="javadoc">/**
 * A SolrInfoBean that provides introspection of the Solr FieldCache
 *
 */</comment>
<class><specifier>public</specifier> class <name>SolrFieldCacheBean</name> <super_list><implements>implements <super><name>SolrInfoBean</name></super>, <super><name>SolrMetricProducer</name></super></implements></super_list> <block>{

  <decl_stmt><decl><type><specifier>private</specifier> <name>boolean</name></type> <name>disableEntryList</name> <init>= <expr><call><name><name>Boolean</name><operator>.</operator><name>getBoolean</name></name><argument_list>(<argument><expr><literal type="string">"disableSolrFieldCacheMBeanEntryList"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>boolean</name></type> <name>disableJmxEntryList</name> <init>= <expr><call><name><name>Boolean</name><operator>.</operator><name>getBoolean</name></name><argument_list>(<argument><expr><literal type="string">"disableSolrFieldCacheMBeanEntryListJmx"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>private</specifier> <name>MetricRegistry</name></type> <name>registry</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>metricNames</name> <init>= <expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>String</name></type> <name>getName</name><parameter_list>()</parameter_list> <block>{<block_content> <return>return <expr><call><name><name>this</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getName</name><argument_list>()</argument_list></call></expr>;</return> </block_content>}</block></function>
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>String</name></type> <name>getDescription</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><literal type="string">"Provides introspection of the Solr FieldCache "</literal></expr>;</return>
  </block_content>}</block></function>
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>Category</name></type> <name>getCategory</name><parameter_list>()</parameter_list> <block>{<block_content> <return>return <expr><name><name>Category</name><operator>.</operator><name>CACHE</name></name></expr>;</return> </block_content>}</block></function>
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>getMetricNames</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>metricNames</name></expr>;</return>
  </block_content>}</block></function>
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>MetricRegistry</name></type> <name>getMetricRegistry</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>registry</name></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>initializeMetrics</name><parameter_list>(<parameter><decl><type><name>SolrMetricManager</name></type> <name>manager</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>registryName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>scope</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name>registry</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>registry</name></name><argument_list>(<argument><expr><name>registryName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>MetricsMap</name></type> <name>metricsMap</name> <init>= <expr><operator>new</operator> <call><name>MetricsMap</name><argument_list>(<argument><expr><lambda><parameter_list>(<parameter><decl><name>detailed</name></decl></parameter>, <parameter><decl><name>map</name></decl></parameter>)</parameter_list> -&gt; <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>detailed</name> <operator>&amp;&amp;</operator> <operator>!</operator><name>disableEntryList</name> <operator>&amp;&amp;</operator> <operator>!</operator><name>disableJmxEntryList</name></expr>)</condition> <block>{<block_content>
        <decl_stmt><decl><type><name><name>UninvertingReader</name><operator>.</operator><name>FieldCacheStats</name></name></type> <name>fieldCacheStats</name> <init>= <expr><call><name><name>UninvertingReader</name><operator>.</operator><name>getUninvertedStats</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>entries</name> <init>= <expr><name><name>fieldCacheStats</name><operator>.</operator><name>info</name></name></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"entries_count"</literal></expr></argument>, <argument><expr><name><name>entries</name><operator>.</operator><name>length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"total_size"</literal></expr></argument>, <argument><expr><name><name>fieldCacheStats</name><operator>.</operator><name>totalSize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>entries</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
          <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>entry</name> <init>= <expr><name><name>entries</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
          <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"entry#"</literal> <operator>+</operator> <name>i</name></expr></argument>, <argument><expr><name>entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"entries_count"</literal></expr></argument>, <argument><expr><call><name><name>UninvertingReader</name><operator>.</operator><name>getUninvertedStatsSize</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></else></if_stmt>
    </block_content>}</block></lambda></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>register</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registryName</name></expr></argument>, <argument><expr><name>metricsMap</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"fieldCache"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>CACHE</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrFieldCacheMBean</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrFieldCacheMBean</name><operator>.</operator><name>java</name></name>
<name>deleted</name> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">642b7087846</literal><operator>..</operator><literal type="number">00000000000</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrFieldCacheMBean</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
@@ <operator>-</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">78</literal> <operator>+</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> @@</expr></expr_stmt>
<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URL</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>SimpleOrderedMap</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>JmxMonitoredMap</name><operator>.</operator><name>JmxAugmentedSolrInfoMBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrCore</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>uninverting</name><operator>.</operator><name>UninvertingReader</name></name>;</import>

<comment type="block" format="javadoc">/**
 * A SolrInfoMBean that provides introspection of the Solr FieldCache
 *
 */</comment>
<class><specifier>public</specifier> class <name>SolrFieldCacheMBean</name> <super_list><implements>implements <super><name>JmxAugmentedSolrInfoMBean</name></super></implements></super_list> <block>{

  <decl_stmt><decl><type><specifier>private</specifier> <name>boolean</name></type> <name>disableEntryList</name> <init>= <expr><call><name><name>Boolean</name><operator>.</operator><name>getBoolean</name></name><argument_list>(<argument><expr><literal type="string">"disableSolrFieldCacheMBeanEntryList"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>boolean</name></type> <name>disableJmxEntryList</name> <init>= <expr><call><name><name>Boolean</name><operator>.</operator><name>getBoolean</name></name><argument_list>(<argument><expr><literal type="string">"disableSolrFieldCacheMBeanEntryListJmx"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>String</name></type> <name>getName</name><parameter_list>()</parameter_list> <block>{<block_content> <return>return <expr><call><name><name>this</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getName</name><argument_list>()</argument_list></call></expr>;</return> </block_content>}</block></function>
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>String</name></type> <name>getVersion</name><parameter_list>()</parameter_list> <block>{<block_content> <return>return <expr><name><name>SolrCore</name><operator>.</operator><name>version</name></name></expr>;</return> </block_content>}</block></function>
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>String</name></type> <name>getDescription</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><literal type="string">"Provides introspection of the Solr FieldCache "</literal></expr>;</return>
  </block_content>}</block></function>
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>Category</name></type> <name>getCategory</name><parameter_list>()</parameter_list> <block>{<block_content> <return>return <expr><name><name>Category</name><operator>.</operator><name>CACHE</name></name></expr>;</return> </block_content>}</block></function> 
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>String</name></type> <name>getSource</name><parameter_list>()</parameter_list> <block>{<block_content> <return>return <expr><literal type="null">null</literal></expr>;</return> </block_content>}</block></function>
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name><name>URL</name><index>[]</index></name></type> <name>getDocs</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><literal type="null">null</literal></expr>;</return>
  </block_content>}</block></function>
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>NamedList</name></type> <name>getStatistics</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>getStats</name><argument_list>(<argument><expr><operator>!</operator><name>disableEntryList</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>NamedList</name></type> <name>getStatisticsForJmx</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>getStats</name><argument_list>(<argument><expr><operator>!</operator><name>disableEntryList</name> <operator>&amp;&amp;</operator> <operator>!</operator><name>disableJmxEntryList</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>private</specifier> <name>NamedList</name></type> <name>getStats</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>listEntries</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>NamedList</name></type> <name>stats</name> <init>= <expr><operator>new</operator> <call><name>SimpleOrderedMap</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>listEntries</name></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name><name>UninvertingReader</name><operator>.</operator><name>FieldCacheStats</name></name></type> <name>fieldCacheStats</name> <init>= <expr><call><name><name>UninvertingReader</name><operator>.</operator><name>getUninvertedStats</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>entries</name> <init>= <expr><name><name>fieldCacheStats</name><operator>.</operator><name>info</name></name></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>stats</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"entries_count"</literal></expr></argument>, <argument><expr><name><name>entries</name><operator>.</operator><name>length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>stats</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"total_size"</literal></expr></argument>, <argument><expr><name><name>fieldCacheStats</name><operator>.</operator><name>totalSize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>entries</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
        <expr_stmt><expr><call><name><name>stats</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"entry#"</literal> <operator>+</operator> <name>i</name></expr></argument>, <argument><expr><name><name>entries</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></for>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <expr_stmt><expr><call><name><name>stats</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"entries_count"</literal></expr></argument>, <argument><expr><call><name><name>UninvertingReader</name><operator>.</operator><name>getUninvertedStatsSize</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <return>return <expr><name>stats</name></expr>;</return>
  </block_content>}</block></function>

}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrIndexSearcher</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrIndexSearcher</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">4207a9b411b</literal><operator>..</operator><literal type="number">9b38225b634</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrIndexSearcher</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>SolrIndexSearcher</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name></name>;</package>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Closeable</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>invoke</name><operator>.</operator><name>MethodHandles</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URL</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Comparator</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Date</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Objects</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">34</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">34</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>TimeUnit</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>atomic</name><operator>.</operator><name>AtomicLong</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>atomic</name><operator>.</operator><name>AtomicReference</name></name>;</import>
 
<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricRegistry</name></name>;</import>
 <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>collect</name><operator>.</operator><name>Iterables</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>DirectoryReader</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">58</literal></expr><operator>,</operator><expr><literal type="number">15</literal> <operator>+</operator><literal type="number">59</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>FixedBitSet</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrException</name><operator>.</operator><name>ErrorCode</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>ModifiableSolrParams</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>ObjectReleaseTracker</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>SimpleOrderedMap</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>DirectoryFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>DirectoryFactory</name><operator>.</operator><name>DirContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrConfig</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrCore</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoMBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>index</name><operator>.</operator><name>SlowCompositeReaderWrapper</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricManager</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricProducer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>request</name><operator>.</operator><name>LocalSolrQueryRequest</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>request</name><operator>.</operator><name>SolrQueryRequest</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>request</name><operator>.</operator><name>SolrRequestInfo</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">86</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">87</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
  <expr_stmt><expr><operator>*</operator>
  <operator>*</operator> @<name>since</name> <name>solr</name> <literal type="number">0.9</literal>
  <operator>*</operator><operator>/</operator>
<specifier>public</specifier> <name>class</name> <name>SolrIndexSearcher</name> extends <name>IndexSearcher</name> implements <name>Closeable</name></expr><operator>,</operator> <expr><name>SolrInfoMBean</name> <block>{
<expr><specifier>public</specifier> <name>class</name> <name>SolrIndexSearcher</name> extends <name>IndexSearcher</name> implements <name>Closeable</name></expr>, <expr><name>SolrInfoBean</name></expr>, <expr><name>SolrMetricProducer</name> <block>{
 
   <expr><specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>Logger</name> <name>log</name> <operator>=</operator> <call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><call><name><name>MethodHandles</name><operator>.</operator><name>lookup</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>lookupClass</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
@@ <operator>-</operator><literal type="number">136</literal>,<literal type="number">7</literal> <operator>+</operator><literal type="number">137</literal>,<literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrIndexSearcher</name> extends <name>IndexSearcher</name> implements <name>Closeable</name>, <name>SolrI</name>
   <specifier>private</specifier> <name>final</name> <name>String</name> <name>path</name></block></expr>;
   <specifier>private</specifier> <name>boolean</name> <name>releaseDirectory</name></block></expr>;</expr_stmt>
 
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>readerStats</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>metricNames</name> <init>= <expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
   <function><type><specifier>private</specifier> <specifier>static</specifier> <name>DirectoryReader</name></type> <name>getReader</name><parameter_list>(<parameter><decl><type><name>SolrCore</name></type> <name>core</name></decl></parameter>, <parameter><decl><type><name>SolrIndexConfig</name></type> <name>config</name></decl></parameter>, <parameter><decl><type><name>DirectoryFactory</name></type> <name>directoryFactory</name></decl></parameter>,
                                            <parameter><decl><type><name>String</name></type> <name>path</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">302</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">303</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrIndexSearcher</name> extends <name>IndexSearcher</name> implements <name>Closeable</name></expr><operator>,</operator> <expr><name>SolrI</name>
     <comment type="line">// We already have our own filter cache</comment>
     <call><name>setQueryCache</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <expr_stmt><expr><name>readerStats</name> <operator>=</operator> <call><name>snapStatistics</name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <comment type="line">// do this at the end since an exception in the constructor means we won't close</comment>
     <expr_stmt><expr><call><name><name>numOpens</name><operator>.</operator><name>incrementAndGet</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <assert>assert <expr><call><name><name>ObjectReleaseTracker</name><operator>.</operator><name>track</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</assert>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">404</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">404</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrIndexSearcher</name> extends <name>IndexSearcher</name> implements <name>Closeable</name></expr><operator>,</operator> <expr><name>SolrI</name></expr></expr_stmt>
   </block_content>}</block></function>
 
   <comment type="block" format="javadoc">/**
   * Register sub-objects such as caches
   * Register sub-objects such as caches and our own metrics
    */</comment>
   <function><type><specifier>public</specifier> <name>void</name></type> <name>register</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>SolrInfoMBean</name></argument>&gt;</argument_list></name></type> <name>infoRegistry</name> <init>= <expr><call><name><name>core</name><operator>.</operator><name>getInfoRegistry</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>SolrInfoBean</name></argument>&gt;</argument_list></name></type> <name>infoRegistry</name> <init>= <expr><call><name><name>core</name><operator>.</operator><name>getInfoRegistry</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <comment type="line">// register self</comment>
     <expr_stmt><expr><call><name><name>infoRegistry</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>STATISTICS_KEY</name></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>infoRegistry</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">415</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">415</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrIndexSearcher</name> extends <name>IndexSearcher</name> implements <name>Closeable</name></expr><operator>,</operator> <expr><name>SolrI</name>
       <call><name><name>cache</name><operator>.</operator><name>setState</name></name><argument_list>(<argument><expr><name><name>SolrCache</name><operator>.</operator><name>State</name><operator>.</operator><name>LIVE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>infoRegistry</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>cache</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>cache</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></function>
    <decl_stmt><decl><type><name>SolrMetricManager</name></type> <name>manager</name> <init>= <expr><call><name><name>core</name><operator>.</operator><name>getCoreDescriptor</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCoreContainer</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getMetricManager</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>registry</name> <init>= <expr><call><name><name>core</name><operator>.</operator><name>getCoreMetricManager</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getRegistryName</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>SolrCache</name></type> <name>cache</name> <range>: <expr><name>cacheList</name></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>cache</name><operator>.</operator><name>initializeMetrics</name></name><argument_list>(<argument><expr><name>manager</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><call><name><name>SolrMetricManager</name><operator>.</operator><name>mkName</name></name><argument_list>(<argument><expr><call><name><name>cache</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STATISTICS_KEY</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <constructor_decl><name>initializeMetrics</name><parameter_list>(<parameter><decl><type><name>manager</name></type></decl></parameter>, <parameter><decl><type><name>registry</name></type></decl></parameter>, <parameter><decl><type><name>STATISTICS_KEY</name></type></decl></parameter>)</parameter_list>;</constructor_decl>
     <expr_stmt><expr><name>registerTime</name> <operator>=</operator> <operator>new</operator> <call><name>Date</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
   }</block></interface>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">2190</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">2196</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrIndexSearcher</name> extends <name>IndexSearcher</name> implements <name>Closeable</name></expr><operator>,</operator> <expr><name>SolrI</name>
 
 
   <comment type="line" format="doxygen">/////////////////////////////////////////////////////////////////////</comment>
  <comment type="line">// SolrInfoMBean stuff: Statistics and Module Info</comment>
  <comment type="line">// SolrInfoBean stuff: Statistics and Module Info</comment>
   <comment type="line" format="doxygen">/////////////////////////////////////////////////////////////////////</comment>
 
   @<name>Override</name>
@@ <operator>-</operator><literal type="number">2198</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">2204</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrIndexSearcher</name> extends <name>IndexSearcher</name> implements <name>Closeable</name></expr><operator>,</operator> <expr><name>SolrI</name></expr></expr_stmt>
     <return>return <expr><call><name><name>SolrIndexSearcher</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr>;</return>
   }</block></interface>
 
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>String</name></type> <name>getVersion</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name><name>SolrCore</name><operator>.</operator><name>version</name></name></expr>;</return>
  </block_content>}</block></function>

   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>String</name></type> <name>getDescription</name><parameter_list>()</parameter_list> <block>{<block_content>
     <return>return <expr><literal type="string">"index searcher"</literal></expr>;</return>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">2214</literal></expr><operator>,</operator><expr><literal type="number">38</literal> <operator>+</operator><literal type="number">2215</literal></expr><operator>,</operator><expr><literal type="number">31</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrIndexSearcher</name> extends <name>IndexSearcher</name> implements <name>Closeable</name></expr><operator>,</operator> <expr><name>SolrI</name></expr></expr_stmt>
   </block_content>}</block></function>
 
   <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>String</name></type> <name>getSource</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><literal type="null">null</literal></expr>;</return>
  <function><type><specifier>public</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>getMetricNames</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>metricNames</name></expr>;</return>
   </block_content>}</block></function>
 
   <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name><name>URL</name><index>[]</index></name></type> <name>getDocs</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><literal type="null">null</literal></expr>;</return>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>initializeMetrics</name><parameter_list>(<parameter><decl><type><name>SolrMetricManager</name></type> <name>manager</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>registry</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>scope</name></decl></parameter>)</parameter_list> <block>{<block_content>

    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><name>name</name></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"searcherName"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>SEARCHER</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><name>cachingEnabled</name></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"caching"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>SEARCHER</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><name>openTime</name></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"openedAt"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>SEARCHER</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><name>warmupTime</name></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"warmupTime"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>SEARCHER</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><name>registerTime</name></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"registeredAt"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>SEARCHER</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="line">// reader stats</comment>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>reader</name><operator>.</operator><name>numDocs</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"numDocs"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>SEARCHER</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>reader</name><operator>.</operator><name>maxDoc</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"maxDoc"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>SEARCHER</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>reader</name><operator>.</operator><name>maxDoc</name></name><argument_list>()</argument_list></call> <operator>-</operator> <call><name><name>reader</name><operator>.</operator><name>numDocs</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"deletedDocs"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>SEARCHER</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>reader</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"reader"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>SEARCHER</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>reader</name><operator>.</operator><name>directory</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"readerDir"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>SEARCHER</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>reader</name><operator>.</operator><name>getVersion</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"indexVersion"</literal></expr></argument>, <argument><expr><call><name><name>Category</name><operator>.</operator><name>SEARCHER</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

   </block_content>}</block></function>
 
   <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>getStatistics</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>lst</name> <init>= <expr><operator>new</operator> <call><name><name>SimpleOrderedMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"searcherName"</literal></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"caching"</literal></expr></argument>, <argument><expr><name>cachingEnabled</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><name>readerStats</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"openedAt"</literal></expr></argument>, <argument><expr><name>openTime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>registerTime</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"registeredAt"</literal></expr></argument>, <argument><expr><name>registerTime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"warmupTime"</literal></expr></argument>, <argument><expr><name>warmupTime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>lst</name></expr>;</return>
  </block_content>}</block></function>

  <function><type><specifier>static</specifier> <specifier>private</specifier> <name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>snapStatistics</name><parameter_list>(<parameter><decl><type><name>DirectoryReader</name></type> <name>reader</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>lst</name> <init>= <expr><operator>new</operator> <call><name><name>SimpleOrderedMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"numDocs"</literal></expr></argument>, <argument><expr><call><name><name>reader</name><operator>.</operator><name>numDocs</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"maxDoc"</literal></expr></argument>, <argument><expr><call><name><name>reader</name><operator>.</operator><name>maxDoc</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"deletedDocs"</literal></expr></argument>, <argument><expr><call><name><name>reader</name><operator>.</operator><name>maxDoc</name></name><argument_list>()</argument_list></call> <operator>-</operator> <call><name><name>reader</name><operator>.</operator><name>numDocs</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"reader"</literal></expr></argument>, <argument><expr><call><name><name>reader</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"readerDir"</literal></expr></argument>, <argument><expr><call><name><name>reader</name><operator>.</operator><name>directory</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"indexVersion"</literal></expr></argument>, <argument><expr><call><name><name>reader</name><operator>.</operator><name>getVersion</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>lst</name></expr>;</return>
  <function><type><specifier>public</specifier> <name>MetricRegistry</name></type> <name>getMetricRegistry</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name><name>core</name><operator>.</operator><name>getMetricRegistry</name></name><argument_list>()</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 
   <class><specifier>private</specifier> <specifier>static</specifier> class <name>FilterImpl</name> <super_list><extends>extends <super><name>Filter</name></super></extends></super_list> <block>{
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>facet</name><operator>/</operator><name><name>FacetModule</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>facet</name><operator>/</operator><name><name>FacetModule</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>bf1379162ef</name><operator>..</operator><literal type="number">3407ae41c1b</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>facet</name><operator>/</operator><name><name>FacetModule</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>facet</name><operator>/</operator><name><name>FacetModule</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">319</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">319</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>FacetModule</name> extends <name>SearchComponent</name> <block>{
   <expr><specifier>public</specifier> <name>Category</name> <call><name>getCategory</name><argument_list>()</argument_list></call> <block>{
     <return>return <expr><name><name>Category</name><operator>.</operator><name>QUERY</name></name></expr>;</return>
   }</block>

  @<name>Override</name>
  <specifier>public</specifier> <name>String</name> <call><name>getSource</name><argument_list>()</argument_list></call> <block>{
    <return>return <expr><literal type="null">null</literal></expr>;</return>
  }</block>

 }
 
 
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>servlet</name><operator>/</operator><name><name>SolrDispatchFilter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>servlet</name><operator>/</operator><name><name>SolrDispatchFilter</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ff0db9b7990</name><operator>..</operator><literal type="number">24bcf3dc38a</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>servlet</name><operator>/</operator><name><name>SolrDispatchFilter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>servlet</name><operator>/</operator><name><name>SolrDispatchFilter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">16</literal></expr>,<expr><literal type="number">6</literal> @@
  <operator>*</operator><operator>/</operator></expr>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>servlet</name></name>;</package></block></expr></expr_stmt>
 
<import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>MBeanServer</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>servlet</name><operator>.</operator><name>FilterChain</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>servlet</name><operator>.</operator><name>FilterConfig</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>servlet</name><operator>.</operator><name>ServletException</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">34</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>OutputStream</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>invoke</name><operator>.</operator><name>MethodHandles</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>management</name><operator>.</operator><name>ManagementFactory</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Paths</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>time</name><operator>.</operator><name>Instant</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">47</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">45</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>atomic</name><operator>.</operator><name>AtomicReference</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>regex</name><operator>.</operator><name>Matcher</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>regex</name><operator>.</operator><name>Pattern</name></name>;</import>
 
<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>jvm</name><operator>.</operator><name>BufferPoolMetricSet</name></name>;</import>
 <import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>jvm</name><operator>.</operator><name>ClassLoadingGaugeSet</name></name>;</import>
 <import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>jvm</name><operator>.</operator><name>GarbageCollectorMetricSet</name></name>;</import>
 <import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>jvm</name><operator>.</operator><name>MemoryUsageGaugeSet</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">66</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">63</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>ExecutorUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>CoreContainer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>NodeConfig</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrCore</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoMBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrResourceLoader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrXmlConfig</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>AltBufferPoolMetricSet</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>OperatingSystemMetricSet</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricManager</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>request</name><operator>.</operator><name>SolrRequestInfo</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">185</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">183</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrDispatchFilter</name> extends <name>BaseSolrFilter</name> <block>{
   }</block>
 
   <specifier>private</specifier> <name>void</name> <call><name>setupJvmMetrics</name><argument_list>()</argument_list></call>  <block>{
    <expr><name>MBeanServer</name> <name>platformMBeanServer</name> <operator>=</operator> <call><name><name>ManagementFactory</name><operator>.</operator><name>getPlatformMBeanServer</name></name><argument_list>()</argument_list></call></expr>;
     <name>SolrMetricManager</name> <name>metricManager</name> <operator>=</operator> <call><name><name>cores</name><operator>.</operator><name>getMetricManager</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>String</name></type> <name>registry</name> <init>= <expr><call><name><name>SolrMetricManager</name><operator>.</operator><name>getRegistryName</name></name><argument_list>(<argument><expr><name><name>SolrInfoMBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>jvm</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>registerAll</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>BufferPoolMetricSet</name><argument_list>(<argument><expr><name>platformMBeanServer</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"buffers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>String</name></type> <name>registry</name> <init>= <expr><call><name><name>SolrMetricManager</name><operator>.</operator><name>getRegistryName</name></name><argument_list>(<argument><expr><name><name>SolrInfoBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>jvm</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>registerAll</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>AltBufferPoolMetricSet</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"buffers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>registerAll</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>ClassLoadingGaugeSet</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"classes"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>registerAll</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>OperatingSystemMetricSet</name><argument_list>(<argument><expr><name>platformMBeanServer</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"os"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>registerAll</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>OperatingSystemMetricSet</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"os"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>registerAll</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>GarbageCollectorMetricSet</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"gc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>registerAll</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>MemoryUsageGaugeSet</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"memory"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>registerAll</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>ThreadStatesGaugeSet</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"threads"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// todo should we use CachedThreadStatesGaugeSet instead?</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>store</name><operator>/</operator><name>blockcache</name><operator>/</operator><name><name>Metrics</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>store</name><operator>/</operator><name>blockcache</name><operator>/</operator><name><name>Metrics</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d3e34979b74</name><operator>..</operator><name>b8b9bea11ab</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>store</name><operator>/</operator><name>blockcache</name><operator>/</operator><name><name>Metrics</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>store</name><operator>/</operator><name>blockcache</name><operator>/</operator><name><name>Metrics</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">20</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">23</literal> @@
  <operator>*</operator><operator>/</operator></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>store</name><operator>.</operator><name>blockcache</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URL</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>atomic</name><operator>.</operator><name>AtomicLong</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>SimpleOrderedMap</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoMBean</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricRegistry</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricsMap</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricManager</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricProducer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>SolrCacheBase</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
 * A {@link SolrInfoMBean} that provides metrics on block cache operations.
 * A {@link SolrInfoBean} that provides metrics on block cache operations.
  *
  * @lucene.experimental
  */</comment>
<class><specifier>public</specifier> class <name>Metrics</name> <super_list><extends>extends <super><name>SolrCacheBase</name></super></extends> <implements>implements <super><name>SolrInfoMBean</name></super></implements></super_list> <block>{
<class><specifier>public</specifier> class <name>Metrics</name> <super_list><extends>extends <super><name>SolrCacheBase</name></super></extends> <implements>implements <super><name>SolrInfoBean</name></super>, <super><name>SolrMetricProducer</name></super></implements></super_list> <block>{
 
 
   <decl_stmt><decl><type><specifier>public</specifier> <name>AtomicLong</name></type> <name>blockCacheSize</name> <init>= <expr><operator>new</operator> <call><name>AtomicLong</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">50</literal></expr><operator>,</operator><expr><literal type="number">66</literal> <operator>+</operator><literal type="number">53</literal></expr><operator>,</operator><expr><literal type="number">70</literal> @@ <specifier>public</specifier> <name>class</name> <name>Metrics</name> extends <name>SolrCacheBase</name> implements <name>SolrInfoMBean</name> <block>{
   <expr><specifier>public</specifier> <name>AtomicLong</name> <name>shardBuffercacheAllocate</name> <operator>=</operator> <operator>new</operator> <call><name>AtomicLong</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;
   <specifier>public</specifier> <name>AtomicLong</name> <name>shardBuffercacheLost</name> <operator>=</operator> <operator>new</operator> <call><name>AtomicLong</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
 
  <decl_stmt><decl><type><specifier>private</specifier> <name>MetricsMap</name></type> <name>metricsMap</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>MetricRegistry</name></type> <name>registry</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>metricNames</name> <init>= <expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
   <decl_stmt><decl><type><specifier>private</specifier> <name>long</name></type> <name>previous</name> <init>= <expr><call><name><name>System</name><operator>.</operator><name>nanoTime</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 

  <function><type><specifier>public</specifier> <name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Number</name></argument>&gt;</argument_list></name></type> <name>getStatistics</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Number</name></argument>&gt;</argument_list></name></type> <name>stats</name> <init>= <expr><operator>new</operator> <call><name><name>SimpleOrderedMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>(<argument><expr><literal type="number">21</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line">// room for one method call before growing</comment>

    <decl_stmt><decl><type><name>long</name></type> <name>now</name> <init>= <expr><call><name><name>System</name><operator>.</operator><name>nanoTime</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name>delta</name> <init>= <expr><call><name><name>Math</name><operator>.</operator><name>max</name></name><argument_list>(<argument><expr><name>now</name> <operator>-</operator> <name>previous</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>double</name></type> <name>seconds</name> <init>= <expr><name>delta</name> <operator>/</operator> <literal type="number">1000000000.0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>long</name></type> <name>hits_total</name> <init>= <expr><call><name><name>blockCacheHit</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name>hits_delta</name> <init>= <expr><name>hits_total</name> <operator>-</operator> <call><name><name>blockCacheHit_last</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>blockCacheHit_last</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>hits_total</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>long</name></type> <name>miss_total</name> <init>= <expr><call><name><name>blockCacheMiss</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name>miss_delta</name> <init>= <expr><name>miss_total</name> <operator>-</operator> <call><name><name>blockCacheMiss_last</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>blockCacheMiss_last</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>miss_total</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>long</name></type> <name>evict_total</name> <init>= <expr><call><name><name>blockCacheEviction</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name>evict_delta</name> <init>= <expr><name>evict_total</name> <operator>-</operator> <call><name><name>blockCacheEviction_last</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>blockCacheEviction_last</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>evict_total</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>long</name></type> <name>storeFail_total</name> <init>= <expr><call><name><name>blockCacheStoreFail</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name>storeFail_delta</name> <init>= <expr><name>storeFail_total</name> <operator>-</operator> <call><name><name>blockCacheStoreFail_last</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>blockCacheStoreFail_last</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>storeFail_total</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>long</name></type> <name>lookups_delta</name> <init>= <expr><name>hits_delta</name> <operator>+</operator> <name>miss_delta</name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name>lookups_total</name> <init>= <expr><name>hits_total</name> <operator>+</operator> <name>miss_total</name></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name><name>stats</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"size"</literal></expr></argument>, <argument><expr><call><name><name>blockCacheSize</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>stats</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"lookups"</literal></expr></argument>, <argument><expr><name>lookups_total</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>stats</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>, <argument><expr><name>hits_total</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>stats</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"evictions"</literal></expr></argument>, <argument><expr><name>evict_total</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>stats</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"storeFails"</literal></expr></argument>, <argument><expr><name>storeFail_total</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>stats</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"hitratio_current"</literal></expr></argument>, <argument><expr><call><name>calcHitRatio</name><argument_list>(<argument><expr><name>lookups_delta</name></expr></argument>, <argument><expr><name>hits_delta</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line">// hit ratio since the last call</comment>
    <expr_stmt><expr><call><name><name>stats</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"lookups_persec"</literal></expr></argument>, <argument><expr><call><name>getPerSecond</name><argument_list>(<argument><expr><name>lookups_delta</name></expr></argument>, <argument><expr><name>seconds</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// lookups per second since the last call</comment>
    <expr_stmt><expr><call><name><name>stats</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"hits_persec"</literal></expr></argument>, <argument><expr><call><name>getPerSecond</name><argument_list>(<argument><expr><name>hits_delta</name></expr></argument>, <argument><expr><name>seconds</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>       <comment type="line">// hits per second since the last call</comment>
    <expr_stmt><expr><call><name><name>stats</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"evictions_persec"</literal></expr></argument>, <argument><expr><call><name>getPerSecond</name><argument_list>(<argument><expr><name>evict_delta</name></expr></argument>, <argument><expr><name>seconds</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line">// evictions per second since the last call</comment>
    <expr_stmt><expr><call><name><name>stats</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"storeFails_persec"</literal></expr></argument>, <argument><expr><call><name>getPerSecond</name><argument_list>(<argument><expr><name>storeFail_delta</name></expr></argument>, <argument><expr><name>seconds</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line">// evictions per second since the last call</comment>
    <expr_stmt><expr><call><name><name>stats</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"time_delta"</literal></expr></argument>, <argument><expr><name>seconds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line">// seconds since last call</comment>

    <comment type="line">// TODO: these aren't really related to the BlockCache</comment>
    <expr_stmt><expr><call><name><name>stats</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"buffercache.allocations"</literal></expr></argument>, <argument><expr><call><name>getPerSecond</name><argument_list>(<argument><expr><call><name><name>shardBuffercacheAllocate</name><operator>.</operator><name>getAndSet</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>seconds</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>stats</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"buffercache.lost"</literal></expr></argument>, <argument><expr><call><name>getPerSecond</name><argument_list>(<argument><expr><call><name><name>shardBuffercacheLost</name><operator>.</operator><name>getAndSet</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>seconds</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>previous</name> <operator>=</operator> <name>now</name></expr>;</expr_stmt>

    <return>return <expr><name>stats</name></expr>;</return>
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>initializeMetrics</name><parameter_list>(<parameter><decl><type><name>SolrMetricManager</name></type> <name>manager</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>registryName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>scope</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name>registry</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>registry</name></name><argument_list>(<argument><expr><name>registryName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>metricsMap</name> <operator>=</operator> <operator>new</operator> <call><name>MetricsMap</name><argument_list>(<argument><expr><lambda><parameter_list>(<parameter><decl><name>detailed</name></decl></parameter>, <parameter><decl><name>map</name></decl></parameter>)</parameter_list> -&gt; <block>{<block_content>
      <decl_stmt><decl><type><name>long</name></type> <name>now</name> <init>= <expr><call><name><name>System</name><operator>.</operator><name>nanoTime</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>long</name></type> <name>delta</name> <init>= <expr><call><name><name>Math</name><operator>.</operator><name>max</name></name><argument_list>(<argument><expr><name>now</name> <operator>-</operator> <name>previous</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>double</name></type> <name>seconds</name> <init>= <expr><name>delta</name> <operator>/</operator> <literal type="number">1000000000.0</literal></expr></init></decl>;</decl_stmt>

      <decl_stmt><decl><type><name>long</name></type> <name>hits_total</name> <init>= <expr><call><name><name>blockCacheHit</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>long</name></type> <name>hits_delta</name> <init>= <expr><name>hits_total</name> <operator>-</operator> <call><name><name>blockCacheHit_last</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>blockCacheHit_last</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>hits_total</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <decl_stmt><decl><type><name>long</name></type> <name>miss_total</name> <init>= <expr><call><name><name>blockCacheMiss</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>long</name></type> <name>miss_delta</name> <init>= <expr><name>miss_total</name> <operator>-</operator> <call><name><name>blockCacheMiss_last</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>blockCacheMiss_last</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>miss_total</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <decl_stmt><decl><type><name>long</name></type> <name>evict_total</name> <init>= <expr><call><name><name>blockCacheEviction</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>long</name></type> <name>evict_delta</name> <init>= <expr><name>evict_total</name> <operator>-</operator> <call><name><name>blockCacheEviction_last</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>blockCacheEviction_last</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>evict_total</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <decl_stmt><decl><type><name>long</name></type> <name>storeFail_total</name> <init>= <expr><call><name><name>blockCacheStoreFail</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>long</name></type> <name>storeFail_delta</name> <init>= <expr><name>storeFail_total</name> <operator>-</operator> <call><name><name>blockCacheStoreFail_last</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>blockCacheStoreFail_last</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>storeFail_total</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <decl_stmt><decl><type><name>long</name></type> <name>lookups_delta</name> <init>= <expr><name>hits_delta</name> <operator>+</operator> <name>miss_delta</name></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>long</name></type> <name>lookups_total</name> <init>= <expr><name>hits_total</name> <operator>+</operator> <name>miss_total</name></expr></init></decl>;</decl_stmt>

      <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"size"</literal></expr></argument>, <argument><expr><call><name><name>blockCacheSize</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"lookups"</literal></expr></argument>, <argument><expr><name>lookups_total</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>, <argument><expr><name>hits_total</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"evictions"</literal></expr></argument>, <argument><expr><name>evict_total</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"storeFails"</literal></expr></argument>, <argument><expr><name>storeFail_total</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"hitratio_current"</literal></expr></argument>, <argument><expr><call><name>calcHitRatio</name><argument_list>(<argument><expr><name>lookups_delta</name></expr></argument>, <argument><expr><name>hits_delta</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line">// hit ratio since the last call</comment>
      <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"lookups_persec"</literal></expr></argument>, <argument><expr><call><name>getPerSecond</name><argument_list>(<argument><expr><name>lookups_delta</name></expr></argument>, <argument><expr><name>seconds</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// lookups per second since the last call</comment>
      <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"hits_persec"</literal></expr></argument>, <argument><expr><call><name>getPerSecond</name><argument_list>(<argument><expr><name>hits_delta</name></expr></argument>, <argument><expr><name>seconds</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>       <comment type="line">// hits per second since the last call</comment>
      <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"evictions_persec"</literal></expr></argument>, <argument><expr><call><name>getPerSecond</name><argument_list>(<argument><expr><name>evict_delta</name></expr></argument>, <argument><expr><name>seconds</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line">// evictions per second since the last call</comment>
      <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"storeFails_persec"</literal></expr></argument>, <argument><expr><call><name>getPerSecond</name><argument_list>(<argument><expr><name>storeFail_delta</name></expr></argument>, <argument><expr><name>seconds</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line">// evictions per second since the last call</comment>
      <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"time_delta"</literal></expr></argument>, <argument><expr><name>seconds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line">// seconds since last call</comment>

      <comment type="line">// TODO: these aren't really related to the BlockCache</comment>
      <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"buffercache.allocations"</literal></expr></argument>, <argument><expr><call><name>getPerSecond</name><argument_list>(<argument><expr><call><name><name>shardBuffercacheAllocate</name><operator>.</operator><name>getAndSet</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>seconds</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"buffercache.lost"</literal></expr></argument>, <argument><expr><call><name>getPerSecond</name><argument_list>(<argument><expr><call><name><name>shardBuffercacheLost</name><operator>.</operator><name>getAndSet</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>seconds</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt><expr><name>previous</name> <operator>=</operator> <name>now</name></expr>;</expr_stmt>

    </block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registryName</name></expr></argument>, <argument><expr><name>metricsMap</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><call><name>getName</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
   <function><type><specifier>private</specifier> <name>float</name></type> <name>getPerSecond</name><parameter_list>(<parameter><decl><type><name>long</name></type> <name>value</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>seconds</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <return>return <expr><operator>(</operator><name>float</name><operator>)</operator> <operator>(</operator><name>value</name> <operator>/</operator> <name>seconds</name><operator>)</operator></expr>;</return>
   </block_content>}</block></function>
 
  <comment type="line">// SolrInfoMBean methods</comment>
  <comment type="line">// SolrInfoBean methods</comment>
 
   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>String</name></type> <name>getName</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><literal type="string">"HdfsBlockCache"</literal></expr>;</return>
    <return>return <expr><literal type="string">"hdfsBlockCache"</literal></expr>;</return>
   </block_content>}</block></function>
 
   <annotation>@<name>Override</name></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">118</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">125</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>Metrics</name> extends <name>SolrCacheBase</name> implements <name>SolrInfoMBean</name> <block>{
   }</block>
 
   @<name>Override</name>
  <specifier>public</specifier> <name>String</name> <call><name>getSource</name><argument_list>()</argument_list></call> <block>{
    <return>return <expr><literal type="null">null</literal></expr>;</return>
  <specifier>public</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name> <call><name>getMetricNames</name><argument_list>()</argument_list></call> <block>{
    <return>return <expr><name>metricNames</name></expr>;</return>
   }</block>
 
   @<name>Override</name>
  <specifier>public</specifier> <name><name>URL</name><index>[]</index></name> <call><name>getDocs</name><argument_list>()</argument_list></call> <block>{
    <return>return <expr><literal type="null">null</literal></expr>;</return>
  <specifier>public</specifier> <name>MetricRegistry</name> <call><name>getMetricRegistry</name><argument_list>()</argument_list></call> <block>{
    <return>return <expr><name>registry</name></expr>;</return>
   }</block>

 }</block>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>store</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsLocalityReporter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>store</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsLocalityReporter</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ba7c7fd1393</name><operator>..</operator><literal type="number">64e6356dcd8</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>store</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsLocalityReporter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>store</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>HdfsLocalityReporter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal>,<literal type="number">8</literal> <operator>+</operator><literal type="number">18</literal>,<literal type="number">8</literal> @@</block></expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>store</name><operator>.</operator><name>hdfs</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>invoke</name><operator>.</operator><name>MethodHandles</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URL</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Iterator</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">16</literal> <operator>+</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>ConcurrentHashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>ConcurrentMap</name></name>;</import>
 
<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricRegistry</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>fs</name><operator>.</operator><name>BlockLocation</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>fs</name><operator>.</operator><name>FileStatus</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>fs</name><operator>.</operator><name>FileSystem</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>SimpleOrderedMap</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoMBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricsMap</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricManager</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricProducer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
 
<class><specifier>public</specifier> class <name>HdfsLocalityReporter</name> <super_list><implements>implements <super><name>SolrInfoMBean</name></super></implements></super_list> <block>{
<class><specifier>public</specifier> class <name>HdfsLocalityReporter</name> <super_list><implements>implements <super><name>SolrInfoBean</name></super>, <super><name>SolrMetricProducer</name></super></implements></super_list> <block>{
   <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>LOCALITY_BYTES_TOTAL</name> <init>= <expr><literal type="string">"locality.bytes.total"</literal></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>LOCALITY_BYTES_LOCAL</name> <init>= <expr><literal type="string">"locality.bytes.local"</literal></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>LOCALITY_BYTES_RATIO</name> <init>= <expr><literal type="string">"locality.bytes.ratio"</literal></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">49</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">51</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>HdfsLocalityReporter</name> implements <name>SolrInfoMBean</name> <block>{
   <expr><specifier>private</specifier> <name>String</name> <name>hostname</name></expr>;
   <specifier>private</specifier> <name>final</name> <name><name>ConcurrentMap</name><argument_list type="generic">&lt;<argument><name>HdfsDirectory</name></argument>,<argument><name><name>ConcurrentMap</name><argument_list type="generic">&lt;<argument><name>FileStatus</name></argument>,<argument><name><name>BlockLocation</name><index>[]</index></name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name> <name>cache</name></block></expr>;</expr_stmt>
 
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>metricNames</name> <init>= <expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>MetricRegistry</name></type> <name>registry</name></decl>;</decl_stmt>

   <constructor><specifier>public</specifier> <name>HdfsLocalityReporter</name><parameter_list>()</parameter_list> <block>{<block_content>
     <expr_stmt><expr><name>cache</name> <operator>=</operator> <operator>new</operator> <call><name><name>ConcurrentHashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></constructor>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">66</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">71</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>HdfsLocalityReporter</name> implements <name>SolrInfoMBean</name> <block>{
     <return>return <expr><literal type="string">"hdfs-locality"</literal></expr>;</return>
   }</block></expr></expr_stmt>
 
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>String</name></type> <name>getVersion</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getPackage</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSpecificationVersion</name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>

   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>String</name></type> <name>getDescription</name><parameter_list>()</parameter_list> <block>{<block_content>
     <return>return <expr><literal type="string">"Provides metrics for HDFS data locality."</literal></expr>;</return>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">82</literal></expr><operator>,</operator><expr><literal type="number">89</literal> <operator>+</operator><literal type="number">82</literal></expr><operator>,</operator><expr><literal type="number">71</literal> @@ <specifier>public</specifier> <name>class</name> <name>HdfsLocalityReporter</name> implements <name>SolrInfoMBean</name> <block>{
   }</block>
 
   @<name>Override</name>
  <specifier>public</specifier> <name>String</name> <call><name>getSource</name><argument_list>()</argument_list></call> <block>{
    <return>return <expr><literal type="null">null</literal></expr>;</return>
  <specifier>public</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name> <call><name>getMetricNames</name><argument_list>()</argument_list></call> <block>{
    <return>return <expr><name>metricNames</name></expr>;</return>
   }</block>
 
   @<name>Override</name>
  <specifier>public</specifier> <name><name>URL</name><index>[]</index></name> <call><name>getDocs</name><argument_list>()</argument_list></call> <block>{
    <return>return <expr><literal type="null">null</literal></expr>;</return>
  <specifier>public</specifier> <name>MetricRegistry</name> <call><name>getMetricRegistry</name><argument_list>()</argument_list></call> <block>{
    <return>return <expr><name>registry</name></expr>;</return>
   }</block>
 
   <comment type="block" format="javadoc">/**
    * Provide statistics on HDFS block locality, both in terms of bytes and block counts.
    */</comment>
   @<name>Override</name>
  <specifier>public</specifier> <name>NamedList</name> <call><name>getStatistics</name><argument_list>()</argument_list></call> <block>{
    <expr><name>long</name> <name>totalBytes</name> <operator>=</operator> <literal type="number">0</literal></expr>;
    <name>long</name> <name>localBytes</name> <operator>=</operator> <literal type="number">0</literal></block></block></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>totalCount</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>localCount</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

    <for>for <control>(<init><decl><type><name><name>Iterator</name><argument_list type="generic">&lt;<argument><name>HdfsDirectory</name></argument>&gt;</argument_list></name></type> <name>iterator</name> <init>= <expr><call><name><name>cache</name><operator>.</operator><name>keySet</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>iterator</name><argument_list>()</argument_list></call></expr></init></decl>;</init> <condition><expr><call><name><name>iterator</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>;</condition><incr/>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>HdfsDirectory</name></type> <name>hdfsDirectory</name> <init>= <expr><call><name><name>iterator</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

      <if_stmt><if>if <condition>(<expr><call><name><name>hdfsDirectory</name><operator>.</operator><name>isClosed</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>iterator</name><operator>.</operator><name>remove</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <try>try <block>{<block_content>
          <expr_stmt><expr><call><name>refreshDirectory</name><argument_list>(<argument><expr><name>hdfsDirectory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>FileStatus</name></argument>,<argument><name><name>BlockLocation</name><index>[]</index></name></argument>&gt;</argument_list></name></type> <name>blockMap</name> <init>= <expr><call><name><name>cache</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>hdfsDirectory</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

          <comment type="line">// For every block in every file in this directory, count it</comment>
          <for>for <control>(<init><decl><type><name><name>BlockLocation</name><index>[]</index></name></type> <name>locations</name> <range>: <expr><call><name><name>blockMap</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
            <for>for <control>(<init><decl><type><name>BlockLocation</name></type> <name>bl</name> <range>: <expr><name>locations</name></expr></range></decl></init>)</control> <block>{<block_content>
              <expr_stmt><expr><name>totalBytes</name> <operator>+=</operator> <call><name><name>bl</name><operator>.</operator><name>getLength</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
              <expr_stmt><expr><name>totalCount</name><operator>++</operator></expr>;</expr_stmt>

              <if_stmt><if>if <condition>(<expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><call><name><name>bl</name><operator>.</operator><name>getHosts</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>contains</name><argument_list>(<argument><expr><name>hostname</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name>localBytes</name> <operator>+=</operator> <call><name><name>bl</name><operator>.</operator><name>getLength</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name>localCount</name><operator>++</operator></expr>;</expr_stmt>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>initializeMetrics</name><parameter_list>(<parameter><decl><type><name>SolrMetricManager</name></type> <name>manager</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>registryName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>scope</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name>registry</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>registry</name></name><argument_list>(<argument><expr><name>registryName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>MetricsMap</name></type> <name>metricsMap</name> <init>= <expr><operator>new</operator> <call><name>MetricsMap</name><argument_list>(<argument><expr><lambda><parameter_list>(<parameter><decl><name>detailed</name></decl></parameter>, <parameter><decl><name>map</name></decl></parameter>)</parameter_list> -&gt; <block>{<block_content>
      <decl_stmt><decl><type><name>long</name></type> <name>totalBytes</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>long</name></type> <name>localBytes</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>int</name></type> <name>totalCount</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>int</name></type> <name>localCount</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

      <for>for <control>(<init><decl><type><name><name>Iterator</name><argument_list type="generic">&lt;<argument><name>HdfsDirectory</name></argument>&gt;</argument_list></name></type> <name>iterator</name> <init>= <expr><call><name><name>cache</name><operator>.</operator><name>keySet</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>iterator</name><argument_list>()</argument_list></call></expr></init></decl>;</init> <condition><expr><call><name><name>iterator</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>;</condition><incr/>)</control> <block>{<block_content>
        <decl_stmt><decl><type><name>HdfsDirectory</name></type> <name>hdfsDirectory</name> <init>= <expr><call><name><name>iterator</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt><if>if <condition>(<expr><call><name><name>hdfsDirectory</name><operator>.</operator><name>isClosed</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>iterator</name><operator>.</operator><name>remove</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <else>else <block>{<block_content>
          <try>try <block>{<block_content>
            <expr_stmt><expr><call><name>refreshDirectory</name><argument_list>(<argument><expr><name>hdfsDirectory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>FileStatus</name></argument>,<argument><name><name>BlockLocation</name><index>[]</index></name></argument>&gt;</argument_list></name></type> <name>blockMap</name> <init>= <expr><call><name><name>cache</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>hdfsDirectory</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <comment type="line">// For every block in every file in this directory, count it</comment>
            <for>for <control>(<init><decl><type><name><name>BlockLocation</name><index>[]</index></name></type> <name>locations</name> <range>: <expr><call><name><name>blockMap</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
              <for>for <control>(<init><decl><type><name>BlockLocation</name></type> <name>bl</name> <range>: <expr><name>locations</name></expr></range></decl></init>)</control> <block>{<block_content>
                <expr_stmt><expr><name>totalBytes</name> <operator>+=</operator> <call><name><name>bl</name><operator>.</operator><name>getLength</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name>totalCount</name><operator>++</operator></expr>;</expr_stmt>

                <if_stmt><if>if <condition>(<expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><call><name><name>bl</name><operator>.</operator><name>getHosts</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>contains</name><argument_list>(<argument><expr><name>hostname</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                  <expr_stmt><expr><name>localBytes</name> <operator>+=</operator> <call><name><name>bl</name><operator>.</operator><name>getLength</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                  <expr_stmt><expr><name>localCount</name><operator>++</operator></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
               </block_content>}</block></for>
             </block_content>}</block></for>
          </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <expr_stmt><expr><call><name><name>logger</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Could not retrieve locality information for {} due to exception: {}"</literal></expr></argument>,
                <argument><expr><call><name><name>hdfsDirectory</name><operator>.</operator><name>getHdfsDirPath</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           </block_content>}</block></catch></try>
        </block_content>}</block></else></if_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
          <expr_stmt><expr><call><name><name>logger</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Could not retrieve locality information for {} due to exception: {}"</literal></expr></argument>,
              <argument><expr><call><name><name>hdfsDirectory</name><operator>.</operator><name>getHdfsDirPath</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></catch>
       </block_content>}</block></for>
    </block_content>}</block></lambda></expr></argument></argument_list></call></expr></init></decl></decl_stmt>

    <return>return <expr><call><name>createStatistics</name><argument_list>(<argument><expr><name>totalBytes</name></expr></argument>, <argument><expr><name>localBytes</name></expr></argument>, <argument><expr><name>totalCount</name></expr></argument>, <argument><expr><name>localCount</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * Generate a statistics object based on the given measurements for all files monitored by this reporter.
   * 
   * @param totalBytes
   *          The total bytes used
   * @param localBytes
   *          The amount of bytes found on local nodes
   * @param totalCount
   *          The total block count
   * @param localCount
   *          The amount of blocks found on local nodes
   * @return HDFS block locality statistics
   */</comment>
  <function><type><specifier>private</specifier> <name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Number</name></argument>&gt;</argument_list></name></type> <name>createStatistics</name><parameter_list>(<parameter><decl><type><name>long</name></type> <name>totalBytes</name></decl></parameter>, <parameter><decl><type><name>long</name></type> <name>localBytes</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>totalCount</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>localCount</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Number</name></argument>&gt;</argument_list></name></type> <name>statistics</name> <init>= <expr><operator>new</operator> <call><name><name>SimpleOrderedMap</name><argument_list type="generic">&lt;<argument><name>Number</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name><name>statistics</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>LOCALITY_BYTES_TOTAL</name></expr></argument>, <argument><expr><name>totalBytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>statistics</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>LOCALITY_BYTES_LOCAL</name></expr></argument>, <argument><expr><name>localBytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>localBytes</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>statistics</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>LOCALITY_BYTES_RATIO</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <expr_stmt><expr><call><name><name>statistics</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>LOCALITY_BYTES_RATIO</name></expr></argument>, <argument><expr><name>localBytes</name> <operator>/</operator> <operator>(</operator><name>double</name><operator>)</operator> <name>totalBytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <expr_stmt><expr><call><name><name>statistics</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>LOCALITY_BLOCKS_TOTAL</name></expr></argument>, <argument><expr><name>totalCount</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>statistics</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>LOCALITY_BLOCKS_LOCAL</name></expr></argument>, <argument><expr><name>localCount</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>localCount</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>statistics</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>LOCALITY_BLOCKS_RATIO</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <expr_stmt><expr><call><name><name>statistics</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>LOCALITY_BLOCKS_RATIO</name></expr></argument>, <argument><expr><name>localCount</name> <operator>/</operator> <operator>(</operator><name>double</name><operator>)</operator> <name>totalCount</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>

    <return>return <expr><name>statistics</name></expr>;</return>
      <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>LOCALITY_BYTES_TOTAL</name></expr></argument>, <argument><expr><name>totalBytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>LOCALITY_BYTES_LOCAL</name></expr></argument>, <argument><expr><name>localBytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><name>localBytes</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>LOCALITY_BYTES_RATIO</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>LOCALITY_BYTES_RATIO</name></expr></argument>, <argument><expr><name>localBytes</name> <operator>/</operator> <operator>(</operator><name>double</name><operator>)</operator> <name>totalBytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></else></if_stmt>
      <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>LOCALITY_BLOCKS_TOTAL</name></expr></argument>, <argument><expr><name>totalCount</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>LOCALITY_BLOCKS_LOCAL</name></expr></argument>, <argument><expr><name>localCount</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><name>localCount</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>LOCALITY_BLOCKS_RATIO</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>LOCALITY_BLOCKS_RATIO</name></expr></argument>, <argument><expr><name>localCount</name> <operator>/</operator> <operator>(</operator><name>double</name><operator>)</operator> <name>totalCount</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></else></if_stmt>
    </block_content>}</block></function>)</block_content></block><empty_stmt>;</empty_stmt></if></if_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registryName</name></expr></argument>, <argument><expr><name>metricsMap</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"hdfsLocality"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></for>
 
   <comment type="block" format="javadoc">/**
@@ -209,4 +191,5 @@ public class HdfsLocalityReporter implements SolrInfoMBean {
       }
     }
   }

 }
diff --git a/solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2.java b/solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2.java
index fdc9d2223ec..4ef91e4af3e 100644
-- a/solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2.java
++ b/solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2.java
@@ -18,7 +18,6 @@ package org.apache.solr.update;
 
 import java.io.IOException;
 import java.lang.invoke.MethodHandles;
import java.net.URL;
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Locale;
@@ -48,8 +47,6 @@ import org.apache.solr.cloud.ZkController;
 import org.apache.solr.common.SolrException;
 import org.apache.solr.common.cloud.DocCollection;
 import org.apache.solr.common.params.ModifiableSolrParams;
import org.apache.solr.common.util.NamedList;
import org.apache.solr.common.util.SimpleOrderedMap;
 import org.apache.solr.core.SolrConfig.UpdateHandlerInfo;
 import org.apache.solr.core.SolrCore;
 import org.apache.solr.metrics.SolrMetricManager;
@@ -162,24 +159,40 @@ public class DirectUpdateHandler2 extends UpdateHandler implements SolrCoreState
 
   @Override
   public void initializeMetrics(SolrMetricManager manager, String registry, String scope) {
    commitCommands = manager.meter(registry, "commits", getCategory().toString(), scope);
    manager.registerGauge(registry, () -&gt; commitTracker.getCommitCount(), true, "autoCommits", getCategory().toString(), scope);
    manager.registerGauge(registry, () -&gt; softCommitTracker.getCommitCount(), true, "softAutoCommits", getCategory().toString(), scope);
    optimizeCommands = manager.meter(registry, "optimizes", getCategory().toString(), scope);
    rollbackCommands = manager.meter(registry, "rollbacks", getCategory().toString(), scope);
    splitCommands = manager.meter(registry, "splits", getCategory().toString(), scope);
    mergeIndexesCommands = manager.meter(registry, "merges", getCategory().toString(), scope);
    expungeDeleteCommands = manager.meter(registry, "expungeDeletes", getCategory().toString(), scope);
    manager.registerGauge(registry, () -&gt; numDocsPending.longValue(), true, "docsPending", getCategory().toString(), scope);
    manager.registerGauge(registry, () -&gt; addCommands.longValue(), true, "adds", getCategory().toString(), scope);
    manager.registerGauge(registry, () -&gt; deleteByIdCommands.longValue(), true, "deletesById", getCategory().toString(), scope);
    manager.registerGauge(registry, () -&gt; deleteByQueryCommands.longValue(), true, "deletesByQuery", getCategory().toString(), scope);
    manager.registerGauge(registry, () -&gt; numErrors.longValue(), true, "errors", getCategory().toString(), scope);

    addCommandsCumulative = manager.meter(registry, "cumulativeAdds", getCategory().toString(), scope);
    deleteByIdCommandsCumulative = manager.meter(registry, "cumulativeDeletesById", getCategory().toString(), scope);
    deleteByQueryCommandsCumulative = manager.meter(registry, "cumulativeDeletesByQuery", getCategory().toString(), scope);
    numErrorsCumulative = manager.meter(registry, "cumulativeErrors", getCategory().toString(), scope);
    commitCommands = manager.meter(this, registry, "commits", getCategory().toString(), scope);
    manager.registerGauge(this, registry, () -&gt; commitTracker.getCommitCount(), true, "autoCommits", getCategory().toString(), scope);
    manager.registerGauge(this, registry, () -&gt; softCommitTracker.getCommitCount(), true, "softAutoCommits", getCategory().toString(), scope);
    if (commitTracker.getDocsUpperBound() &gt; 0) {
      manager.registerGauge(this, registry, () -&gt; commitTracker.getDocsUpperBound(), true, "autoCommitMaxDocs",
          getCategory().toString(), scope);
    }
    if (commitTracker.getTimeUpperBound() &gt; 0) {
      manager.registerGauge(this, registry, () -&gt; "" + commitTracker.getTimeUpperBound() + "ms", true, "autoCommitMaxTime",
          getCategory().toString(), scope);
    }
    if (softCommitTracker.getDocsUpperBound() &gt; 0) {
      manager.registerGauge(this, registry, () -&gt; softCommitTracker.getDocsUpperBound(), true, "softAutoCommitMaxDocs",
          getCategory().toString(), scope);
    }
    if (softCommitTracker.getTimeUpperBound() &gt; 0) {
      manager.registerGauge(this, registry, () -&gt; "" + softCommitTracker.getTimeUpperBound() + "ms", true, "softAutoCommitMaxTime",
          getCategory().toString(), scope);
    }
    optimizeCommands = manager.meter(this, registry, "optimizes", getCategory().toString(), scope);
    rollbackCommands = manager.meter(this, registry, "rollbacks", getCategory().toString(), scope);
    splitCommands = manager.meter(this, registry, "splits", getCategory().toString(), scope);
    mergeIndexesCommands = manager.meter(this, registry, "merges", getCategory().toString(), scope);
    expungeDeleteCommands = manager.meter(this, registry, "expungeDeletes", getCategory().toString(), scope);
    manager.registerGauge(this, registry, () -&gt; numDocsPending.longValue(), true, "docsPending", getCategory().toString(), scope);
    manager.registerGauge(this, registry, () -&gt; addCommands.longValue(), true, "adds", getCategory().toString(), scope);
    manager.registerGauge(this, registry, () -&gt; deleteByIdCommands.longValue(), true, "deletesById", getCategory().toString(), scope);
    manager.registerGauge(this, registry, () -&gt; deleteByQueryCommands.longValue(), true, "deletesByQuery", getCategory().toString(), scope);
    manager.registerGauge(this, registry, () -&gt; numErrors.longValue(), true, "errors", getCategory().toString(), scope);

    addCommandsCumulative = manager.meter(this, registry, "cumulativeAdds", getCategory().toString(), scope);
    deleteByIdCommandsCumulative = manager.meter(this, registry, "cumulativeDeletesById", getCategory().toString(), scope);
    deleteByQueryCommandsCumulative = manager.meter(this, registry, "cumulativeDeletesByQuery", getCategory().toString(), scope);
    numErrorsCumulative = manager.meter(this, registry, "cumulativeErrors", getCategory().toString(), scope);
   }
 
   private void deleteAll() throws IOException {
@@ -951,7 +964,7 @@ public class DirectUpdateHandler2 extends UpdateHandler implements SolrCoreState
 
 
   /////////////////////////////////////////////////////////////////////
  // SolrInfoMBean stuff: Statistics and Module Info
  // SolrInfoBean stuff: Statistics and Module Info
   /////////////////////////////////////////////////////////////////////
 
   @Override
@@ -959,70 +972,11 @@ public class DirectUpdateHandler2 extends UpdateHandler implements SolrCoreState
     return DirectUpdateHandler2.class.getName();
   }
 
  @Override
  public String getVersion() {
    return SolrCore.version;
  }

   @Override
   public String getDescription() {
     return "Update handler that efficiently directly updates the on-disk main lucene index";
   }
 
  @Override
  public String getSource() {
    return null;
  }

  @Override
  public URL[] getDocs() {
    return null;
  }

  @Override
  public NamedList getStatistics() {
    NamedList lst = new SimpleOrderedMap();
    lst.add("commits", commitCommands.getCount());
    if (commitTracker.getDocsUpperBound() &gt; 0) {
      lst.add("autocommit maxDocs", commitTracker.getDocsUpperBound());
    }
    if (commitTracker.getTimeUpperBound() &gt; 0) {
      lst.add("autocommit maxTime", "" + commitTracker.getTimeUpperBound() + "ms");
    }
    lst.add("autocommits", commitTracker.getCommitCount());
    if (softCommitTracker.getDocsUpperBound() &gt; 0) {
      lst.add("soft autocommit maxDocs", softCommitTracker.getDocsUpperBound());
    }
    if (softCommitTracker.getTimeUpperBound() &gt; 0) {
      lst.add("soft autocommit maxTime", "" + softCommitTracker.getTimeUpperBound() + "ms");
    }
    lst.add("soft autocommits", softCommitTracker.getCommitCount());
    lst.add("optimizes", optimizeCommands.getCount());
    lst.add("rollbacks", rollbackCommands.getCount());
    lst.add("expungeDeletes", expungeDeleteCommands.getCount());
    lst.add("docsPending", numDocsPending.longValue());
    // pset.size() not synchronized, but it should be fine to access.
    // lst.add("deletesPending", pset.size());
    lst.add("adds", addCommands.longValue());
    lst.add("deletesById", deleteByIdCommands.longValue());
    lst.add("deletesByQuery", deleteByQueryCommands.longValue());
    lst.add("errors", numErrors.longValue());
    lst.add("cumulative_adds", addCommandsCumulative.getCount());
    lst.add("cumulative_deletesById", deleteByIdCommandsCumulative.getCount());
    lst.add("cumulative_deletesByQuery", deleteByQueryCommandsCumulative.getCount());
    lst.add("cumulative_errors", numErrorsCumulative.getCount());
    if (this.ulog != null) {
      lst.add("transaction_logs_total_size", ulog.getTotalLogsSize());
      lst.add("transaction_logs_total_number", ulog.getTotalLogsNumber());
    }
    return lst;
  }

  @Override
  public String toString() {
    return "DirectUpdateHandler2" + getStatistics();
  }
  
   @Override
   public SolrCoreState getSolrCoreState() {
     return solrCoreState;
diff --git a/solr/core/src/java/org/apache/solr/update/HdfsUpdateLog.java b/solr/core/src/java/org/apache/solr/update/HdfsUpdateLog.java
index 71e20d9f260..7bb74d05bf9 100644
-- a/solr/core/src/java/org/apache/solr/update/HdfsUpdateLog.java
++ b/solr/core/src/java/org/apache/solr/update/HdfsUpdateLog.java
@@ -37,7 +37,7 @@ import org.apache.solr.common.SolrException.ErrorCode;
 import org.apache.solr.common.util.IOUtils;
 import org.apache.solr.core.PluginInfo;
 import org.apache.solr.core.SolrCore;
import org.apache.solr.core.SolrInfoMBean;
import org.apache.solr.core.SolrInfoBean;
 import org.apache.solr.util.HdfsUtil;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -262,7 +262,7 @@ public class HdfsUpdateLog extends UpdateLog {
     }
 
     // initialize metrics
    core.getCoreMetricManager().registerMetricProducer(SolrInfoMBean.Category.TLOG.toString(), this);
    core.getCoreMetricManager().registerMetricProducer(SolrInfoBean.Category.TLOG.toString(), this);
   }
   
   @Override
diff --git a/solr/core/src/java/org/apache/solr/update/PeerSync.java b/solr/core/src/java/org/apache/solr/update/PeerSync.java
index 9470cca41be..f59984449a4 100644
-- a/solr/core/src/java/org/apache/solr/update/PeerSync.java
++ b/solr/core/src/java/org/apache/solr/update/PeerSync.java
@@ -43,7 +43,7 @@ import org.apache.solr.common.params.ModifiableSolrParams;
 import org.apache.solr.common.util.IOUtils;
 import org.apache.solr.common.util.StrUtils;
 import org.apache.solr.core.SolrCore;
import org.apache.solr.core.SolrInfoMBean;
import org.apache.solr.core.SolrInfoBean;
 import org.apache.solr.handler.component.HttpShardHandlerFactory;
 import org.apache.solr.handler.component.ShardHandler;
 import org.apache.solr.handler.component.ShardHandlerFactory;
@@ -160,16 +160,16 @@ public class PeerSync implements SolrMetricProducer {
     shardHandlerFactory = (HttpShardHandlerFactory) core.getCoreDescriptor().getCoreContainer().getShardHandlerFactory();
     shardHandler = shardHandlerFactory.getShardHandler(client);
 
    core.getCoreMetricManager().registerMetricProducer(SolrInfoMBean.Category.REPLICATION.toString(), this);
    core.getCoreMetricManager().registerMetricProducer(SolrInfoBean.Category.REPLICATION.toString(), this);
   }
 
   public static final String METRIC_SCOPE = "peerSync";
 
   @Override
   public void initializeMetrics(SolrMetricManager manager, String registry, String scope) {
    syncTime = manager.timer(registry, "time", scope, METRIC_SCOPE);
    syncErrors = manager.counter(registry, "errors", scope, METRIC_SCOPE);
    syncSkipped = manager.counter(registry, "skipped", scope, METRIC_SCOPE);
    syncTime = manager.timer(null, registry, "time", scope, METRIC_SCOPE);
    syncErrors = manager.counter(null, registry, "errors", scope, METRIC_SCOPE);
    syncSkipped = manager.counter(null, registry, "skipped", scope, METRIC_SCOPE);
   }
 
   /** optional list of updates we had before possibly receiving new updates */</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>SolrIndexWriter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>SolrIndexWriter</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ed856040ec1</name><operator>..</operator><literal type="number">0315b495484</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>SolrIndexWriter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>SolrIndexWriter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>SuppressForbidden</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>DirectoryFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>DirectoryFactory</name><operator>.</operator><name>DirContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrCore</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoMBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricManager</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>schema</name><operator>.</operator><name>IndexSchema</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">151</literal></expr><operator>,</operator><expr><literal type="number">20</literal> <operator>+</operator><literal type="number">151</literal></expr><operator>,</operator><expr><literal type="number">20</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrIndexWriter</name> extends <name>IndexWriter</name> <block>{
       }</block></expr></expr_stmt>
       <if_stmt><if>if <condition>(<expr><name>mergeDetails</name></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><name>mergeTotals</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt> <comment type="line">// override</comment>
        <expr_stmt><expr><name>majorMergedDocs</name> <operator>=</operator> <call><name><name>metricManager</name><operator>.</operator><name>meter</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><literal type="string">"docs"</literal></expr></argument>, <argument><expr><call><name><name>SolrInfoMBean</name><operator>.</operator><name>Category</name><operator>.</operator><name>INDEX</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"merge"</literal></expr></argument>, <argument><expr><literal type="string">"major"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>majorDeletedDocs</name> <operator>=</operator> <call><name><name>metricManager</name><operator>.</operator><name>meter</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><literal type="string">"deletedDocs"</literal></expr></argument>, <argument><expr><call><name><name>SolrInfoMBean</name><operator>.</operator><name>Category</name><operator>.</operator><name>INDEX</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"merge"</literal></expr></argument>, <argument><expr><literal type="string">"major"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>majorMergedDocs</name> <operator>=</operator> <call><name><name>metricManager</name><operator>.</operator><name>meter</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><literal type="string">"docs"</literal></expr></argument>, <argument><expr><call><name><name>SolrInfoBean</name><operator>.</operator><name>Category</name><operator>.</operator><name>INDEX</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"merge"</literal></expr></argument>, <argument><expr><literal type="string">"major"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>majorDeletedDocs</name> <operator>=</operator> <call><name><name>metricManager</name><operator>.</operator><name>meter</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><literal type="string">"deletedDocs"</literal></expr></argument>, <argument><expr><call><name><name>SolrInfoBean</name><operator>.</operator><name>Category</name><operator>.</operator><name>INDEX</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"merge"</literal></expr></argument>, <argument><expr><literal type="string">"major"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if></if_stmt>
       <if_stmt><if>if <condition>(<expr><name>mergeTotals</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>minorMerge</name> <operator>=</operator> <call><name><name>metricManager</name><operator>.</operator><name>timer</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><literal type="string">"minor"</literal></expr></argument>, <argument><expr><call><name><name>SolrInfoMBean</name><operator>.</operator><name>Category</name><operator>.</operator><name>INDEX</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"merge"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>majorMerge</name> <operator>=</operator> <call><name><name>metricManager</name><operator>.</operator><name>timer</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><literal type="string">"major"</literal></expr></argument>, <argument><expr><call><name><name>SolrInfoMBean</name><operator>.</operator><name>Category</name><operator>.</operator><name>INDEX</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"merge"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>mergeErrors</name> <operator>=</operator> <call><name><name>metricManager</name><operator>.</operator><name>counter</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><literal type="string">"errors"</literal></expr></argument>, <argument><expr><call><name><name>SolrInfoMBean</name><operator>.</operator><name>Category</name><operator>.</operator><name>INDEX</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"merge"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>runningMajorMerges</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"running"</literal></expr></argument>, <argument><expr><call><name><name>SolrInfoMBean</name><operator>.</operator><name>Category</name><operator>.</operator><name>INDEX</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"merge"</literal></expr></argument>, <argument><expr><literal type="string">"major"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>runningMinorMerges</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"running"</literal></expr></argument>, <argument><expr><call><name><name>SolrInfoMBean</name><operator>.</operator><name>Category</name><operator>.</operator><name>INDEX</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"merge"</literal></expr></argument>, <argument><expr><literal type="string">"minor"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>runningMajorMergesDocs</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"running.docs"</literal></expr></argument>, <argument><expr><call><name><name>SolrInfoMBean</name><operator>.</operator><name>Category</name><operator>.</operator><name>INDEX</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"merge"</literal></expr></argument>, <argument><expr><literal type="string">"major"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>runningMinorMergesDocs</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"running.docs"</literal></expr></argument>, <argument><expr><call><name><name>SolrInfoMBean</name><operator>.</operator><name>Category</name><operator>.</operator><name>INDEX</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"merge"</literal></expr></argument>, <argument><expr><literal type="string">"minor"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>runningMajorMergesSegments</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"running.segments"</literal></expr></argument>, <argument><expr><call><name><name>SolrInfoMBean</name><operator>.</operator><name>Category</name><operator>.</operator><name>INDEX</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"merge"</literal></expr></argument>, <argument><expr><literal type="string">"major"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>runningMinorMergesSegments</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"running.segments"</literal></expr></argument>, <argument><expr><call><name><name>SolrInfoMBean</name><operator>.</operator><name>Category</name><operator>.</operator><name>INDEX</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"merge"</literal></expr></argument>, <argument><expr><literal type="string">"minor"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>flushMeter</name> <operator>=</operator> <call><name><name>metricManager</name><operator>.</operator><name>meter</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><literal type="string">"flush"</literal></expr></argument>, <argument><expr><call><name><name>SolrInfoMBean</name><operator>.</operator><name>Category</name><operator>.</operator><name>INDEX</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>minorMerge</name> <operator>=</operator> <call><name><name>metricManager</name><operator>.</operator><name>timer</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><literal type="string">"minor"</literal></expr></argument>, <argument><expr><call><name><name>SolrInfoBean</name><operator>.</operator><name>Category</name><operator>.</operator><name>INDEX</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"merge"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>majorMerge</name> <operator>=</operator> <call><name><name>metricManager</name><operator>.</operator><name>timer</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><literal type="string">"major"</literal></expr></argument>, <argument><expr><call><name><name>SolrInfoBean</name><operator>.</operator><name>Category</name><operator>.</operator><name>INDEX</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"merge"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>mergeErrors</name> <operator>=</operator> <call><name><name>metricManager</name><operator>.</operator><name>counter</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><literal type="string">"errors"</literal></expr></argument>, <argument><expr><call><name><name>SolrInfoBean</name><operator>.</operator><name>Category</name><operator>.</operator><name>INDEX</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"merge"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>runningMajorMerges</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"running"</literal></expr></argument>, <argument><expr><call><name><name>SolrInfoBean</name><operator>.</operator><name>Category</name><operator>.</operator><name>INDEX</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"merge"</literal></expr></argument>, <argument><expr><literal type="string">"major"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>runningMinorMerges</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"running"</literal></expr></argument>, <argument><expr><call><name><name>SolrInfoBean</name><operator>.</operator><name>Category</name><operator>.</operator><name>INDEX</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"merge"</literal></expr></argument>, <argument><expr><literal type="string">"minor"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>runningMajorMergesDocs</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"running.docs"</literal></expr></argument>, <argument><expr><call><name><name>SolrInfoBean</name><operator>.</operator><name>Category</name><operator>.</operator><name>INDEX</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"merge"</literal></expr></argument>, <argument><expr><literal type="string">"major"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>runningMinorMergesDocs</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"running.docs"</literal></expr></argument>, <argument><expr><call><name><name>SolrInfoBean</name><operator>.</operator><name>Category</name><operator>.</operator><name>INDEX</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"merge"</literal></expr></argument>, <argument><expr><literal type="string">"minor"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>runningMajorMergesSegments</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"running.segments"</literal></expr></argument>, <argument><expr><call><name><name>SolrInfoBean</name><operator>.</operator><name>Category</name><operator>.</operator><name>INDEX</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"merge"</literal></expr></argument>, <argument><expr><literal type="string">"major"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>runningMinorMergesSegments</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"running.segments"</literal></expr></argument>, <argument><expr><call><name><name>SolrInfoBean</name><operator>.</operator><name>Category</name><operator>.</operator><name>INDEX</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"merge"</literal></expr></argument>, <argument><expr><literal type="string">"minor"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>flushMeter</name> <operator>=</operator> <call><name><name>metricManager</name><operator>.</operator><name>meter</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><literal type="string">"flush"</literal></expr></argument>, <argument><expr><call><name><name>SolrInfoBean</name><operator>.</operator><name>Category</name><operator>.</operator><name>INDEX</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if></if_stmt>
     </block_content>}</block></for>
   </block_content>}</block></try>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>UpdateHandler</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>UpdateHandler</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>cbfb0d5f1fc</name><operator>..</operator><literal type="number">49d2664c649</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>UpdateHandler</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>UpdateHandler</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">17</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>update</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>invoke</name><operator>.</operator><name>MethodHandles</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Vector</name></name>;</import>
 
<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricRegistry</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>DirectoryFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>HdfsDirectoryFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>PluginInfo</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrCore</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrEventListener</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoMBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>schema</name><operator>.</operator><name>FieldType</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>schema</name><operator>.</operator><name>SchemaField</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>plugin</name><operator>.</operator><name>SolrCoreAware</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">41</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">44</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
  <expr_stmt><expr><operator>*</operator> @<name>since</name> <name>solr</name> <literal type="number">0.9</literal>
  <operator>*</operator><operator>/</operator>
 
<specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>UpdateHandler</name> implements <name>SolrInfoMBean</name> <block>{
<expr><specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>UpdateHandler</name> implements <name>SolrInfoBean</name> <block>{
   <expr><specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>Logger</name> <name>log</name> <operator>=</operator> <call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><call><name><name>MethodHandles</name><operator>.</operator><name>lookup</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>lookupClass</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
   <specifier>protected</specifier> <name>final</name> <name>SolrCore</name> <name>core</name></block></expr>;
@@ <operator>-</operator><literal type="number">55</literal>,<literal type="number">6</literal> <operator>+</operator><literal type="number">58</literal>,<literal type="number">9</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>UpdateHandler</name> implements <name>SolrInfoMBean</name> <block>{
 
   <expr><specifier>protected</specifier> <name>final</name> <name>UpdateLog</name> <name>ulog</name></expr>;
 
  <specifier>protected</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name> <name>metricNames</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></block></block></expr>;</expr_stmt>
  <decl_stmt><decl><type><specifier>protected</specifier> <name>MetricRegistry</name></type> <name>registry</name></decl>;</decl_stmt>

   <function><type><specifier>private</specifier> <name>void</name></type> <name>parseEventListeners</name><parameter_list>()</parameter_list> <block>{<block_content>
     <decl_stmt><decl><type><specifier>final</specifier> <name><name>Class</name><argument_list type="generic">&lt;<argument><name>SolrEventListener</name></argument>&gt;</argument_list></name></type> <name>clazz</name> <init>= <expr><name><name>SolrEventListener</name><operator>.</operator><name>class</name></name></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>label</name> <init>= <expr><literal type="string">"Event Listener"</literal></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">221</literal></expr><operator>,</operator><expr><literal type="number">4</literal> <operator>+</operator><literal type="number">227</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>UpdateHandler</name> implements <name>SolrInfoMBean</name> <block>{
   <expr><specifier>public</specifier> <name>Category</name> <call><name>getCategory</name><argument_list>()</argument_list></call> <block>{
     <return>return <expr><name><name>Category</name><operator>.</operator><name>UPDATE</name></name></expr>;</return>
   }</block>
  @<name>Override</name>
  <specifier>public</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name> <call><name>getMetricNames</name><argument_list>()</argument_list></call> <block>{
    <return>return <expr><name>metricNames</name></expr>;</return>
  }</block>
  @<name>Override</name>
  <specifier>public</specifier> <name>MetricRegistry</name> <call><name>getMetricRegistry</name><argument_list>()</argument_list></call> <block>{
    <return>return <expr><name>registry</name></expr>;</return>
  }</block>
 }
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>UpdateLog</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>UpdateLog</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">84a20052b99</literal><operator>..</operator><name>c50add4a45e</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>UpdateLog</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>update</name><operator>/</operator><name><name>UpdateLog</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">57</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">57</literal></expr>,<expr><literal type="number">7</literal> @@</expr> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>ExecutorUtil</name></name>;</import></block></expr></expr_stmt>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>IOUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>PluginInfo</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrCore</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoMBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricManager</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricProducer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>request</name><operator>.</operator><name>LocalSolrQueryRequest</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">403</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">403</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>int</name> <name>VERSION_IDX</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
       </block_content>}</block></function>
 
     </block_content>}</block></else></if_stmt>
    <expr_stmt><expr><call><name><name>core</name><operator>.</operator><name>getCoreMetricManager</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>registerMetricProducer</name><argument_list>(<argument><expr><call><name><name>SolrInfoMBean</name><operator>.</operator><name>Category</name><operator>.</operator><name>TLOG</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>core</name><operator>.</operator><name>getCoreMetricManager</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>registerMetricProducer</name><argument_list>(<argument><expr><call><name><name>SolrInfoBean</name><operator>.</operator><name>Category</name><operator>.</operator><name>TLOG</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></for>
 
   <annotation>@<name>Override</name></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">422</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">422</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <specifier>static</specifier> <name>final</name> <name>int</name> <name>VERSION_IDX</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
       </block_content>}</block></function>
     }</block></class><empty_stmt>;</empty_stmt>
 
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><name>bufferedOpsGauge</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"ops"</literal></expr></argument>, <argument><expr><name>scope</name></expr></argument>, <argument><expr><literal type="string">"buffered"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>logs</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"logs"</literal></expr></argument>, <argument><expr><name>scope</name></expr></argument>, <argument><expr><literal type="string">"replay"</literal></expr></argument>, <argument><expr><literal type="string">"remaining"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name>getTotalLogsSize</name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"bytes"</literal></expr></argument>, <argument><expr><name>scope</name></expr></argument>, <argument><expr><literal type="string">"replay"</literal></expr></argument>, <argument><expr><literal type="string">"remaining"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>applyingBufferedOpsMeter</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>meter</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><literal type="string">"ops"</literal></expr></argument>, <argument><expr><name>scope</name></expr></argument>, <argument><expr><literal type="string">"applyingBuffered"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>replayOpsMeter</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>meter</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><literal type="string">"ops"</literal></expr></argument>, <argument><expr><name>scope</name></expr></argument>, <argument><expr><literal type="string">"replay"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>state</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"state"</literal></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><name>bufferedOpsGauge</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"ops"</literal></expr></argument>, <argument><expr><name>scope</name></expr></argument>, <argument><expr><literal type="string">"buffered"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>logs</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"logs"</literal></expr></argument>, <argument><expr><name>scope</name></expr></argument>, <argument><expr><literal type="string">"replay"</literal></expr></argument>, <argument><expr><literal type="string">"remaining"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name>getTotalLogsSize</name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"bytes"</literal></expr></argument>, <argument><expr><name>scope</name></expr></argument>, <argument><expr><literal type="string">"replay"</literal></expr></argument>, <argument><expr><literal type="string">"remaining"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>applyingBufferedOpsMeter</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>meter</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><literal type="string">"ops"</literal></expr></argument>, <argument><expr><name>scope</name></expr></argument>, <argument><expr><literal type="string">"applyingBuffered"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>replayOpsMeter</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>meter</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><literal type="string">"ops"</literal></expr></argument>, <argument><expr><name>scope</name></expr></argument>, <argument><expr><literal type="string">"replay"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>state</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"state"</literal></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   }</block></class>
 
   <comment type="block" format="javadoc">/**
diff --git a/solr/core/src/java/org/apache/solr/update/UpdateShardHandler.java b/solr/core/src/java/org/apache/solr/update/UpdateShardHandler.java
index 9d4eb7d1eed..ca8cea5a162 100644
-- a/solr/core/src/java/org/apache/solr/update/UpdateShardHandler.java
++ b/solr/core/src/java/org/apache/solr/update/UpdateShardHandler.java
@@ -17,10 +17,11 @@
 package org.apache.solr.update;
 
 import java.lang.invoke.MethodHandles;
import java.net.URL;
import java.util.HashSet;
import java.util.Set;
 import java.util.concurrent.ExecutorService;
 
import com.codahale.metrics.InstrumentedExecutorService;
import com.codahale.metrics.MetricRegistry;
 import org.apache.http.client.HttpClient;
 import org.apache.http.impl.client.CloseableHttpClient;
 import org.apache.http.impl.conn.PoolingHttpClientConnectionManager;
@@ -29,20 +30,20 @@ import org.apache.solr.cloud.RecoveryStrategy;
 import org.apache.solr.common.SolrException;
 import org.apache.solr.common.params.ModifiableSolrParams;
 import org.apache.solr.common.util.ExecutorUtil;
import org.apache.solr.common.util.NamedList;
 import org.apache.solr.common.util.SolrjNamedThreadFactory;
import org.apache.solr.core.SolrInfoMBean;
import org.apache.solr.core.SolrInfoBean;
 import org.apache.solr.metrics.SolrMetricManager;
 import org.apache.solr.metrics.SolrMetricProducer;
 import org.apache.solr.util.stats.HttpClientMetricNameStrategy;
 import org.apache.solr.util.stats.InstrumentedHttpRequestExecutor;
 import org.apache.solr.util.stats.InstrumentedPoolingHttpClientConnectionManager;
import org.apache.solr.util.stats.MetricUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
 import static org.apache.solr.util.stats.InstrumentedHttpRequestExecutor.KNOWN_METRIC_NAME_STRATEGIES;
 
public class UpdateShardHandler implements SolrMetricProducer, SolrInfoMBean {
public class UpdateShardHandler implements SolrMetricProducer, SolrInfoBean {
   
   private static final Logger log = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());
 
@@ -65,6 +66,9 @@ public class UpdateShardHandler implements SolrMetricProducer, SolrInfoMBean {
 
   private final InstrumentedHttpRequestExecutor httpRequestExecutor;
 
  private final Set&lt;String&gt; metricNames = new HashSet&lt;&gt;();
  private MetricRegistry registry;

   public UpdateShardHandler(UpdateShardHandlerConfig cfg) {
     clientConnectionManager = new InstrumentedPoolingHttpClientConnectionManager(HttpClientUtil.getSchemaRegisteryProvider().getSchemaRegistry());
     if (cfg != null ) {
@@ -104,20 +108,14 @@ public class UpdateShardHandler implements SolrMetricProducer, SolrInfoMBean {
   }
 
   @Override
  public String getVersion() {
    return getClass().getPackage().getSpecificationVersion();
  }

  @Override
  public void initializeMetrics(SolrMetricManager manager, String registry, String scope) {
  public void initializeMetrics(SolrMetricManager manager, String registryName, String scope) {
    registry = manager.registry(registryName);
     String expandedScope = SolrMetricManager.mkName(scope, getCategory().name());
    clientConnectionManager.initializeMetrics(manager, registry, expandedScope);
    httpRequestExecutor.initializeMetrics(manager, registry, expandedScope);
    updateExecutor = new InstrumentedExecutorService(updateExecutor,
        manager.registry(registry),
    clientConnectionManager.initializeMetrics(manager, registryName, expandedScope);
    httpRequestExecutor.initializeMetrics(manager, registryName, expandedScope);
    updateExecutor = MetricUtils.instrumentedExecutorService(updateExecutor, this, registry,
         SolrMetricManager.mkName("updateExecutor", expandedScope, "threadPool"));
    recoveryExecutor = new InstrumentedExecutorService(recoveryExecutor,
        manager.registry(registry),
    recoveryExecutor = MetricUtils.instrumentedExecutorService(recoveryExecutor, this, registry,
         SolrMetricManager.mkName("recoveryExecutor", expandedScope, "threadPool"));
   }
 
@@ -132,18 +130,13 @@ public class UpdateShardHandler implements SolrMetricProducer, SolrInfoMBean {
   }
 
   @Override
  public String getSource() {
    return null;
  }

  @Override
  public URL[] getDocs() {
    return new URL[0];
  public Set&lt;String&gt; getMetricNames() {
    return metricNames;
   }
 
   @Override
  public NamedList getStatistics() {
    return null;
  public MetricRegistry getMetricRegistry() {
    return registry;
   }
 
   public HttpClient getHttpClient() {
diff --git a/solr/core/src/java/org/apache/solr/util/JmxUtil.java b/solr/core/src/java/org/apache/solr/util/JmxUtil.java
index 02a070d9691..f27a55e7efc 100644
-- a/solr/core/src/java/org/apache/solr/util/JmxUtil.java
++ b/solr/core/src/java/org/apache/solr/util/JmxUtil.java
@@ -27,9 +27,6 @@ import java.util.List;
 
 /**
  * Utility methods to find a MBeanServer.
 *
 * This was factored out from {@link org.apache.solr.core.JmxMonitoredMap}
 * and can eventually replace the logic used there.
  */</comment>
 <class><specifier>public</specifier> <specifier>final</specifier> class <name>JmxUtil</name> <block>{
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>util</name><operator>/</operator><name>stats</name><operator>/</operator><name><name>InstrumentedPoolingHttpClientConnectionManager</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>util</name><operator>/</operator><name>stats</name><operator>/</operator><name><name>InstrumentedPoolingHttpClientConnectionManager</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7bcabf8c255</literal><operator>..</operator><literal type="number">58ec69e0c9b</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>util</name><operator>/</operator><name>stats</name><operator>/</operator><name><name>InstrumentedPoolingHttpClientConnectionManager</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>util</name><operator>/</operator><name>stats</name><operator>/</operator><name><name>InstrumentedPoolingHttpClientConnectionManager</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">35</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">35</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>InstrumentedPoolingHttpClientConnectionManager</name> extends <name>PoolingHttpC</name>
 
   @<name>Override</name>
   <specifier>public</specifier> <name>void</name> <call><name>initializeMetrics</name><argument_list>(<argument><expr><name>SolrMetricManager</name> <name>manager</name></expr></argument>, <argument><expr><name>String</name> <name>registry</name></expr></argument>, <argument><expr><name>String</name> <name>scope</name></expr></argument>)</argument_list></call> <block>{
    <expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name>getTotalStats</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAvailable</name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><call><name><name>SolrMetricManager</name><operator>.</operator><name>mkName</name></name><argument_list>(<argument><expr><literal type="string">"availableConnections"</literal></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
    <call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name>getTotalStats</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAvailable</name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><call><name><name>SolrMetricManager</name><operator>.</operator><name>mkName</name></name><argument_list>(<argument><expr><literal type="string">"availableConnections"</literal></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <comment type="line">// this acquires a lock on the connection pool; remove if contention sucks</comment>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name>getTotalStats</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getLeased</name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><call><name><name>SolrMetricManager</name><operator>.</operator><name>mkName</name></name><argument_list>(<argument><expr><literal type="string">"leasedConnections"</literal></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name>getTotalStats</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getMax</name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><call><name><name>SolrMetricManager</name><operator>.</operator><name>mkName</name></name><argument_list>(<argument><expr><literal type="string">"maxConnections"</literal></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name>getTotalStats</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getPending</name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><call><name><name>SolrMetricManager</name><operator>.</operator><name>mkName</name></name><argument_list>(<argument><expr><literal type="string">"pendingConnections"</literal></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name>getTotalStats</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getLeased</name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><call><name><name>SolrMetricManager</name><operator>.</operator><name>mkName</name></name><argument_list>(<argument><expr><literal type="string">"leasedConnections"</literal></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name>getTotalStats</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getMax</name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><call><name><name>SolrMetricManager</name><operator>.</operator><name>mkName</name></name><argument_list>(<argument><expr><literal type="string">"maxConnections"</literal></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name>getTotalStats</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getPending</name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><call><name><name>SolrMetricManager</name><operator>.</operator><name>mkName</name></name><argument_list>(<argument><expr><literal type="string">"pendingConnections"</literal></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   }</block></class>
 </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>util</name><operator>/</operator><name>stats</name><operator>/</operator><name><name>MetricUtils</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>util</name><operator>/</operator><name>stats</name><operator>/</operator><name><name>MetricUtils</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">491932d1a8d</literal><operator>..</operator><literal type="number">2900857a912</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>util</name><operator>/</operator><name>stats</name><operator>/</operator><name><name>MetricUtils</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>util</name><operator>/</operator><name>stats</name><operator>/</operator><name><name>MetricUtils</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">17</literal> @@
  <operator>*</operator><operator>/</operator></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>stats</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>beans</name><operator>.</operator><name>BeanInfo</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>beans</name><operator>.</operator><name>IntrospectionException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>beans</name><operator>.</operator><name>Introspector</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>beans</name><operator>.</operator><name>PropertyDescriptor</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>invoke</name><operator>.</operator><name>MethodHandles</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>management</name><operator>.</operator><name>OperatingSystemMXBean</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>management</name><operator>.</operator><name>PlatformManagedObject</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>reflect</name><operator>.</operator><name>InvocationTargetException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>LinkedHashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>LinkedList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>SortedSet</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">40</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">48</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>Timer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrInputDocument</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>SimpleOrderedMap</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>AggregateMetric</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">116</literal></expr><operator>,</operator><expr><literal type="number">59</literal> <operator>+</operator><literal type="number">125</literal></expr><operator>,</operator><expr><literal type="number">42</literal> @@ <specifier>public</specifier> <name>class</name> <name>MetricUtils</name> <block>{
    <expr><operator>*</operator>                        <name>A</name> <name><name>metric</name> <argument_list type="generic">&lt;<argument><name>em</name></argument>&gt;</argument_list></name><name><name>must</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>em</name></argument>&gt;</argument_list></name> <name>match</name> <name>this</name> <name>filter</name> <name>to</name> <name>be</name> <name>included</name> <name>in</name> <name>the</name> <name><name>output</name><operator>.</operator></name>
    * @<name>param</name> <name>skipHistograms</name> <name>discard</name> <name>any</name> <block>{@<expr><name>link</name> <name>Histogram</name></expr>}</block><operator>-</operator><name>s</name> <name>and</name> <name>histogram</name> <name>parts</name> <name>of</name> <block>{@<expr><name>link</name> <name>Timer</name></expr>}</block><operator>-</operator><name><name>s</name><operator>.</operator></name>
    * @<name>param</name> <name>compact</name> <name>use</name> <name>compact</name> <name>representation</name></expr> <for>for counters and gauges.
   * @param metadata optional metadata. If not null and not empty then this map will be added under a
   *                 <block>{<block_content><annotation>@<name>code</name></annotation> <expr><name>_metadata_</name></expr></block_content>}</block></for> <name><name>key</name><operator>.</operator></name>
    * @</block></expr></expr_stmt><return>return <expr><name>a</name> <block>{@<expr><name>link</name> <name>NamedList</name></expr>}</block>
    <operator>*</operator><operator>/</operator>
   <specifier>public</specifier> <specifier>static</specifier> <name>NamedList</name> <call><name>toNamedList</name><argument_list>(<argument><expr><name>MetricRegistry</name> <name>registry</name></expr></argument>, <argument><expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>MetricFilter</name></argument>&gt;</argument_list></name> <name>shouldMatchFilters</name></expr></argument>,
                                       <argument><expr><name>MetricFilter</name> <name>mustMatchFilter</name></expr></argument>, <argument><expr><name>boolean</name> <name>skipHistograms</name></expr></argument>,
                                      <argument><expr><name>boolean</name> <name>skipAggregateValues</name></expr></argument>, <argument><expr><name>boolean</name> <name>compact</name></expr></argument>,
                                      <argument><expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name> <name>metadata</name></expr></argument>)</argument_list></call> <block>{
                                      <expr><name>boolean</name> <name>skipAggregateValues</name></expr>, <expr><name>boolean</name> <name>compact</name></expr>) <block>{
     <expr><name>NamedList</name> <name>result</name> <operator>=</operator> <operator>new</operator> <call><name>SimpleOrderedMap</name><argument_list>()</argument_list></call></expr>;
    <call><name>toMaps</name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><name>shouldMatchFilters</name></expr></argument>, <argument><expr><name>mustMatchFilter</name></expr></argument>, <argument><expr><name>skipHistograms</name></expr></argument>, <argument><expr><name>skipAggregateValues</name></expr></argument>, <argument><expr><name>compact</name></expr></argument>, <argument><expr><lambda><parameter_list>(<parameter><decl><name>k</name></decl></parameter>, <parameter><decl><name>v</name></decl></parameter>)</parameter_list> -&gt; <block>{<block_content>
    <expr_stmt><expr><call><name>toMaps</name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><name>shouldMatchFilters</name></expr></argument>, <argument><expr><name>mustMatchFilter</name></expr></argument>, <argument><expr><name>skipHistograms</name></expr></argument>, <argument><expr><name>skipAggregateValues</name></expr></argument>, <argument><expr><name>compact</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><lambda><parameter_list>(<parameter><decl><name>k</name></decl></parameter>, <parameter><decl><name>v</name></decl></parameter>)</parameter_list> -&gt; <block>{<block_content>
       <expr_stmt><expr><call><name><name>result</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>k</name></expr></argument>, <argument><expr><name>v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>metadata</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>metadata</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>result</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"_metadata_"</literal></expr></argument>, <argument><expr><name>metadata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
     <return>return <expr><name>result</name></expr>;</return>
   </block_content>}</block></lambda>
 
   <comment type="block" format="javadoc">/**
   * Returns a representation of the given metric registry as a list of {@link SolrInputDocument}-s.
   * Provides a representation of the given metric registry as {@link SolrInputDocument}-s.
    Only those metrics
   * are converted to NamedList which match at least one of the given MetricFilter instances.
   * are converted which match at least one of the given MetricFilter instances.
    *
   * @param registry      the {@link MetricRegistry} to be converted to NamedList
   * @param registry      the {@link MetricRegistry} to be converted
    * @param shouldMatchFilters a list of {@link MetricFilter} instances.
    *                           A metric must match &lt;em&gt;any one&lt;/em&gt; of the filters from this list to be
    *                           included in the output
    * @param mustMatchFilter a {@link MetricFilter}.
    *                        A metric &lt;em&gt;must&lt;/em&gt; match this filter to be included in the output.
    * @param skipHistograms discard any {@link Histogram}-s and histogram parts of {@link Timer}-s.
   * @param skipAggregateValues discard internal values of {@link AggregateMetric}-s.
    * @param compact use compact representation for counters and gauges.
    * @param metadata optional metadata. If not null and not empty then this map will be added under a
    *                 {@code _metadata_} key.
   * @return a list of {@link SolrInputDocument}-s
   * @param consumer consumer that accepts produced {@link SolrInputDocument}-s
    */</comment>
  <specifier>public</specifier> <specifier>static</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>SolrInputDocument</name></argument>&gt;</argument_list></name> <call><name>toSolrInputDocuments</name><argument_list>(<argument><expr><name>MetricRegistry</name> <name>registry</name></expr></argument>, <argument><expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>MetricFilter</name></argument>&gt;</argument_list></name> <name>shouldMatchFilters</name></expr></argument>,
                                                             <argument><expr><name>MetricFilter</name> <name>mustMatchFilter</name></expr></argument>, <argument><expr><name>boolean</name> <name>skipHistograms</name></expr></argument>,
                                                             <argument><expr><name>boolean</name> <name>skipAggregateValues</name></expr></argument>, <argument><expr><name>boolean</name> <name>compact</name></expr></argument>,
                                                             <argument><expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name> <name>metadata</name></expr></argument>)</argument_list></call> <block>{
    <expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>SolrInputDocument</name></argument>&gt;</argument_list></name> <name>result</name> <operator>=</operator> <operator>new</operator> <call><name><name>LinkedList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
    <call><name>toSolrInputDocuments</name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><name>shouldMatchFilters</name></expr></argument>, <argument><expr><name>mustMatchFilter</name></expr></argument>, <argument><expr><name>skipHistograms</name></expr></argument>,
        <argument><expr><name>skipAggregateValues</name></expr></argument>, <argument><expr><name>compact</name></expr></argument>, <argument><expr><name>metadata</name></expr></argument>, <argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>doc</name></decl></parameter></parameter_list> -&gt; <block>{<block_content>
      <expr_stmt><expr><call><name><name>result</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></lambda></expr></argument>)</argument_list></call></block></expr></argument>;</argument_list></call></block></block></expr></return>
    <return>return <expr><name>result</name></expr>;</return>
  }</block></class>

   <function><type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>toSolrInputDocuments</name><parameter_list>(<parameter><decl><type><name>MetricRegistry</name></type> <name>registry</name></decl></parameter>, <parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>MetricFilter</name></argument>&gt;</argument_list></name></type> <name>shouldMatchFilters</name></decl></parameter>,
                                           <parameter><decl><type><name>MetricFilter</name></type> <name>mustMatchFilter</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>skipHistograms</name></decl></parameter>,
                                           <parameter><decl><type><name>boolean</name></type> <name>skipAggregateValues</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>compact</name></decl></parameter>,
                                           <parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>metadata</name></decl></parameter>, <parameter><decl><type><name><name>Consumer</name><argument_list type="generic">&lt;<argument><name>SolrInputDocument</name></argument>&gt;</argument_list></name></type> <name>consumer</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <decl_stmt><decl><type><name>boolean</name></type> <name>addMetadata</name> <init>= <expr><name>metadata</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>metadata</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>toMaps</name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><name>shouldMatchFilters</name></expr></argument>, <argument><expr><name>mustMatchFilter</name></expr></argument>, <argument><expr><name>skipHistograms</name></expr></argument>, <argument><expr><name>skipAggregateValues</name></expr></argument>, <argument><expr><name>compact</name></expr></argument>, <argument><expr><lambda><parameter_list>(<parameter><decl><name>k</name></decl></parameter>, <parameter><decl><name>v</name></decl></parameter>)</parameter_list> -&gt; <block>{<block_content>
    <expr_stmt><expr><call><name>toMaps</name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><name>shouldMatchFilters</name></expr></argument>, <argument><expr><name>mustMatchFilter</name></expr></argument>, <argument><expr><name>skipHistograms</name></expr></argument>, <argument><expr><name>skipAggregateValues</name></expr></argument>, <argument><expr><name>compact</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><lambda><parameter_list>(<parameter><decl><name>k</name></decl></parameter>, <parameter><decl><name>v</name></decl></parameter>)</parameter_list> -&gt; <block>{<block_content>
       <decl_stmt><decl><type><name>SolrInputDocument</name></type> <name>doc</name> <init>= <expr><operator>new</operator> <call><name>SolrInputDocument</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>doc</name><operator>.</operator><name>setField</name></name><argument_list>(<argument><expr><name>METRIC_NAME</name></expr></argument>, <argument><expr><name>k</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>toSolrInputDocument</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>doc</name></expr></argument>, <argument><expr><name>v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">179</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">171</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> class <name>MetricUtils</name> <block>{<block_content>
     </block_content>}</block></expr></expr_stmt><expr_stmt><expr/></expr_stmt></block_content></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></lambda>
 
  <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>toSolrInputDocument</name><argument_list>(<argument><expr><name>String</name> <name>prefix</name></expr></argument>, <argument><expr><name>SolrInputDocument</name> <name>doc</name></expr></argument>, <argument><expr><name>Object</name> <name>o</name></expr></argument>)</argument_list></call> <block>{
  <comment type="block" format="javadoc">/**
   * Fill in a SolrInputDocument with values from a converted metric, recursively.
   * @param prefix prefix to add to generated field names, or null if none.
   * @param doc document to fill
   * @param o an instance of converted metric, either a Map or a flat Object
   */</comment>
  <expr><specifier>static</specifier> <name>void</name> <call><name>toSolrInputDocument</name><argument_list>(<argument><expr><name>String</name> <name>prefix</name></expr></argument>, <argument><expr><name>SolrInputDocument</name> <name>doc</name></expr></argument>, <argument><expr><name>Object</name> <name>o</name></expr></argument>)</argument_list></call> <block>{
     <if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>o</name> <operator>instanceof</operator> <name>Map</name><operator>)</operator></expr>)</condition> <block>{<block_content>
       <decl_stmt><decl><type><name>String</name></type> <name>key</name> <init>= <expr><ternary><condition><expr><name>prefix</name> <operator>!=</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><name>prefix</name></expr> </then><else>: <expr><name>VALUE</name></expr></else></ternary></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>doc</name><operator>.</operator><name>addField</name></name><argument_list>(<argument><expr><name>key</name></expr></argument>, <argument><expr><name>o</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">196</literal></expr><operator>,</operator><expr><literal type="number">77</literal> <operator>+</operator><literal type="number">194</literal></expr><operator>,</operator><expr><literal type="number">170</literal> @@ <specifier>public</specifier> class <name>MetricUtils</name> <block>{
     }</block></expr></expr_stmt>
   }</block_content>
 
  public static void toMaps(MetricRegistry registry</block><operator>,</operator> <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>MetricFilter</name></argument>&gt;</argument_list></name></type> <name>shouldMatchFilters</name></decl>,
  <comment type="block" format="javadoc">/**
   * Convert selected metrics to maps or to flattened objects.
   * @param registry source of metrics
   * @param shouldMatchFilters metrics must match any of these filters
   * @param mustMatchFilter metrics must match this filter
   * @param skipHistograms discard any {@link Histogram}-s and histogram parts of {@link Timer}-s.
   * @param skipAggregateValues discard internal values of {@link AggregateMetric}-s.
   * @param compact use compact representation for counters and gauges.
   * @param simple use simplified representation for complex metrics - instead of a (name, map)
   *             only the selected (name "." key, value) pairs will be produced.
   * @param consumer consumer that accepts produced objects
   */</comment>
  static <decl><type ref="prev"/><name>void</name> <name>toMaps</name><argument_list>(<argument><expr><name>MetricRegistry</name> <name>registry</name></expr></argument>, <argument><expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>MetricFilter</name></argument>&gt;</argument_list></name> <name>shouldMatchFilters</name></expr></argument>,
                             <argument><expr><name>MetricFilter</name> <name>mustMatchFilter</name></expr></argument>, <argument><expr><name>boolean</name> <name>skipHistograms</name></expr></argument>, <argument><expr><name>boolean</name> <name>skipAggregateValues</name></expr></argument>,
                            <argument><expr><name>boolean</name> <name>compact</name></expr></argument>,
                            <argument><expr><name>boolean</name> <name>compact</name></expr></argument>, <argument><expr><name>boolean</name> <name>simple</name></expr></argument>,
                             <argument><expr><name><name>BiConsumer</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name> <name>consumer</name></expr></argument>)</argument_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Metric</name></argument>&gt;</argument_list></name></type> <name>metrics</name> <init>= <expr><call><name><name>registry</name><operator>.</operator><name>getMetrics</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>SortedSet</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>names</name> <init>= <expr><call><name><name>registry</name><operator>.</operator><name>getNames</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Metric</name></argument>&gt;</argument_list></name></type> <name>metrics</name> <init>= <expr><call><name><name>registry</name><operator>.</operator><name>getMetrics</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>SortedSet</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>names</name> <init>= <expr><call><name><name>registry</name><operator>.</operator><name>getNames</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>names</name><operator>.</operator><name>stream</name></name><argument_list>()</argument_list></call>
         <operator>.</operator><call><name>filter</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>s</name></decl></parameter></parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>shouldMatchFilters</name><operator>.</operator><name>stream</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>anyMatch</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>metricFilter</name></decl></parameter></parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>metricFilter</name><operator>.</operator><name>matches</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><call><name><name>metrics</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block_content></block></lambda></expr></argument>)</argument_list></call></expr></block_content></block></lambda></expr></argument>)</argument_list></call>
         <operator>.</operator><call><name>filter</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>s</name></decl></parameter></parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>mustMatchFilter</name><operator>.</operator><name>matches</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><call><name><name>metrics</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block_content></block></lambda></expr></argument>)</argument_list></call>
         <operator>.</operator><call><name>forEach</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>n</name></decl></parameter></parameter_list> -&gt; <block>{
           <expr><name>Metric</name> <name>metric</name> <operator>=</operator> <call><name><name>metrics</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>n</name></expr></argument>)</argument_list></call></expr></block></lambda></expr></argument>;</argument_list></call></expr></expr_stmt>
          <if_stmt><if>if <condition>(<expr><name>metric</name> <operator>instanceof</operator> <name>Counter</name></expr>)</condition> <block>{<block_content>
            <decl_stmt><decl><type><name>Counter</name></type> <name>counter</name> <init>= <expr><operator>(</operator><name>Counter</name><operator>)</operator> <name>metric</name></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>consumer</name><operator>.</operator><name>accept</name></name><argument_list>(<argument><expr><name>n</name></expr></argument>, <argument><expr><call><name>convertCounter</name><argument_list>(<argument><expr><name>counter</name></expr></argument>, <argument><expr><name>compact</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt/>}</block_content> else if (metric instanceof Gauge</block></if></if_stmt>)</block_content> <block>{<block_content>
            <decl_stmt><decl><type><name>Gauge</name></type> <name>gauge</name> <init>= <expr><operator>(</operator><name>Gauge</name><operator>)</operator> <name>metric</name></expr></init></decl>;</decl_stmt>
            <try>try <block>{<block_content>
              <expr_stmt><expr><call><name><name>consumer</name><operator>.</operator><name>accept</name></name><argument_list>(<argument><expr><name>n</name></expr></argument>, <argument><expr><call><name>convertGauge</name><argument_list>(<argument><expr><name>gauge</name></expr></argument>, <argument><expr><name>compact</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt/>}</block_content> catch (InternalError ie</block></try>)</block_content> <block>{<block_content>
              <if_stmt><if>if <condition>(<expr><call><name><name>n</name><operator>.</operator><name>startsWith</name></name><argument_list>(<argument><expr><literal type="string">"memory."</literal></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <call><name><name>ie</name><operator>.</operator><name>getMessage</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>contains</name><argument_list>(<argument><expr><literal type="string">"Memory Pool not found"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Error converting gauge '"</literal> <operator>+</operator> <name>n</name> <operator>+</operator> <literal type="string">"', possible JDK bug: SOLR-10362"</literal></expr></argument>, <argument><expr><name>ie</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>consumer</name><operator>.</operator><name>accept</name></name><argument_list>(<argument><expr><name>n</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
              <expr_stmt/>}</block_content> else <block>{<block_content>
                <throw>throw <expr><name>ie</name></expr>;</throw>
              <expr_stmt/>}</block_content>
            }
          } else if (metric instanceof Meter</block></block></if></if_stmt>)</block_content> <block>{<block_content>
            <decl_stmt><decl><type><name>Meter</name></type> <name>meter</name> <init>= <expr><operator>(</operator><name>Meter</name><operator>)</operator> <name>metric</name></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>consumer</name><operator>.</operator><name>accept</name></name><argument_list>(<argument><expr><name>n</name></expr></argument>, <argument><expr><call><name>convertMeter</name><argument_list>(<argument><expr><name>meter</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt/>}</block_content> else if (metric instanceof Timer</block></block></block></block></decl>) <block>{<block_content>
            <decl_stmt><decl><type><name>Timer</name></type> <name>timer</name> <init>= <expr><operator>(</operator><name>Timer</name><operator>)</operator> <name>metric</name></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>consumer</name><operator>.</operator><name>accept</name></name><argument_list>(<argument><expr><name>n</name></expr></argument>, <argument><expr><call><name>convertTimer</name><argument_list>(<argument><expr><name>timer</name></expr></argument>, <argument><expr><name>skipHistograms</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt/>}</block_content> else if (metric instanceof Histogram</block></decl_stmt></if></if_stmt>)</block> <block>{
            <if_stmt><if>if <condition>(<expr><operator>!</operator><name>skipHistograms</name></expr>)</condition> <block>{<block_content>
              <decl_stmt><decl><type><name>Histogram</name></type> <name>histogram</name> <init>= <expr><operator>(</operator><name>Histogram</name><operator>)</operator> <name>metric</name></expr></init></decl>;</decl_stmt>
              <expr_stmt><expr><call><name><name>consumer</name><operator>.</operator><name>accept</name></name><argument_list>(<argument><expr><name>n</name></expr></argument>, <argument><expr><call><name>convertHistogram</name><argument_list>(<argument><expr><name>histogram</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt/>}</block_content>
          } else if (metric instanceof AggregateMetric</block></if></if_stmt>)</block> <block>{
            <expr><call><name><name>consumer</name><operator>.</operator><name>accept</name></name><argument_list>(<argument><expr><name>n</name></expr></argument>, <argument><expr><call><name>convertAggregateMetric</name><argument_list>(<argument><expr><operator>(</operator><name>AggregateMetric</name><operator>)</operator><name>metric</name></expr></argument>, <argument><expr><name>skipAggregateValues</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
          }</block>
          <call><name>convertMetric</name><argument_list>(<argument><expr><name>n</name></expr></argument>, <argument><expr><name>metric</name></expr></argument>, <argument><expr><name>skipHistograms</name></expr></argument>, <argument><expr><name>skipAggregateValues</name></expr></argument>, <argument><expr><name>compact</name></expr></argument>, <argument><expr><name>simple</name></expr></argument>, <argument><expr><name>consumer</name></expr></argument>)</argument_list></call></expr>;
         }</block></expr></argument></argument_list></call></expr></expr_stmt>)</block_content></block>;</function>
   }</block></class>
 
  <function><type><specifier>static</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>convertAggregateMetric</name><parameter_list>(<parameter><decl><type><name>AggregateMetric</name></type> <name>metric</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>skipAggregateValues</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>response</name> <init>= <expr><operator>new</operator> <call><name><name>LinkedHashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"count"</literal></expr></argument>, <argument><expr><call><name><name>metric</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>MAX</name></expr></argument>, <argument><expr><call><name><name>metric</name><operator>.</operator><name>getMax</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>MIN</name></expr></argument>, <argument><expr><call><name><name>metric</name><operator>.</operator><name>getMin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>MEAN</name></expr></argument>, <argument><expr><call><name><name>metric</name><operator>.</operator><name>getMean</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>STDDEV</name></expr></argument>, <argument><expr><call><name><name>metric</name><operator>.</operator><name>getStdDev</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>SUM</name></expr></argument>, <argument><expr><call><name><name>metric</name><operator>.</operator><name>getSum</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><call><name><name>metric</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call> <operator>||</operator> <name>skipAggregateValues</name><operator>)</operator></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>values</name> <init>= <expr><operator>new</operator> <call><name><name>LinkedHashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>VALUES</name></expr></argument>, <argument><expr><name>values</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>metric</name><operator>.</operator><name>getValues</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>forEach</name><argument_list>(<argument><expr><lambda><parameter_list>(<parameter><decl><name>k</name></decl></parameter>, <parameter><decl><name>v</name></decl></parameter>)</parameter_list> -&gt; <block>{<block_content>
        <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>map</name> <init>= <expr><operator>new</operator> <call><name><name>LinkedHashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"value"</literal></expr></argument>, <argument><expr><name><name>v</name><operator>.</operator><name>value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"updateCount"</literal></expr></argument>, <argument><expr><call><name><name>v</name><operator>.</operator><name>updateCount</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>values</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>k</name></expr></argument>, <argument><expr><name>map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <comment type="block" format="javadoc">/**
   * Convert selected metrics from a registry into a map, with metrics in a compact AND simple format.
   * @param registry registry
   * @param names metric names
   * @return map where keys are metric names (if they were present in the registry) and values are
   * converted metrics in simplified format.
   */</comment>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>convertMetrics</name><parameter_list>(<parameter><decl><type><name>MetricRegistry</name></type> <name>registry</name></decl></parameter>, <parameter><decl><type><name><name>Collection</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>names</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>metrics</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>convertMetrics</name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><name>names</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><lambda><parameter_list>(<parameter><decl><name>k</name></decl></parameter>, <parameter><decl><name>v</name></decl></parameter>)</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>metrics</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>k</name></expr></argument>, <argument><expr><name>v</name></expr></argument>)</argument_list></call></expr></block_content></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>metrics</name></expr>;</return>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * Convert selected metrics from a registry into maps (when &lt;code&gt;compact==false&lt;/code&gt;) or
   * flattened objects.
   * @param registry registry
   * @param names metric names
   * @param skipHistograms discard any {@link Histogram}-s and histogram parts of {@link Timer}-s.
   * @param skipAggregateValues discard internal values of {@link AggregateMetric}-s.
   * @param compact use compact representation for counters and gauges.
   * @param simple use simplified representation for complex metrics - instead of a (name, map)
   *             only the selected (name "." key, value) pairs will be produced.
   * @param consumer consumer that accepts produced objects
   */</comment>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>convertMetrics</name><parameter_list>(<parameter><decl><type><name>MetricRegistry</name></type> <name>registry</name></decl></parameter>, <parameter><decl><type><name><name>Collection</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>names</name></decl></parameter>,
                                    <parameter><decl><type><name>boolean</name></type> <name>skipHistograms</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>skipAggregateValues</name></decl></parameter>,
                                    <parameter><decl><type><name>boolean</name></type> <name>compact</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>simple</name></decl></parameter>,
                                    <parameter><decl><type><name><name>BiConsumer</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>consumer</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Metric</name></argument>&gt;</argument_list></name></type> <name>metrics</name> <init>= <expr><call><name><name>registry</name><operator>.</operator><name>getMetrics</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>names</name><operator>.</operator><name>stream</name></name><argument_list>()</argument_list></call>
        <operator>.</operator><call><name>forEach</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>n</name></decl></parameter></parameter_list> -&gt; <block>{<block_content>
          <decl_stmt><decl><type><name>Metric</name></type> <name>metric</name> <init>= <expr><call><name><name>metrics</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>n</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <expr_stmt><expr><call><name>convertMetric</name><argument_list>(<argument><expr><name>n</name></expr></argument>, <argument><expr><name>metric</name></expr></argument>, <argument><expr><name>skipHistograms</name></expr></argument>, <argument><expr><name>skipAggregateValues</name></expr></argument>, <argument><expr><name>compact</name></expr></argument>, <argument><expr><name>simple</name></expr></argument>, <argument><expr><name>consumer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * Convert a single instance of metric into a map or flattened object.
   * @param n metric name
   * @param metric metric instance
   * @param skipHistograms discard any {@link Histogram}-s and histogram parts of {@link Timer}-s.
   * @param skipAggregateValues discard internal values of {@link AggregateMetric}-s.
   * @param compact use compact representation for counters and gauges.
   * @param simple use simplified representation for complex metrics - instead of a (name, map)
   *             only the selected (name "." key, value) pairs will be produced.
   * @param consumer consumer that accepts produced objects
   */</comment>
  <function><type><specifier>static</specifier> <name>void</name></type> <name>convertMetric</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>n</name></decl></parameter>, <parameter><decl><type><name>Metric</name></type> <name>metric</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>skipHistograms</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>skipAggregateValues</name></decl></parameter>,
                              <parameter><decl><type><name>boolean</name></type> <name>compact</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>simple</name></decl></parameter>, <parameter><decl><type><name><name>BiConsumer</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>consumer</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>metric</name> <operator>instanceof</operator> <name>Counter</name></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>Counter</name></type> <name>counter</name> <init>= <expr><operator>(</operator><name>Counter</name><operator>)</operator> <name>metric</name></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>consumer</name><operator>.</operator><name>accept</name></name><argument_list>(<argument><expr><name>n</name></expr></argument>, <argument><expr><call><name>convertCounter</name><argument_list>(<argument><expr><name>counter</name></expr></argument>, <argument><expr><name>compact</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>metric</name> <operator>instanceof</operator> <name>Gauge</name></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>Gauge</name></type> <name>gauge</name> <init>= <expr><operator>(</operator><name>Gauge</name><operator>)</operator> <name>metric</name></expr></init></decl>;</decl_stmt>
      <try>try <block>{<block_content>
        <expr_stmt><expr><call><name>convertGauge</name><argument_list>(<argument><expr><name>n</name></expr></argument>, <argument><expr><name>gauge</name></expr></argument>, <argument><expr><name>simple</name></expr></argument>, <argument><expr><name>compact</name></expr></argument>, <argument><expr><name>consumer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>InternalError</name></type> <name>ie</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name><name>n</name><operator>.</operator><name>startsWith</name></name><argument_list>(<argument><expr><literal type="string">"memory."</literal></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <call><name><name>ie</name><operator>.</operator><name>getMessage</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>contains</name><argument_list>(<argument><expr><literal type="string">"Memory Pool not found"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Error converting gauge '"</literal> <operator>+</operator> <name>n</name> <operator>+</operator> <literal type="string">"', possible JDK bug: SOLR-10362"</literal></expr></argument>, <argument><expr><name>ie</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>consumer</name><operator>.</operator><name>accept</name></name><argument_list>(<argument><expr><name>n</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <else>else <block>{<block_content>
          <throw>throw <expr><name>ie</name></expr>;</throw>
        </block_content>}</block></else></if_stmt>
      </block_content>}</block></catch></try>
    </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>metric</name> <operator>instanceof</operator> <name>Meter</name></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>Meter</name></type> <name>meter</name> <init>= <expr><operator>(</operator><name>Meter</name><operator>)</operator> <name>metric</name></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name>convertMeter</name><argument_list>(<argument><expr><name>n</name></expr></argument>, <argument><expr><name>meter</name></expr></argument>, <argument><expr><name>simple</name></expr></argument>, <argument><expr><name>consumer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>metric</name> <operator>instanceof</operator> <name>Timer</name></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>Timer</name></type> <name>timer</name> <init>= <expr><operator>(</operator><name>Timer</name><operator>)</operator> <name>metric</name></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name>convertTimer</name><argument_list>(<argument><expr><name>n</name></expr></argument>, <argument><expr><name>timer</name></expr></argument>, <argument><expr><name>skipHistograms</name></expr></argument>, <argument><expr><name>simple</name></expr></argument>, <argument><expr><name>consumer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>metric</name> <operator>instanceof</operator> <name>Histogram</name></expr>)</condition> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><operator>!</operator><name>skipHistograms</name></expr>)</condition> <block>{<block_content>
        <decl_stmt><decl><type><name>Histogram</name></type> <name>histogram</name> <init>= <expr><operator>(</operator><name>Histogram</name><operator>)</operator> <name>metric</name></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>convertHistogram</name><argument_list>(<argument><expr><name>n</name></expr></argument>, <argument><expr><name>histogram</name></expr></argument>, <argument><expr><name>simple</name></expr></argument>, <argument><expr><name>consumer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>metric</name> <operator>instanceof</operator> <name>AggregateMetric</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name>convertAggregateMetric</name><argument_list>(<argument><expr><name>n</name></expr></argument>, <argument><expr><operator>(</operator><name>AggregateMetric</name><operator>)</operator><name>metric</name></expr></argument>, <argument><expr><name>skipAggregateValues</name></expr></argument>, <argument><expr><name>simple</name></expr></argument>, <argument><expr><name>consumer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></if></if_stmt>
    <return>return <expr><name>response</name></expr>;</return>
   </block_content>}</block></function>
 
  <function><type><specifier>static</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>convertHistogram</name><parameter_list>(<parameter><decl><type><name>Histogram</name></type> <name>histogram</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>response</name> <init>= <expr><operator>new</operator> <call><name><name>LinkedHashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <comment type="block" format="javadoc">/**
   * Convert an instance of {@link AggregateMetric}.
   * @param name metric name
   * @param metric an instance of {@link AggregateMetric}
   * @param skipAggregateValues discard internal values of {@link AggregateMetric}-s.
   * @param simple use simplified representation for complex metrics - instead of a (name, map)
   *             only the selected (name "." key, value) pairs will be produced.
   * @param consumer consumer that accepts produced objects
   */</comment>
  <function><type><specifier>static</specifier> <name>void</name></type> <name>convertAggregateMetric</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>name</name></decl></parameter>, <parameter><decl><type><name>AggregateMetric</name></type> <name>metric</name></decl></parameter>,
      <parameter><decl><type><name>boolean</name></type> <name>skipAggregateValues</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>simple</name></decl></parameter>, <parameter><decl><type><name><name>BiConsumer</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>consumer</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>simple</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>consumer</name><operator>.</operator><name>accept</name></name><argument_list>(<argument><expr><name>name</name> <operator>+</operator> <literal type="string">"."</literal> <operator>+</operator> <name>MEAN</name></expr></argument>, <argument><expr><call><name><name>metric</name><operator>.</operator><name>getMean</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>response</name> <init>= <expr><operator>new</operator> <call><name><name>LinkedHashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"count"</literal></expr></argument>, <argument><expr><call><name><name>metric</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>MAX</name></expr></argument>, <argument><expr><call><name><name>metric</name><operator>.</operator><name>getMax</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>MIN</name></expr></argument>, <argument><expr><call><name><name>metric</name><operator>.</operator><name>getMin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>MEAN</name></expr></argument>, <argument><expr><call><name><name>metric</name><operator>.</operator><name>getMean</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>STDDEV</name></expr></argument>, <argument><expr><call><name><name>metric</name><operator>.</operator><name>getStdDev</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>SUM</name></expr></argument>, <argument><expr><call><name><name>metric</name><operator>.</operator><name>getSum</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><call><name><name>metric</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call> <operator>||</operator> <name>skipAggregateValues</name><operator>)</operator></expr>)</condition> <block>{<block_content>
        <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>values</name> <init>= <expr><operator>new</operator> <call><name><name>LinkedHashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>VALUES</name></expr></argument>, <argument><expr><name>values</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>metric</name><operator>.</operator><name>getValues</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>forEach</name><argument_list>(<argument><expr><lambda><parameter_list>(<parameter><decl><name>k</name></decl></parameter>, <parameter><decl><name>v</name></decl></parameter>)</parameter_list> -&gt; <block>{<block_content>
          <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>map</name> <init>= <expr><operator>new</operator> <call><name><name>LinkedHashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
          <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"value"</literal></expr></argument>, <argument><expr><name><name>v</name><operator>.</operator><name>value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"updateCount"</literal></expr></argument>, <argument><expr><call><name><name>v</name><operator>.</operator><name>updateCount</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>values</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>k</name></expr></argument>, <argument><expr><name>map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
      <expr_stmt><expr><call><name><name>consumer</name><operator>.</operator><name>accept</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><name>response</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
  </block_content>}</block></function>

  <comment type="block" format="javadoc">/**
   * Convert an instance of {@link Histogram}. NOTE: it's assumed that histogram contains non-time
   * based values that don't require unit conversion.
   * @param name metric name
   * @param histogram an instance of {@link Histogram}
   * @param simple use simplified representation for complex metrics - instead of a (name, map)
   *             only the selected (name "." key, value) pairs will be produced.
   * @param consumer consumer that accepts produced objects
   */</comment>
  <function><type><specifier>static</specifier> <name>void</name></type> <name>convertHistogram</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>name</name></decl></parameter>, <parameter><decl><type><name>Histogram</name></type> <name>histogram</name></decl></parameter>,
                                              <parameter><decl><type><name>boolean</name></type> <name>simple</name></decl></parameter>, <parameter><decl><type><name><name>BiConsumer</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>consumer</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <decl_stmt><decl><type><name>Snapshot</name></type> <name>snapshot</name> <init>= <expr><call><name><name>histogram</name><operator>.</operator><name>getSnapshot</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"count"</literal></expr></argument>, <argument><expr><call><name><name>histogram</name><operator>.</operator><name>getCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="line">// non-time based values</comment>
    <expr_stmt><expr><call><name>addSnapshot</name><argument_list>(<argument><expr><name>response</name></expr></argument>, <argument><expr><name>snapshot</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>response</name></expr>;</return>
    <if_stmt><if>if <condition>(<expr><name>simple</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>consumer</name><operator>.</operator><name>accept</name></name><argument_list>(<argument><expr><name>name</name> <operator>+</operator> <literal type="string">"."</literal> <operator>+</operator> <name>MEAN</name></expr></argument>, <argument><expr><call><name><name>snapshot</name><operator>.</operator><name>getMean</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>response</name> <init>= <expr><operator>new</operator> <call><name><name>LinkedHashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"count"</literal></expr></argument>, <argument><expr><call><name><name>histogram</name><operator>.</operator><name>getCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <comment type="line">// non-time based values</comment>
      <expr_stmt><expr><call><name>addSnapshot</name><argument_list>(<argument><expr><name>response</name></expr></argument>, <argument><expr><name>snapshot</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>consumer</name><operator>.</operator><name>accept</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><name>response</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
   </block_content>}</block></function>
 
   <comment type="line">// optionally convert ns to ms</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">291</literal></expr><operator>,</operator><expr><literal type="number">40</literal> <operator>+</operator><literal type="number">382</literal></expr><operator>,</operator><expr><literal type="number">91</literal> @@ <specifier>public</specifier> <name>class</name> <name>MetricUtils</name> <block>{
     <expr><call><name><name>response</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><operator>(</operator><name>ms</name> <operator>?</operator> <name>P999_MS</name><operator>:</operator> <name>P999</name><operator>)</operator></expr></argument>, <argument><expr><call><name>nsToMs</name><argument_list>(<argument><expr><name>ms</name></expr></argument>, <argument><expr><call><name><name>snapshot</name><operator>.</operator><name>get999thPercentile</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
   }</block></expr></expr_stmt>
 
  <function><type><specifier>static</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>convertTimer</name><parameter_list>(<parameter><decl><type><name>Timer</name></type> <name>timer</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>skipHistograms</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>response</name> <init>= <expr><operator>new</operator> <call><name><name>LinkedHashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"count"</literal></expr></argument>, <argument><expr><call><name><name>timer</name><operator>.</operator><name>getCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"meanRate"</literal></expr></argument>, <argument><expr><call><name><name>timer</name><operator>.</operator><name>getMeanRate</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"1minRate"</literal></expr></argument>, <argument><expr><call><name><name>timer</name><operator>.</operator><name>getOneMinuteRate</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"5minRate"</literal></expr></argument>, <argument><expr><call><name><name>timer</name><operator>.</operator><name>getFiveMinuteRate</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"15minRate"</literal></expr></argument>, <argument><expr><call><name><name>timer</name><operator>.</operator><name>getFifteenMinuteRate</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><name>skipHistograms</name></expr>)</condition> <block>{<block_content>
      <comment type="line">// time-based values in nanoseconds</comment>
      <expr_stmt><expr><call><name>addSnapshot</name><argument_list>(<argument><expr><name>response</name></expr></argument>, <argument><expr><call><name><name>timer</name><operator>.</operator><name>getSnapshot</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <comment type="block" format="javadoc">/**
   * Convert a {@link Timer} to a map.
   * @param name metric name
   * @param timer timer instance
   * @param skipHistograms if true then discard the histogram part of the timer.
   * @param simple use simplified representation for complex metrics - instead of a (name, map)
   *             only the selected (name "." key, value) pairs will be produced.
   * @param consumer consumer that accepts produced objects
   */</comment>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>convertTimer</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>name</name></decl></parameter>, <parameter><decl><type><name>Timer</name></type> <name>timer</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>skipHistograms</name></decl></parameter>,
                                                <parameter><decl><type><name>boolean</name></type> <name>simple</name></decl></parameter>, <parameter><decl><type><name><name>BiConsumer</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>consumer</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>simple</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>consumer</name><operator>.</operator><name>accept</name></name><argument_list>(<argument><expr><name>name</name> <operator>+</operator> <literal type="string">".meanRate"</literal></expr></argument>, <argument><expr><call><name><name>timer</name><operator>.</operator><name>getMeanRate</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>response</name> <init>= <expr><operator>new</operator> <call><name><name>LinkedHashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"count"</literal></expr></argument>, <argument><expr><call><name><name>timer</name><operator>.</operator><name>getCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"meanRate"</literal></expr></argument>, <argument><expr><call><name><name>timer</name><operator>.</operator><name>getMeanRate</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"1minRate"</literal></expr></argument>, <argument><expr><call><name><name>timer</name><operator>.</operator><name>getOneMinuteRate</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"5minRate"</literal></expr></argument>, <argument><expr><call><name><name>timer</name><operator>.</operator><name>getFiveMinuteRate</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"15minRate"</literal></expr></argument>, <argument><expr><call><name><name>timer</name><operator>.</operator><name>getFifteenMinuteRate</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><operator>!</operator><name>skipHistograms</name></expr>)</condition> <block>{<block_content>
        <comment type="line">// time-based values in nanoseconds</comment>
        <expr_stmt><expr><call><name>addSnapshot</name><argument_list>(<argument><expr><name>response</name></expr></argument>, <argument><expr><call><name><name>timer</name><operator>.</operator><name>getSnapshot</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
      <expr_stmt><expr><call><name><name>consumer</name><operator>.</operator><name>accept</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><name>response</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></else></if_stmt>
    <return>return <expr><name>response</name></expr>;</return>
   </block_content>}</block></function>
 
  <function><type><specifier>static</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>convertMeter</name><parameter_list>(<parameter><decl><type><name>Meter</name></type> <name>meter</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>response</name> <init>= <expr><operator>new</operator> <call><name><name>LinkedHashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"count"</literal></expr></argument>, <argument><expr><call><name><name>meter</name><operator>.</operator><name>getCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"meanRate"</literal></expr></argument>, <argument><expr><call><name><name>meter</name><operator>.</operator><name>getMeanRate</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"1minRate"</literal></expr></argument>, <argument><expr><call><name><name>meter</name><operator>.</operator><name>getOneMinuteRate</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"5minRate"</literal></expr></argument>, <argument><expr><call><name><name>meter</name><operator>.</operator><name>getFiveMinuteRate</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"15minRate"</literal></expr></argument>, <argument><expr><call><name><name>meter</name><operator>.</operator><name>getFifteenMinuteRate</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>response</name></expr>;</return>
  <comment type="block" format="javadoc">/**
   * Convert a {@link Meter} to a map.
   * @param name metric name
   * @param meter meter instance
   * @param simple use simplified representation for complex metrics - instead of a (name, map)
   *             only the selected (name "." key, value) pairs will be produced.
   * @param consumer consumer that accepts produced objects
   */</comment>
  <function><type><specifier>static</specifier> <name>void</name></type> <name>convertMeter</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>name</name></decl></parameter>, <parameter><decl><type><name>Meter</name></type> <name>meter</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>simple</name></decl></parameter>, <parameter><decl><type><name><name>BiConsumer</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>consumer</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>simple</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>consumer</name><operator>.</operator><name>accept</name></name><argument_list>(<argument><expr><name>name</name> <operator>+</operator> <literal type="string">".count"</literal></expr></argument>, <argument><expr><call><name><name>meter</name><operator>.</operator><name>getCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>response</name> <init>= <expr><operator>new</operator> <call><name><name>LinkedHashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"count"</literal></expr></argument>, <argument><expr><call><name><name>meter</name><operator>.</operator><name>getCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"meanRate"</literal></expr></argument>, <argument><expr><call><name><name>meter</name><operator>.</operator><name>getMeanRate</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"1minRate"</literal></expr></argument>, <argument><expr><call><name><name>meter</name><operator>.</operator><name>getOneMinuteRate</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"5minRate"</literal></expr></argument>, <argument><expr><call><name><name>meter</name><operator>.</operator><name>getFiveMinuteRate</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"15minRate"</literal></expr></argument>, <argument><expr><call><name><name>meter</name><operator>.</operator><name>getFifteenMinuteRate</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>consumer</name><operator>.</operator><name>accept</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><name>response</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
   </block_content>}</block></function>
 
  <function><type><specifier>static</specifier> <name>Object</name></type> <name>convertGauge</name><parameter_list>(<parameter><decl><type><name>Gauge</name></type> <name>gauge</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>compact</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>compact</name></expr>)</condition> <block>{<block_content>
      <return>return <expr><call><name><name>gauge</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr>;</return>
  <comment type="block" format="javadoc">/**
   * Convert a {@link Gauge}.
   * @param name metric name
   * @param gauge gauge instance
   * @param simple use simplified representation for complex metrics - instead of a (name, map)
   *             only the selected (name "." key, value) pairs will be produced.
   * @param compact if true then only return {@link Gauge#getValue()}. If false
   *                then return a map with a "value" field.
   * @param consumer consumer that accepts produced objects
   */</comment>
  <function><type><specifier>static</specifier> <name>void</name></type> <name>convertGauge</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>name</name></decl></parameter>, <parameter><decl><type><name>Gauge</name></type> <name>gauge</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>simple</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>compact</name></decl></parameter>,
                             <parameter><decl><type><name><name>BiConsumer</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>consumer</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>compact</name> <operator>||</operator> <name>simple</name></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>Object</name></type> <name>o</name> <init>= <expr><call><name><name>gauge</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>simple</name> <operator>&amp;&amp;</operator> <operator>(</operator><name>o</name> <operator>instanceof</operator> <name>Map</name><operator>)</operator></expr>)</condition> <block>{<block_content>
        <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>?</name></argument>, <argument><name>?</name></argument>&gt;</argument_list></name></name></type> <name>entry</name> <range>: <expr><operator>(</operator><operator>(</operator><name><name>Map</name><argument_list type="generic">&lt;<argument><name>?</name></argument>, <argument><name>?</name></argument>&gt;</argument_list></name><operator>)</operator><name>o</name><operator>)</operator><operator>.</operator><call><name>entrySet</name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
          <expr_stmt><expr><call><name><name>consumer</name><operator>.</operator><name>accept</name></name><argument_list>(<argument><expr><name>name</name> <operator>+</operator> <literal type="string">"."</literal> <operator>+</operator> <call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><call><name><name>consumer</name><operator>.</operator><name>accept</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><name>o</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></else></if_stmt>
     </block_content>}</block></if> <else>else <block>{<block_content>
       <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>response</name> <init>= <expr><operator>new</operator> <call><name><name>LinkedHashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>response</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"value"</literal></expr></argument>, <argument><expr><call><name><name>gauge</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <return>return <expr><name>response</name></expr>;</return>
      <expr_stmt><expr><call><name><name>consumer</name><operator>.</operator><name>accept</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><name>response</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></else></if_stmt>
   </block_content>}</block></function>
 
  <comment type="block" format="javadoc">/**
   * Convert a {@link Counter}
   * @param counter counter instance
   * @param compact if true then only return {@link Counter#getCount()}. If false
   *                then return a map with a "count" field.
   * @return map or object
   */</comment>
   <function><type><specifier>static</specifier> <name>Object</name></type> <name>convertCounter</name><parameter_list>(<parameter><decl><type><name>Counter</name></type> <name>counter</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>compact</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <if_stmt><if>if <condition>(<expr><name>compact</name></expr>)</condition> <block>{<block_content>
       <return>return <expr><call><name><name>counter</name><operator>.</operator><name>getCount</name></name><argument_list>()</argument_list></call></expr>;</return>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">338</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">480</literal></expr><operator>,</operator><expr><literal type="number">88</literal> @@ <specifier>public</specifier> <name>class</name> <name>MetricUtils</name> <block>{
   <comment type="block" format="javadoc">/**
    * Returns an instrumented wrapper over the given executor service.
    */</comment>
  <expr><specifier>public</specifier> <specifier>static</specifier> <name>ExecutorService</name> <call><name>instrumentedExecutorService</name><argument_list>(<argument><expr><name>ExecutorService</name> <name>delegate</name></expr></argument>, <argument><expr><name>MetricRegistry</name> <name>metricRegistry</name></expr></argument>, <argument><expr><name>String</name> <name>scope</name></expr></argument>)</argument_list></call>  <block>{
  <expr><specifier>public</specifier> <specifier>static</specifier> <name>ExecutorService</name> <call><name>instrumentedExecutorService</name><argument_list>(<argument><expr><name>ExecutorService</name> <name>delegate</name></expr></argument>, <argument><expr><name>SolrInfoBean</name> <name>info</name></expr></argument>, <argument><expr><name>MetricRegistry</name> <name>metricRegistry</name></expr></argument>, <argument><expr><name>String</name> <name>scope</name></expr></argument>)</argument_list></call>  <block>{
    <if_stmt><if>if <condition>(<expr><name>info</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>info</name><operator>.</operator><name>getMetricNames</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>info</name><operator>.</operator><name>getMetricNames</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>add</name><argument_list>(<argument><expr><call><name><name>MetricRegistry</name><operator>.</operator><name>name</name></name><argument_list>(<argument><expr><name>scope</name></expr></argument>, <argument><expr><literal type="string">"submitted"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>info</name><operator>.</operator><name>getMetricNames</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>add</name><argument_list>(<argument><expr><call><name><name>MetricRegistry</name><operator>.</operator><name>name</name></name><argument_list>(<argument><expr><name>scope</name></expr></argument>, <argument><expr><literal type="string">"running"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>info</name><operator>.</operator><name>getMetricNames</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>add</name><argument_list>(<argument><expr><call><name><name>MetricRegistry</name><operator>.</operator><name>name</name></name><argument_list>(<argument><expr><name>scope</name></expr></argument>, <argument><expr><literal type="string">"completed"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>info</name><operator>.</operator><name>getMetricNames</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>add</name><argument_list>(<argument><expr><call><name><name>MetricRegistry</name><operator>.</operator><name>name</name></name><argument_list>(<argument><expr><name>scope</name></expr></argument>, <argument><expr><literal type="string">"duration"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt/>}</block_content>
     return new InstrumentedExecutorService(delegate</block><operator>,</operator> <expr_stmt><expr><name>metricRegistry</name></expr><operator>,</operator> <expr><name>scope</name></expr></expr_stmt></if></if_stmt>)</block></expr>;
   }</block>

  <comment type="block" format="javadoc">/**
   * Creates a set of metrics (gauges) that correspond to available bean properties for the provided MXBean.
   * @param obj an instance of MXBean
   * @param intf MXBean interface, one of {@link PlatformManagedObject}-s
   * @param consumer consumer for created names and metrics
   * @param &lt;T&gt; formal type
   */</comment>
  <specifier>public</specifier> <specifier>static</specifier> <operator>&lt;</operator><name>T</name> extends <name>PlatformManagedObject</name><operator>&gt;</operator> <name>void</name> <call><name>addMXBeanMetrics</name><argument_list>(<argument><expr><name>T</name> <name>obj</name></expr></argument>, <argument><expr><name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>T</name></extends></argument>&gt;</argument_list></name> <name>intf</name></expr></argument>,
      <argument><expr><name>String</name> <name>prefix</name></expr></argument>, <argument><expr><name><name>BiConsumer</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Metric</name></argument>&gt;</argument_list></name> <name>consumer</name></expr></argument>)</argument_list></call> <block>{
    <if_stmt><if>if <condition>(<expr><call><name><name>intf</name><operator>.</operator><name>isInstance</name></name><argument_list>(<argument><expr><name>obj</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>BeanInfo</name></type> <name>beanInfo</name></decl>;</decl_stmt>
      <try>try <block>{<block_content>
        <expr_stmt><expr><name>beanInfo</name> <operator>=</operator> <call><name><name>Introspector</name><operator>.</operator><name>getBeanInfo</name></name><argument_list>(<argument><expr><name>intf</name></expr></argument>, <argument><expr><call><name><name>intf</name><operator>.</operator><name>getSuperclass</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>Introspector</name><operator>.</operator><name>IGNORE_ALL_BEANINFO</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt/>}</block_content> catch (IntrospectionException e</block></try>)</block_content> <block>{<block_content>
        <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Unable to fetch properties of MXBean "</literal> <operator>+</operator> <call><name><name>obj</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return;</return>
      <expr_stmt/>}</block_content>
      for (final PropertyDescriptor desc : beanInfo.getPropertyDescriptors(</block></block></if></if_stmt>)</block></expr>) <block>{
        <expr><name>final</name> <name>String</name> <name>name</name> <operator>=</operator> <call><name><name>desc</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr>;</block></block></expr></expr_stmt>
        <comment type="line">// test if it works at all</comment>
        <try>try <block>{<block_content>
          <expr_stmt><expr><call><name><name>desc</name><operator>.</operator><name>getReadMethod</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>invoke</name><argument_list>(<argument><expr><name>obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <comment type="line">// worked - consume it</comment>
          <decl_stmt><decl><type><specifier>final</specifier> <name><name>Gauge</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name></type> <name>gauge</name> <init>= <expr><lambda><parameter_list>()</parameter_list> -&gt; <block>{<block_content>
            <try>try <block>{<block_content>
              <return>return <expr><call><name><name>desc</name><operator>.</operator><name>getReadMethod</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>invoke</name><argument_list>(<argument><expr><name>obj</name></expr></argument>)</argument_list></call></expr>;</return>
            </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>InvocationTargetException</name></type> <name>ite</name></decl></parameter>)</parameter_list> <block>{<block_content>
              <comment type="line">// ignore (some properties throw UOE)</comment>
              <return>return <expr><literal type="null">null</literal></expr>;</return>
            </block_content>}</block></catch> <catch>catch <parameter_list>(<parameter><decl><type><name>IllegalAccessException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
              <return>return <expr><literal type="null">null</literal></expr>;</return>
            </block_content>}</block></catch></try>
          </block_content>}</block></lambda></expr></init></decl>;</decl_stmt>
          <decl_stmt><decl><type><name>String</name></type> <name>metricName</name> <init>= <expr><call><name><name>MetricRegistry</name><operator>.</operator><name>name</name></name><argument_list>(<argument><expr><name>prefix</name></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <expr_stmt><expr><call><name><name>consumer</name><operator>.</operator><name>accept</name></name><argument_list>(<argument><expr><name>metricName</name></expr></argument>, <argument><expr><name>gauge</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
          <comment type="line">// didn't work, skip it...</comment>
        </block_content>}</block></catch></try>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></function>
  </block_content>}</block></if></if_stmt>

  <comment type="block" format="javadoc">/**
   * These are well-known implementations of {@link java.lang.management.OperatingSystemMXBean}.
   * Some of them provide additional useful properties beyond those declared by the interface.
   */</comment>
  <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <name><name>String</name><index>[]</index></name></type> <name>OS_MXBEAN_CLASSES</name> <init>= <expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{
      <expr><call><name><name>OperatingSystemMXBean</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr>,
      <expr><literal type="string">"com.sun.management.OperatingSystemMXBean"</literal></expr>,
      <expr><literal type="string">"com.sun.management.UnixOperatingSystemMXBean"</literal></expr>,
      <expr><literal type="string">"com.ibm.lang.management.OperatingSystemMXBean"</literal></expr>
  }</block></expr></init></decl>;</decl_stmt>

  <comment type="block" format="javadoc">/**
   * Creates a set of metrics (gauges) that correspond to available bean properties for the provided MXBean.
   * @param obj an instance of MXBean
   * @param interfaces interfaces that it may implement. Each interface will be tried in turn, and only
   *                   if it exists and if it contains unique properties then they will be added as metrics.
   * @param prefix optional prefix for metric names
   * @param consumer consumer for created names and metrics
   * @param &lt;T&gt; formal type
   */</comment>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <parameter_list type="generic">&lt;<parameter><name>T</name> <extends>extends <name>PlatformManagedObject</name></extends></parameter>&gt;</parameter_list> <name>void</name></type> <name>addMXBeanMetrics</name><parameter_list>(<parameter><decl><type><name>T</name></type> <name>obj</name></decl></parameter>, <parameter><decl><type><name><name>String</name><index>[]</index></name></type> <name>interfaces</name></decl></parameter>,
      <parameter><decl><type><name>String</name></type> <name>prefix</name></decl></parameter>, <parameter><decl><type><name><name>BiConsumer</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Metric</name></argument>&gt;</argument_list></name></type> <name>consumer</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <for>for <control>(<init><decl><type><name>String</name></type> <name>clazz</name> <range>: <expr><name>interfaces</name></expr></range></decl></init>)</control> <block>{<block_content>
      <try>try <block>{<block_content>
        <decl_stmt><decl><type><specifier>final</specifier> <name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>PlatformManagedObject</name></extends></argument>&gt;</argument_list></name></type> <name>intf</name> <init>= <expr><call><name><name>Class</name><operator>.</operator><name>forName</name></name><argument_list>(<argument><expr><name>clazz</name></expr></argument>)</argument_list></call>
            <operator>.</operator><call><name>asSubclass</name><argument_list>(<argument><expr><name><name>PlatformManagedObject</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>MetricUtils</name><operator>.</operator><name>addMXBeanMetrics</name></name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name>intf</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>consumer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ClassNotFoundException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <comment type="line">// ignore</comment>
      </block_content>}</block></catch></try>
    </block_content>}</block></for>
  </block_content>}</block></function>
 </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>-</operator><name>files</name><operator>/</operator><name>solr</name><operator>/</operator><name>solr</name><operator>-</operator><name><name>jmxreporter</name><operator>.</operator><name>xml</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>-</operator><name>files</name><operator>/</operator><name>solr</name><operator>/</operator><name>solr</name><operator>-</operator><name><name>jmxreporter</name><operator>.</operator><name>xml</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">00000000000..bb9d05de142</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>-</operator><name>files</name><operator>/</operator><name>solr</name><operator>/</operator><name>solr</name><operator>-</operator><name><name>jmxreporter</name><operator>.</operator><name>xml</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr><operator>,</operator><expr><ternary><condition><expr><literal type="number">43</literal> @@
<operator>&lt;</operator></expr>?</condition><then><expr><name>xml</name> <name>version</name><operator>=</operator><literal type="string">"1.0"</literal> <name>encoding</name><operator>=</operator><ternary><condition><expr><literal type="string">"UTF-8"</literal></expr> ?</condition><then><expr><operator>&gt;</operator>
<operator>&lt;</operator><operator>!</operator><operator>--</operator>
 <name>Licensed</name> <name>to</name> <name>the</name> <name>Apache</name> <name>Software</name> <call><name>Foundation</name> <argument_list>(<argument><expr><name>ASF</name></expr></argument>)</argument_list></call> <name>under</name> <name>one</name> <name>or</name> <name>more</name>
 <name>contributor</name> <name>license</name> <name><name>agreements</name><operator>.</operator>  <name>See</name></name> <name>the</name> <name>NOTICE</name> <name>file</name> <name>distributed</name> <name>with</name>
 <name>this</name> <name>work</name></expr></then></ternary></expr></then></ternary></expr></expr_stmt> <for>for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License<operator>,</operator> <expr_stmt><expr><name>Version</name> <literal type="number">2.0</literal>
 <operator>(</operator><name>the</name> <literal type="string">"License"</literal><operator>)</operator></expr>;</expr_stmt></for> <expr_stmt><expr><name>you</name> <name>may</name> <name>not</name> <name>use</name> <name>this</name> <name>file</name> <name>except</name> <name>in</name> <name>compliance</name> <name>with</name>
 <name>the</name> <name><name>License</name><operator>.</operator>  <name>You</name></name> <name>may</name> <name>obtain</name> <name>a</name> <name>copy</name> <name>of</name> <name>the</name> <name>License</name> <name>at</name>

     <name>http</name><operator>:</operator><comment type="line">//www.apache.org/licenses/LICENSE-2.0</comment>

 <name>Unless</name> <name>required</name> <name>by</name> <name>applicable</name> <name>law</name> <name>or</name> <name>agreed</name> <name>to</name> <name>in</name> <name>writing</name></expr><operator>,</operator> <expr><name>software</name>
 <name>distributed</name> <name>under</name> <name>the</name> <name>License</name> <name>is</name> <name>distributed</name> <name>on</name> <name>an</name> <literal type="string">"AS IS"</literal> <name>BASIS</name></expr><operator>,</operator>
 <expr><name>WITHOUT</name> <name>WARRANTIES</name> <name>OR</name> <name>CONDITIONS</name> <name>OF</name> <name>ANY</name> <name>KIND</name></expr><operator>,</operator> <expr><name>either</name> <name>express</name> <name>or</name> <name><name>implied</name><operator>.</operator>
 <name>See</name></name> <name>the</name> <name>License</name></expr></expr_stmt> <for>for the specific language governing permissions and
 limitations under the License.
--&gt;

&lt;solr&gt;
  &lt;shardHandlerFactory name="shardHandlerFactory" class="HttpShardHandlerFactory"&gt;
    &lt;str name="urlScheme"&gt;$<block>{<block_content><label><name>urlScheme</name>:</label></block_content>}</block></for><expr_stmt><expr><operator>&lt;</operator><operator>/</operator><name>str</name><operator>&gt;</operator>
    <operator>&lt;</operator><name>int</name> <name>name</name><operator>=</operator><literal type="string">"socketTimeout"</literal><operator>&gt;</operator><name>$</name><block>{<expr><name>socketTimeout</name><operator>:</operator><literal type="number">90000</literal></expr>}</block><operator>&lt;</operator><operator>/</operator><name>int</name><operator>&gt;</operator>
    <operator>&lt;</operator><name>int</name> <name>name</name><operator>=</operator><literal type="string">"connTimeout"</literal><operator>&gt;</operator><name>$</name><block>{<expr><name>connTimeout</name><operator>:</operator><literal type="number">15000</literal></expr>}</block><operator>&lt;</operator><operator>/</operator><name>int</name><operator>&gt;</operator>
  <operator>&lt;</operator><operator>/</operator><name>shardHandlerFactory</name><operator>&gt;</operator>

  <operator>&lt;</operator><name>solrcloud</name><operator>&gt;</operator>
    <operator>&lt;</operator><name>str</name> <name>name</name><operator>=</operator><literal type="string">"host"</literal><operator>&gt;</operator><literal type="number">127.0.0.1</literal><operator>&lt;</operator><operator>/</operator><name>str</name><operator>&gt;</operator>
    <operator>&lt;</operator><name>int</name> <name>name</name><operator>=</operator><literal type="string">"hostPort"</literal><operator>&gt;</operator><name>$</name><block>{<expr><name>hostPort</name><operator>:</operator><literal type="number">8983</literal></expr>}</block><operator>&lt;</operator><operator>/</operator><name>int</name><operator>&gt;</operator>
    <operator>&lt;</operator><name>str</name> <name>name</name><operator>=</operator><literal type="string">"hostContext"</literal><operator>&gt;</operator><name>$</name><block>{<expr><name>hostContext</name><operator>:</operator><name>solr</name></expr>}</block><operator>&lt;</operator><operator>/</operator><name>str</name><operator>&gt;</operator>
    <operator>&lt;</operator><name>int</name> <name>name</name><operator>=</operator><literal type="string">"zkClientTimeout"</literal><operator>&gt;</operator><name>$</name><block>{<expr><name><name>solr</name><operator>.</operator><name>zkclienttimeout</name></name><operator>:</operator><literal type="number">30000</literal></expr>}</block><operator>&lt;</operator><operator>/</operator><name>int</name><operator>&gt;</operator>
    <operator>&lt;</operator><name>bool</name> <name>name</name><operator>=</operator><literal type="string">"genericCoreNodeNames"</literal><operator>&gt;</operator><name>$</name><block>{<expr><name>genericCoreNodeNames</name><operator>:</operator><literal type="boolean">true</literal></expr>}</block><operator>&lt;</operator><operator>/</operator><name>bool</name><operator>&gt;</operator>
    <operator>&lt;</operator><name>int</name> <name>name</name><operator>=</operator><literal type="string">"leaderVoteWait"</literal><operator>&gt;</operator><name>$</name><block>{<expr><name>leaderVoteWait</name><operator>:</operator><literal type="number">10000</literal></expr>}</block><operator>&lt;</operator><operator>/</operator><name>int</name><operator>&gt;</operator>
    <operator>&lt;</operator><name>int</name> <name>name</name><operator>=</operator><literal type="string">"distribUpdateConnTimeout"</literal><operator>&gt;</operator><name>$</name><block>{<expr><name>distribUpdateConnTimeout</name><operator>:</operator><literal type="number">45000</literal></expr>}</block><operator>&lt;</operator><operator>/</operator><name>int</name><operator>&gt;</operator>
    <operator>&lt;</operator><name>int</name> <name>name</name><operator>=</operator><literal type="string">"distribUpdateSoTimeout"</literal><operator>&gt;</operator><name>$</name><block>{<expr><name>distribUpdateSoTimeout</name><operator>:</operator><literal type="number">340000</literal></expr>}</block><operator>&lt;</operator><operator>/</operator><name>int</name><operator>&gt;</operator>
    <operator>&lt;</operator><name>int</name> <name>name</name><operator>=</operator><literal type="string">"autoReplicaFailoverWaitAfterExpiration"</literal><operator>&gt;</operator><name>$</name><block>{<expr><name>autoReplicaFailoverWaitAfterExpiration</name><operator>:</operator><literal type="number">10000</literal></expr>}</block><operator>&lt;</operator><operator>/</operator><name>int</name><operator>&gt;</operator>
    <operator>&lt;</operator><name>int</name> <name>name</name><operator>=</operator><literal type="string">"autoReplicaFailoverWorkLoopDelay"</literal><operator>&gt;</operator><name>$</name><block>{<expr><name>autoReplicaFailoverWorkLoopDelay</name><operator>:</operator><literal type="number">10000</literal></expr>}</block><operator>&lt;</operator><operator>/</operator><name>int</name><operator>&gt;</operator>
    <operator>&lt;</operator><name>int</name> <name>name</name><operator>=</operator><literal type="string">"autoReplicaFailoverBadNodeExpiration"</literal><operator>&gt;</operator><name>$</name><block>{<expr><name>autoReplicaFailoverBadNodeExpiration</name><operator>:</operator><literal type="number">60000</literal></expr>}</block><operator>&lt;</operator><operator>/</operator><name>int</name><operator>&gt;</operator>
  <operator>&lt;</operator><operator>/</operator><name>solrcloud</name><operator>&gt;</operator>

  <operator>&lt;</operator><name>metrics</name><operator>&gt;</operator>
    <operator>&lt;</operator><name>reporter</name> <name>name</name><operator>=</operator><literal type="string">"defaultJmx"</literal> <name>class</name><operator>=</operator><literal type="string">"org.apache.solr.metrics.reporters.SolrJmxReporter"</literal><operator>/</operator><operator>&gt;</operator>
  <operator>&lt;</operator><operator>/</operator><name>metrics</name><operator>&gt;</operator>
<operator>&lt;</operator><operator>/</operator><name>solr</name><operator>&gt;</operator>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>-</operator><name>files</name><operator>/</operator><name>solr</name><operator>/</operator><name>solr</name><operator>-</operator><name><name>solrreporter</name><operator>.</operator><name>xml</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>-</operator><name>files</name><operator>/</operator><name>solr</name><operator>/</operator><name>solr</name><operator>-</operator><name><name>solrreporter</name><operator>.</operator><name>xml</name></name>
<name>index</name> <name>db03e421887</name><operator>..</operator><name>a66d9d096e1</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>-</operator><name>files</name><operator>/</operator><name>solr</name><operator>/</operator><name>solr</name><operator>-</operator><name><name>solrreporter</name><operator>.</operator><name>xml</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>-</operator><name>files</name><operator>/</operator><name>solr</name><operator>/</operator><name>solr</name><operator>-</operator><name><name>solrreporter</name><operator>.</operator><name>xml</name></name>
@@ <operator>-</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@
   <operator>&lt;</operator><operator>/</operator><name>solrcloud</name><operator>&gt;</operator>
 
   <operator>&lt;</operator><name>metrics</name><operator>&gt;</operator>
    <operator>&lt;</operator><operator>!</operator><operator>--</operator> <name>disable</name> default <name>JMX</name> <name>reporter</name> <name>to</name> <name>avoid</name> <name>conflicts</name> <name>with</name> <name>multiple</name> <name><name>CoreContainers</name><operator>.</operator></name> --<operator>&gt;</operator>
    <operator>&lt;</operator><name>reporter</name> <name>name</name><operator>=</operator><literal type="string">"defaultJmx"</literal> <name>class</name><operator>=</operator><literal type="string">"org.apache.solr.metrics.reporters.SolrJmxReporter"</literal><operator>&gt;</operator>
      <operator>&lt;</operator><name>bool</name> <name>name</name><operator>=</operator><literal type="string">"enabled"</literal><operator>&gt;</operator><literal type="boolean">false</literal><operator>&lt;</operator><operator>/</operator><name>bool</name><operator>&gt;</operator>
    <operator>&lt;</operator><operator>/</operator><name>reporter</name><operator>&gt;</operator>
     <operator>&lt;</operator><name>reporter</name> <name>name</name><operator>=</operator><literal type="string">"test"</literal> <name>group</name><operator>=</operator><literal type="string">"shard"</literal><operator>&gt;</operator>
       <operator>&lt;</operator><name>int</name> <name>name</name><operator>=</operator><literal type="string">"period"</literal><operator>&gt;</operator><literal type="number">5</literal><operator>&lt;</operator><operator>/</operator><name>int</name><operator>&gt;</operator>
       <operator>&lt;</operator><name>str</name> <name>name</name><operator>=</operator><literal type="string">"filter"</literal><operator>&gt;</operator><name>UPDATE</name><operator>\</operator><operator>.</operator><operator>/</operator><name>update</name><operator>/</operator><operator>.</operator><operator>*</operator><name><name>requests</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>str</name></argument>&gt;</argument_list></name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>BasicFunctionalityTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>BasicFunctionalityTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f4a14dba419</name><operator>..</operator><literal type="number">199f682811b</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>BasicFunctionalityTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>BasicFunctionalityTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>LinkedList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 
<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>Gauge</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>Metric</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Document</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>Field</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>document</name><operator>.</operator><name>LazyDocument</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">40</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>SolrParams</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrCore</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>handler</name><operator>.</operator><name>RequestHandlerBase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricManager</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>request</name><operator>.</operator><name>LocalSolrQueryRequest</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>request</name><operator>.</operator><name>SolrQueryRequest</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>request</name><operator>.</operator><name>SolrRequestHandler</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">122</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">125</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>class</name> <name>BasicFunctionalityTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><call><name>assertNotNull</name><argument_list>(<argument><expr><call><name><name>core</name><operator>.</operator><name>getRequestHandler</name></name><argument_list>(<argument><expr><literal type="string">"mock"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
     <comment type="line">// test stats call</comment>
    <name>NamedList</name> <name>stats</name> <operator>=</operator> <call><name><name>core</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"collection1"</literal></expr></argument>, <argument><expr><call><name><name>stats</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"coreName"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>stats</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"refCount"</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
    <decl_stmt><decl><type><name>SolrMetricManager</name></type> <name>manager</name> <init>= <expr><call><name><name>core</name><operator>.</operator><name>getCoreDescriptor</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCoreContainer</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getMetricManager</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>registry</name> <init>= <expr><call><name><name>core</name><operator>.</operator><name>getCoreMetricManager</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getRegistryName</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Metric</name></argument>&gt;</argument_list></name></type> <name>metrics</name> <init>= <expr><call><name><name>manager</name><operator>.</operator><name>registry</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getMetrics</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>metrics</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><literal type="string">"CORE.coreName"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>metrics</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><literal type="string">"CORE.refCount"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>Gauge</name><argument_list type="generic">&lt;<argument><name>Number</name></argument>&gt;</argument_list></name></type> <name>g</name> <init>= <expr><operator>(</operator><name><name>Gauge</name><argument_list type="generic">&lt;<argument><name>Number</name></argument>&gt;</argument_list></name><operator>)</operator><call><name><name>metrics</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"CORE.refCount"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>g</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>intValue</name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

     <expr_stmt><expr><call><name><name>lrf</name><operator>.</operator><name>args</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>CommonParams</name><operator>.</operator><name>VERSION</name></name></expr></argument>,<argument><expr><literal type="string">"2.2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertQ</name><argument_list>(<argument><expr><literal type="string">"test query on empty index"</literal></expr></argument>,
             <argument><expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"qlkciyopsbgzyvkylsjhchghjrdf"</literal></expr></argument>)</argument_list></call>
@@ <operator>-</operator><literal type="number">378</literal></expr></argument>,<argument><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">385</literal></expr></argument>,<argument><expr><literal type="number">6</literal> @@ <specifier>public</specifier> class <name>BasicFunctionalityTest</name> extends <name>SolrTestCaseJ4</name> <block>{
         @<expr><name>Override</name>
         <specifier>public</specifier> <name>String</name> <call><name>getDescription</name><argument_list>()</argument_list></call> <block>{ <return>return <expr><name>tmp</name></expr>;</return> }</block>
         @<name>Override</name>
        <specifier>public</specifier> <name>String</name> <call><name>getSource</name><argument_list>()</argument_list></call> <block>{ <return>return <expr><name>tmp</name></expr>;</return> }</block>
        @<name>Override</name>
         <specifier>public</specifier> <name>void</name> <call><name>handleRequestBody</name>
           <argument_list>( <argument><expr><name>SolrQueryRequest</name> <name>req</name></expr></argument>, <argument><expr><name>SolrQueryResponse</name> <name>rsp</name></expr></argument> )</argument_list></call> <block>{
           <throw>throw <argument_list>new <argument><expr><call><name>RuntimeException</name><argument_list>(<argument><expr><name>tmp</name></expr></argument>)</argument_list></call></expr></argument></argument_list></throw>;
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>CursorPagingTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>CursorPagingTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b204677f8c5</name><operator>..</operator><name>eb1c6bc6fe9</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>CursorPagingTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>CursorPagingTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal>,<literal type="number">7</literal> <operator>+</operator><literal type="number">19</literal>,<literal type="number">6</literal> @@</block></expr> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name></name>;</package></block></expr></argument></argument_list></call></expr></expr_stmt>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>TestUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>SentinelIntSet</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>mutable</name><operator>.</operator><name>MutableValueInt</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoMBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrInputDocument</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>CursorMarkParams</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>SolrParams</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">32</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">31</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>CursorMarkParams</name><operator>.</operator><name>CURSOR_MARK_START</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrException</name><operator>.</operator><name>ErrorCode</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricsMap</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>request</name><operator>.</operator><name>SolrQueryRequest</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>CursorMark</name></name>;</import> <comment type="line">//jdoc</comment>
 <import>import <name><name>org</name><operator>.</operator><name>noggit</name><operator>.</operator><name>ObjectBuilder</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">521</literal></expr><operator>,</operator><expr><literal type="number">16</literal> <operator>+</operator><literal type="number">521</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@ <specifier>public</specifier> <name>class</name> <name>CursorPagingTest</name> extends <name>SolrTestCaseJ4</name> <block>{
 
     <expr><name>final</name> <name><name>Collection</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name> <name>allFieldNames</name> <operator>=</operator> <call><name>getAllSortFieldNames</name><argument_list>()</argument_list></call></expr>;
 
    <name>final</name> <name>SolrInfoMBean</name> <name>filterCacheStats</name> 
      <operator>=</operator> <call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getInfoRegistry</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"filterCache"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>MetricsMap</name></type> <name>filterCacheStats</name> <init>=
        <expr><operator>(</operator><name>MetricsMap</name><operator>)</operator><call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCoreMetricManager</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getRegistry</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getMetrics</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"CACHE.searcher.filterCache"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><name>filterCacheStats</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>SolrInfoMBean</name></type> <name>queryCacheStats</name> 
      <init>= <expr><call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getInfoRegistry</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"queryResultCache"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>MetricsMap</name></type> <name>queryCacheStats</name> <init>=
        <expr><operator>(</operator><name>MetricsMap</name><operator>)</operator><call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCoreMetricManager</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getRegistry</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getMetrics</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"CACHE.searcher.queryResultCache"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><name>queryCacheStats</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <decl_stmt><decl><type><specifier>final</specifier> <name>long</name></type> <name>preQcIn</name> <init>= <expr><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>queryCacheStats</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>long</name></type> <name>preFcIn</name> <init>= <expr><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>long</name></type> <name>preFcHits</name> <init>= <expr><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>long</name></type> <name>preQcIn</name> <init>= <expr><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>queryCacheStats</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>long</name></type> <name>preFcIn</name> <init>= <expr><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>long</name></type> <name>preFcHits</name> <init>= <expr><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name>SentinelIntSet</name></type> <name>ids</name> <init>= <expr><call><name>assertFullWalkNoDups</name>
       <argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><call><name>params</name><argument_list>(<argument><expr><literal type="string">"q"</literal></expr></argument>, <argument><expr><literal type="string">"*:*"</literal></expr></argument>,
<argument>@@ <expr><operator>-</operator><literal type="number">542</literal></expr></argument>,<argument><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">542</literal></expr></argument>,<argument><expr><literal type="number">9</literal> @@ <specifier>public</specifier> class <name>CursorPagingTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     
     <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><call><name><name>ids</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
    <name>final</name> <name>long</name> <name>postQcIn</name> <operator>=</operator> <operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>queryCacheStats</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call></block></expr></argument>;</argument_list></call></expr></argument></argument_list></call></expr></init></decl></decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>long</name></type> <name>postFcIn</name> <init>= <expr><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>long</name></type> <name>postFcHits</name> <init>= <expr><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>long</name></type> <name>postQcIn</name> <init>= <expr><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>queryCacheStats</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>long</name></type> <name>postFcIn</name> <init>= <expr><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>long</name></type> <name>postFcHits</name> <init>= <expr><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"query cache inserts changed"</literal></expr></argument>, <argument><expr><name>preQcIn</name></expr></argument>, <argument><expr><name>postQcIn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <comment type="line">// NOTE: use of pure negative filters causees "*:* to be tracked in filterCache</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrInfoMBeanTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrInfoBeanTest</name><operator>.</operator><name>java</name></name>
<name>similarity</name> <name>index</name> <literal type="number">82</literal><operator>%</operator>
<name>rename</name> <name>from</name> <name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrInfoMBeanTest</name><operator>.</operator><name>java</name></name>
<name>rename</name> <name>to</name> <name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrInfoBeanTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>bfe231627ad</name><operator>..</operator><name>d39c87fad0b</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrInfoMBeanTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrInfoBeanTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@
  <operator>*</operator><operator>/</operator></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name></name>;</package>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoMBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>TestUtil</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>handler</name><operator>.</operator><name>StandardRequestHandler</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>handler</name><operator>.</operator><name>admin</name><operator>.</operator><name>LukeRequestHandler</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>handler</name><operator>.</operator><name>component</name><operator>.</operator><name>SearchComponent</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>highlight</name><operator>.</operator><name>DefaultSolrHighlighter</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricManager</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricProducer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>LRUCache</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>BeforeClass</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">36</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <comment type="block" format="javadoc">/**
  * A simple test used to increase code coverage for some standard things...
  */</comment>
<class_decl><specifier>public</specifier> class <name>SolrInfoMBeanTest</name> <super_list><extends>extends <super><name>SolrTestCaseJ4</name></super>
<super><specifier>public</specifier></super></extends> class SolrInfoBeanTest extends SolrTestCaseJ4
 <block>{<block_content>
   <function><annotation>@<name>BeforeClass</name></annotation>
   <type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>beforeClass</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">54</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">57</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrInfoMBeanTest</name> extends <name>SolrTestCaseJ4</name>
    <comment type="line">// System.out.println(classes);</comment>
     
     <name>int</name> <name>checked</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>SolrMetricManager</name></type> <name>metricManager</name> <init>= <expr><call><name><name>h</name><operator>.</operator><name>getCoreContainer</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getMetricManager</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>registry</name> <init>= <expr><call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCoreMetricManager</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getRegistryName</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>scope</name> <init>= <expr><call><name><name>TestUtil</name><operator>.</operator><name>randomSimpleString</name></name><argument_list>(<argument><expr><call><name>random</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <for>for<control>( <init><decl><type><name>Class</name></type> <name>clazz</name> <range>: <expr><name>classes</name></expr></range></decl></init> )</control> <block>{<block_content>
      <if_stmt><if>if<condition>( <expr><call><name><name>SolrInfoMBean</name><operator>.</operator><name><name>class</name><operator>.</operator><name>isAssignableFrom</name></name></name><argument_list>( <argument><expr><name>clazz</name></expr></argument> )</argument_list></call></expr> )</condition> <block>{<block_content>
      <if_stmt><if>if<condition>( <expr><call><name><name>SolrInfoBean</name><operator>.</operator><name><name>class</name><operator>.</operator><name>isAssignableFrom</name></name></name><argument_list>( <argument><expr><name>clazz</name></expr></argument> )</argument_list></call></expr> )</condition> <block>{<block_content>
         <try>try <block>{<block_content>
          <decl_stmt><decl><type><name>SolrInfoMBean</name></type> <name>info</name> <init>= <expr><operator>(</operator><name>SolrInfoMBean</name><operator>)</operator><call><name><name>clazz</name><operator>.</operator><name>newInstance</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
          <decl_stmt><decl><type><name>SolrInfoBean</name></type> <name>info</name> <init>= <expr><operator>(</operator><name>SolrInfoBean</name><operator>)</operator><call><name><name>clazz</name><operator>.</operator><name>newInstance</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
          <if_stmt><if>if <condition>(<expr><name>info</name> <operator>instanceof</operator> <name>SolrMetricProducer</name></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><operator>(</operator><operator>(</operator><name>SolrMetricProducer</name><operator>)</operator><name>info</name><operator>)</operator><operator>.</operator><call><name>initializeMetrics</name><argument_list>(<argument><expr><name>metricManager</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          </block_content>}</block></if></if_stmt>
           
           <comment type="line">//System.out.println( info.getClass() );</comment>
           <expr_stmt><expr><call><name>assertNotNull</name><argument_list>( <argument><expr><call><name><name>info</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">69</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">78</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrInfoMBeanTest</name> extends <name>SolrTestCaseJ4</name></expr></expr_stmt>
           </block_content>}</block></try>
           
           <expr_stmt><expr><call><name>assertNotNull</name><argument_list>( <argument><expr><call><name><name>info</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
          <comment type="line">// increase code coverage...</comment>
          <expr_stmt><expr><call><name>assertNotNull</name><argument_list>( <argument><expr><call><name><name>info</name><operator>.</operator><name>getDocs</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">""</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name>assertNotNull</name><argument_list>( <argument><expr><call><name><name>info</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call><operator>+</operator><literal type="string">""</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
           <expr_stmt><expr><name>checked</name><operator>++</operator></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
         <catch>catch<parameter_list>( <parameter><decl><type><name>InstantiationException</name></type> <name>ex</name></decl></parameter> )</parameter_list> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">80</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">86</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrInfoMBeanTest</name> extends <name>SolrTestCaseJ4</name></expr></expr_stmt>
         </block_content>}</block></catch>
       </block_content>}</block></if></if_stmt>
     </block_content>}</block></for>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>( <argument><expr><literal type="string">"there are at least 10 SolrInfoMBean that should be found in the classpath, found "</literal> <operator>+</operator> <name>checked</name></expr></argument>, <argument><expr><name>checked</name> <operator>&gt;</operator> <literal type="number">10</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>( <argument><expr><literal type="string">"there are at least 10 SolrInfoBean that should be found in the classpath, found "</literal> <operator>+</operator> <name>checked</name></expr></argument>, <argument><expr><name>checked</name> <operator>&gt;</operator> <literal type="number">10</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
   
   <function><type><specifier>private</specifier> <specifier>static</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>Class</name></argument>&gt;</argument_list></name></type> <name>getClassesForPackage</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>pckgname</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>BasicDistributedZkTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>BasicDistributedZkTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d1dbe9c4319</name><operator>..</operator><literal type="number">1c23c9cf678</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>BasicDistributedZkTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>BasicDistributedZkTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">59</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">59</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>invoke</name><operator>.</operator><name>MethodHandles</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URL</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">752</literal></expr><operator>,</operator><expr><literal type="number">19</literal> <operator>+</operator><literal type="number">753</literal></expr><operator>,</operator><expr><literal type="number">28</literal> @@ <specifier>public</specifier> <name>class</name> <name>BasicDistributedZkTest</name> extends <name>AbstractFullDistribZkTestBase</name> <block>{
 
   <expr><specifier>private</specifier> <name>Long</name> <call><name>getNumCommits</name><argument_list>(<argument><expr><name>HttpSolrClient</name> <name>sourceClient</name></expr></argument>)</argument_list></call> <throws>throws
       <argument><expr><name>SolrServerException</name></expr></argument>, <argument><expr><name>IOException</name> <block>{</block></expr></argument></throws></expr>
    <try>try <init>(<decl><type><name>HttpSolrClient</name></type> <name>client</name> <init>= <expr><call><name>getHttpSolrClient</name><argument_list>(<argument><expr><call><name><name>sourceClient</name><operator>.</operator><name>getBaseURL</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
    <comment type="line">// construct the /admin/metrics URL</comment>
    <decl_stmt><decl><type><name>URL</name></type> <name>url</name> <init>= <expr><operator>new</operator> <call><name>URL</name><argument_list>(<argument><expr><call><name><name>sourceClient</name><operator>.</operator><name>getBaseURL</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>path</name> <init>= <expr><call><name><name>url</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>substring</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>elements</name> <init>= <expr><call><name><name>path</name><operator>.</operator><name>split</name></name><argument_list>(<argument><expr><literal type="string">"/"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>collection</name> <init>= <expr><name><name>elements</name><index>[<expr><name><name>elements</name><operator>.</operator><name>length</name></name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>urlString</name> <init>= <expr><call><name><name>url</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>urlString</name> <operator>=</operator> <call><name><name>urlString</name><operator>.</operator><name>substring</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name><name>urlString</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call> <operator>-</operator> <call><name><name>collection</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <try>try <init>(<decl><type><name>HttpSolrClient</name></type> <name>client</name> <init>= <expr><call><name>getHttpSolrClient</name><argument_list>(<argument><expr><name>urlString</name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
       <expr_stmt><expr><call><name><name>client</name><operator>.</operator><name>setConnectionTimeout</name></name><argument_list>(<argument><expr><literal type="number">15000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>client</name><operator>.</operator><name>setSoTimeout</name></name><argument_list>(<argument><expr><literal type="number">60000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>ModifiableSolrParams</name></type> <name>params</name> <init>= <expr><operator>new</operator> <call><name>ModifiableSolrParams</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>params</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"qt"</literal></expr></argument>, <argument><expr><literal type="string">"/admin/mbeans?key=updateHandler&amp;stats=true"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <comment type="line">//params.set("qt", "/admin/metrics?prefix=UPDATE.updateHandler&amp;registry=solr.core." + collection);</comment>
      <expr_stmt><expr><call><name><name>params</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"qt"</literal></expr></argument>, <argument><expr><literal type="string">"/admin/metrics"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>params</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"prefix"</literal></expr></argument>, <argument><expr><literal type="string">"UPDATE.updateHandler"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>params</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"registry"</literal></expr></argument>, <argument><expr><literal type="string">"solr.core."</literal> <operator>+</operator> <name>collection</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <comment type="line">// use generic request to avoid extra processing of queries</comment>
       <decl_stmt><decl><type><name>QueryRequest</name></type> <name>req</name> <init>= <expr><operator>new</operator> <call><name>QueryRequest</name><argument_list>(<argument><expr><name>params</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>resp</name> <init>= <expr><call><name><name>client</name><operator>.</operator><name>request</name></name><argument_list>(<argument><expr><name>req</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>NamedList</name></type> <name>mbeans</name> <init>= <expr><operator>(</operator><name>NamedList</name><operator>)</operator> <call><name><name>resp</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"solr-mbeans"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>NamedList</name></type> <name>uhandlerCat</name> <init>= <expr><operator>(</operator><name>NamedList</name><operator>)</operator> <call><name><name>mbeans</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"UPDATE"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>NamedList</name></type> <name>uhandler</name> <init>= <expr><operator>(</operator><name>NamedList</name><operator>)</operator> <call><name><name>uhandlerCat</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"updateHandler"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>NamedList</name></type> <name>stats</name> <init>= <expr><operator>(</operator><name>NamedList</name><operator>)</operator> <call><name><name>uhandler</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"stats"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <return>return <expr><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>stats</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"commits"</literal></expr></argument>)</argument_list></call></expr>;</return>
      <decl_stmt><decl><type><name>NamedList</name></type> <name>metrics</name> <init>= <expr><operator>(</operator><name>NamedList</name><operator>)</operator> <call><name><name>resp</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"metrics"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>NamedList</name></type> <name>uhandlerCat</name> <init>= <expr><operator>(</operator><name>NamedList</name><operator>)</operator> <call><name><name>metrics</name><operator>.</operator><name>getVal</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>commits</name> <init>= <expr><operator>(</operator><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name><operator>)</operator> <call><name><name>uhandlerCat</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"UPDATE.updateHandler.commits"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <return>return <expr><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>commits</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"count"</literal></expr></argument>)</argument_list></call></expr>;</return>
     </block_content>}</block></try>
   </block_content>}</block></try>
 
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>BasicZkTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>BasicZkTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">26fa3257398</literal><operator>..</operator><name>f48f76b5736</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>BasicZkTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>BasicZkTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal>,<literal type="number">11</literal> <operator>+</operator><literal type="number">16</literal>,<literal type="number">14</literal> @@
  <operator>*</operator><operator>/</operator></block></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>cloud</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>Gauge</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>Metric</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name><operator>.</operator><name>Slow</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>CommonParams</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>ModifiableSolrParams</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrCore</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>request</name><operator>.</operator><name>LocalSolrQueryRequest</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>request</name><operator>.</operator><name>SolrQueryRequest</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">158</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">161</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>BasicZkTest</name> extends <name>AbstractZkTestCase</name> <block>{
     }</block>
     
     <comment type="line">// test stats call</comment>
    <name>NamedList</name> <name>stats</name> <operator>=</operator> <call><name><name>core</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"collection1"</literal></expr></argument>, <argument><expr><call><name><name>stats</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"coreName"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"collection1"</literal></expr></argument>, <argument><expr><call><name><name>stats</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"collection"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"shard1"</literal></expr></argument>, <argument><expr><call><name><name>stats</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"shard"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>stats</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"refCount"</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Metric</name></argument>&gt;</argument_list></name></type> <name>metrics</name> <init>= <expr><call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCoreMetricManager</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getRegistry</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getMetrics</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"collection1"</literal></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>Gauge</name><operator>)</operator><call><name><name>metrics</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"CORE.coreName"</literal></expr></argument>)</argument_list></call><operator>)</operator><operator>.</operator><call><name>getValue</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"collection1"</literal></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>Gauge</name><operator>)</operator><call><name><name>metrics</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"CORE.collection"</literal></expr></argument>)</argument_list></call><operator>)</operator><operator>.</operator><call><name>getValue</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"shard1"</literal></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>Gauge</name><operator>)</operator><call><name><name>metrics</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"CORE.shard"</literal></expr></argument>)</argument_list></call><operator>)</operator><operator>.</operator><call><name>getValue</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>metrics</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"CORE.refCount"</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <comment type="line">//zkController.getZkClient().printLayoutToStdOut();</comment>
   </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CollectionsAPIDistributedZkTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CollectionsAPIDistributedZkTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7925358e6d2</literal><operator>..</operator><name>ed9ed41b011</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CollectionsAPIDistributedZkTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CollectionsAPIDistributedZkTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>MBeanServer</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>MBeanServerFactory</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>ObjectName</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>invoke</name><operator>.</operator><name>MethodHandles</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>management</name><operator>.</operator><name>ManagementFactory</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Files</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>TimeUnit</name></name>;</import>
 
 <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>collect</name><operator>.</operator><name>ImmutableList</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>io</name><operator>.</operator><name>IOUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name><operator>.</operator><name>Slow</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>TestUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>client</name><operator>.</operator><name>solrj</name><operator>.</operator><name>SolrClient</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">68</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">70</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>SimpleOrderedMap</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>CoreContainer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrCore</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoMBean</name><operator>.</operator><name>Category</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoBean</name><operator>.</operator><name>Category</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>TestInjection</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>TimeOut</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Before</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>BeforeClass</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
 
 <import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>cloud</name><operator>.</operator><name>ZkStateReader</name><operator>.</operator><name>CORE_NAME_PROP</name></name>;</import>
 <import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>cloud</name><operator>.</operator><name>ZkStateReader</name><operator>.</operator><name>REPLICATION_FACTOR</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">83</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">87</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>cloud</name><operator>.</operator><name>ZkStateReader</name><operator>.</operator><name>REPLICATION_FACTOR</name></name>;</import>
  <expr_stmt><expr><operator>*</operator><operator>/</operator>
 @<name>Slow</name>
 <specifier>public</specifier> <name>class</name> <name>CollectionsAPIDistributedZkTest</name> extends <name>SolrCloudTestCase</name> <block>{
  <expr><specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>Logger</name> <name>log</name> <operator>=</operator> <call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><call><name><name>MethodHandles</name><operator>.</operator><name>lookup</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>lookupClass</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
   @<name>BeforeClass</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>beforeCollectionsAPIDistributedZkTest</name><argument_list>()</argument_list></call> <block>{
@@ <expr><operator>-</operator><literal type="number">94</literal></expr>,<expr><literal type="number">9</literal> <operator>+</operator><literal type="number">99</literal></expr>,<expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>CollectionsAPIDistributedZkTest</name> extends <name>SolrCloudTestCase</name> <block>{
 
   @<expr><name>BeforeClass</name>
   <specifier>public</specifier> <specifier>static</specifier> <name>void</name> <call><name>setupCluster</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>String</name> <name>solrXml</name> <operator>=</operator> <call><name><name>IOUtils</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><call><name><name>CollectionsAPIDistributedZkTest</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getResourceAsStream</name></name></name><argument_list>(<argument><expr><literal type="string">"/solr/solr-jmxreporter.xml"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"UTF-8"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
     <call><name>configureCluster</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call>
         <operator>.</operator><call><name>addConfig</name><argument_list>(<argument><expr><literal type="string">"conf"</literal></expr></argument>, <argument><expr><call><name>configset</name><argument_list>(<argument><expr><literal type="string">"cloud-minimal"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
         <operator>.</operator><call><name>addConfig</name><argument_list>(<argument><expr><literal type="string">"conf2"</literal></expr></argument>, <argument><expr><call><name>configset</name><argument_list>(<argument><expr><literal type="string">"cloud-minimal-jmx"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
        <operator>.</operator><call><name>withSolrXml</name><argument_list>(<argument><expr><name>solrXml</name></expr></argument>)</argument_list></call>
         <operator>.</operator><call><name>configure</name><argument_list>()</argument_list></call></block></expr>;
   }</block>
 
@@ <operator>-</operator><literal type="number">549</literal>,<literal type="number">7</literal> <operator>+</operator><literal type="number">556</literal>,<literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>CollectionsAPIDistributedZkTest</name> extends <name>SolrCloudTestCase</name> <block>{
     <for>for <control>(<init><decl><type><name>SolrCore</name></type> <name>core</name> <range>: <expr><name>theCores</name></expr></range></decl></init>)</control> <block>{<block_content>
 
       <comment type="line">// look for core props file</comment>
      <decl_stmt><decl><type><name>Path</name></type> <name>instancedir</name> <init>= <expr><operator>(</operator><name>Path</name><operator>)</operator> <call><name><name>core</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"instanceDir"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>Path</name></type> <name>instancedir</name> <init>= <expr><operator>(</operator><name>Path</name><operator>)</operator> <call><name><name>core</name><operator>.</operator><name>getResourceLoader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getInstancePath</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"Could not find expected core.properties file"</literal></expr></argument>, <argument><expr><call><name><name>Files</name><operator>.</operator><name>exists</name></name><argument_list>(<argument><expr><call><name><name>instancedir</name><operator>.</operator><name>resolve</name></name><argument_list>(<argument><expr><literal type="string">"core.properties"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
       <decl_stmt><decl><type><name>Path</name></type> <name>expected</name> <init>= <expr><call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>jetty</name><operator>.</operator><name>getSolrHome</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>toAbsolutePath</name><argument_list>()</argument_list></call><operator>.</operator><call><name>resolve</name><argument_list>(<argument><expr><call><name><name>core</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">620</literal></expr><operator>,</operator><expr><literal type="number">25</literal> <operator>+</operator><literal type="number">627</literal></expr><operator>,</operator><expr><literal type="number">22</literal> @@ <specifier>public</specifier> <name>class</name> <name>CollectionsAPIDistributedZkTest</name> extends <name>SolrCloudTestCase</name> <block>{
       <expr><name><name>Set</name><argument_list type="generic">&lt;<argument><name>ObjectName</name></argument>&gt;</argument_list></name> <name>mbeans</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
       <call><name><name>mbeans</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><call><name><name>server</name><operator>.</operator><name>queryNames</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
       <for>for <control>(<init><decl><type><specifier>final</specifier> <name>ObjectName</name></type> <name>mbean</name> <range>: <expr><name>mbeans</name></expr></range></decl></init>)</control> <block>{<block_content>
        <decl_stmt><decl><type><name>Object</name></type> <name>value</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Object</name></type> <name>indexDir</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Object</name></type> <name>name</name></decl>;</decl_stmt>
 
         <try>try <block>{<block_content>
          <if_stmt><if>if <condition>(<expr><operator>(</operator><operator>(</operator><name>value</name> <operator>=</operator> <call><name><name>server</name><operator>.</operator><name>getAttribute</name></name><argument_list>(<argument><expr><name>mbean</name></expr></argument>, <argument><expr><literal type="string">"category"</literal></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>value</name>
              <operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><call><name><name>Category</name><operator>.</operator><name>CORE</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>)</operator>
              <operator>&amp;&amp;</operator> <operator>(</operator><operator>(</operator><name>indexDir</name> <operator>=</operator> <call><name><name>server</name><operator>.</operator><name>getAttribute</name></name><argument_list>(<argument><expr><name>mbean</name></expr></argument>, <argument><expr><literal type="string">"coreName"</literal></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <literal type="null">null</literal><operator>)</operator>
              <operator>&amp;&amp;</operator> <operator>(</operator><operator>(</operator><name>indexDir</name> <operator>=</operator> <call><name><name>server</name><operator>.</operator><name>getAttribute</name></name><argument_list>(<argument><expr><name>mbean</name></expr></argument>, <argument><expr><literal type="string">"indexDir"</literal></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <literal type="null">null</literal><operator>)</operator>
              <operator>&amp;&amp;</operator> <operator>(</operator><operator>(</operator><name>name</name> <operator>=</operator> <call><name><name>server</name><operator>.</operator><name>getAttribute</name></name><argument_list>(<argument><expr><name>mbean</name></expr></argument>, <argument><expr><literal type="string">"name"</literal></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <literal type="null">null</literal><operator>)</operator></expr>)</condition> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>indexDirToShardNamesMap</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><call><name><name>indexDir</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
              <expr_stmt><expr><call><name><name>indexDirToShardNamesMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>indexDir</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>,
                  <argument><expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>props</name> <init>= <expr><call><name><name>mbean</name><operator>.</operator><name>getKeyPropertyList</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
          <decl_stmt><decl><type><name>String</name></type> <name>category</name> <init>= <expr><call><name><name>props</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"category"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <decl_stmt><decl><type><name>String</name></type> <name>name</name> <init>= <expr><call><name><name>props</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"name"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <if_stmt><if>if <condition>(<expr><operator>(</operator><name>category</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>category</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><call><name><name>Category</name><operator>.</operator><name>CORE</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>)</operator> <operator>&amp;&amp;</operator>
              <operator>(</operator><name>name</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>name</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><literal type="string">"indexDir"</literal></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition> <block>{<block_content>
            <decl_stmt><decl><type><name>String</name></type> <name>indexDir</name> <init>= <expr><call><name><name>server</name><operator>.</operator><name>getAttribute</name></name><argument_list>(<argument><expr><name>mbean</name></expr></argument>, <argument><expr><literal type="string">"Value"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>String</name></type> <name>key</name> <init>= <expr><call><name><name>props</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"dom2"</literal></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="string">"."</literal> <operator>+</operator> <call><name><name>props</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"dom3"</literal></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="string">"."</literal> <operator>+</operator> <call><name><name>props</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"dom4"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>indexDirToShardNamesMap</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><name>indexDir</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
              <expr_stmt><expr><call><name><name>indexDirToShardNamesMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>indexDir</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             </block_content>}</block></if></if_stmt>
            <expr_stmt><expr><call><name><name>indexDirToShardNamesMap</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>indexDir</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>add</name><argument_list>(
                <argument><expr><call><name><name>name</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>indexDirToShardNamesMap</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>indexDir</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>add</name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           </block_content>}</block></if></if_stmt>
         </block_content>}</block></if></if_stmt> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
          <comment type="line">// ignore, just continue - probably a "category" or "source" attribute</comment>
          <comment type="line">// ignore, just continue - probably a "Value" attribute</comment>
           <comment type="line">// not found</comment>
         </block_content>}</block></catch>
       </block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ReplicationFactorTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ReplicationFactorTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9441e3ff1ef</literal><operator>..</operator><literal type="number">9100eee67f4</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ReplicationFactorTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ReplicationFactorTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>cloud</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>invoke</name><operator>.</operator><name>MethodHandles</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>ServerSocket</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Locale</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">71</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">70</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>ReplicationFactorTest</name> extends <name>AbstractFullDistribZkTestBase</name> <block>{
     <return>return <expr><call><name>createProxiedJetty</name><argument_list>(<argument><expr><name>solrHome</name></expr></argument>, <argument><expr><name>dataDir</name></expr></argument>, <argument><expr><name>shardList</name></expr></argument>, <argument><expr><name>solrConfigOverride</name></expr></argument>, <argument><expr><name>schemaOverride</name></expr></argument>)</argument_list></call></expr>;</return>
   }</block></expr></expr_stmt>
   
  <function><type><specifier>protected</specifier> <name>int</name></type> <name>getNextAvailablePort</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>    
    <decl_stmt><decl><type><name>int</name></type> <name>port</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
    <try>try <init>(<decl><type><name>ServerSocket</name></type> <name>s</name> <init>= <expr><operator>new</operator> <call><name>ServerSocket</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
      <expr_stmt><expr><name>port</name> <operator>=</operator> <call><name><name>s</name><operator>.</operator><name>getLocalPort</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></try>
    <return>return <expr><name>port</name></expr>;</return>
  </block_content>}</block></function>

   <function><annotation>@<name>Test</name></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>test</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
     <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"replication factor test running"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestRandomRequestDistribution</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestRandomRequestDistribution</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">1c1c5c1ca33</literal><operator>..</operator><literal type="number">4756cd9e810</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestRandomRequestDistribution</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestRandomRequestDistribution</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">23</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">23</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 
<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>Counter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>TestUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>BaseDistributedSearchTestCase</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>SolrTestCaseJ4</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">40</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>cloud</name><operator>.</operator><name>ZkStateReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>Utils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>CoreContainer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrCore</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricManager</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>request</name><operator>.</operator><name>SolrRequestHandler</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">109</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">111</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestRandomRequestDistribution</name> extends <name>AbstractFullDistribZkTestBase</name>
     <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Integer</name></argument>&gt;</argument_list></name> <name>shardVsCount</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <for>for <control>(<init><decl><type><name>JettySolrRunner</name></type> <name>runner</name> <range>: <expr><name>jettys</name></expr></range></decl></init>)</control> <block>{<block_content>
       <decl_stmt><decl><type><name>CoreContainer</name></type> <name>container</name> <init>= <expr><call><name><name>runner</name><operator>.</operator><name>getCoreContainer</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>SolrMetricManager</name></type> <name>metricManager</name> <init>= <expr><call><name><name>container</name><operator>.</operator><name>getMetricManager</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <for>for <control>(<init><decl><type><name>SolrCore</name></type> <name>core</name> <range>: <expr><call><name><name>container</name><operator>.</operator><name>getCores</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
        <decl_stmt><decl><type><name>String</name></type> <name>registry</name> <init>= <expr><call><name><name>core</name><operator>.</operator><name>getCoreMetricManager</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getRegistryName</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Counter</name></type> <name>cnt</name> <init>= <expr><call><name><name>metricManager</name><operator>.</operator><name>counter</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><literal type="string">"requests"</literal></expr></argument>, <argument><expr><literal type="string">"QUERY.standard"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>SolrRequestHandler</name></type> <name>select</name> <init>= <expr><call><name><name>core</name><operator>.</operator><name>getRequestHandler</name></name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>long</name></type> <name>c</name> <init>= <expr><operator>(</operator><name>long</name><operator>)</operator> <call><name><name>select</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"requests"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>shardVsCount</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>core</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator> <name>c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<comment type="line">//        long c = (long) select.getStatistics().get("requests");</comment>
        <expr_stmt><expr><call><name><name>shardVsCount</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>core</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator> <call><name><name>cnt</name><operator>.</operator><name>getCount</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></for>
     </block_content>}</block></for>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">190</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">195</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestRandomRequestDistribution</name> extends <name>AbstractFullDistribZkTestBase</name></expr></expr_stmt>
       </block_content>}</block></function>
       <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><name>leaderCore</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
      <decl_stmt><decl><type><name>SolrMetricManager</name></type> <name>leaderMetricManager</name> <init>= <expr><call><name><name>leaderCore</name><operator>.</operator><name>getCoreDescriptor</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCoreContainer</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getMetricManager</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>String</name></type> <name>leaderRegistry</name> <init>= <expr><call><name><name>leaderCore</name><operator>.</operator><name>getCoreMetricManager</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getRegistryName</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>Counter</name></type> <name>cnt</name> <init>= <expr><call><name><name>leaderMetricManager</name><operator>.</operator><name>counter</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>leaderRegistry</name></expr></argument>, <argument><expr><literal type="string">"requests"</literal></expr></argument>, <argument><expr><literal type="string">"QUERY.standard"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

       <comment type="line">// All queries should be served by the active replica</comment>
       <comment type="line">// To make sure that's true we keep querying the down replica</comment>
       <comment type="line">// If queries are getting processed by the down replica then the cluster state hasn't updated for that replica</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">200</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">209</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestRandomRequestDistribution</name> extends <name>AbstractFullDistribZkTestBase</name>
         <name>count</name><operator>++</operator></expr>;</expr_stmt>
         <expr_stmt><expr><call><name><name>client</name><operator>.</operator><name>query</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>SolrQuery</name><argument_list>(<argument><expr><literal type="string">"*:*"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
        <decl_stmt><decl><type><name>SolrRequestHandler</name></type> <name>select</name> <init>= <expr><call><name><name>leaderCore</name><operator>.</operator><name>getRequestHandler</name></name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>long</name></type> <name>c</name> <init>= <expr><operator>(</operator><name>long</name><operator>)</operator> <call><name><name>select</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"requests"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>long</name></type> <name>c</name> <init>= <expr><call><name><name>cnt</name><operator>.</operator><name>getCount</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
         <if_stmt><if>if <condition>(<expr><name>c</name> <operator>==</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
           <break>break;</break> <comment type="line">// cluster state has got update locally</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">222</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">230</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestRandomRequestDistribution</name> extends <name>AbstractFullDistribZkTestBase</name>
         <call><name><name>client</name><operator>.</operator><name>query</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>SolrQuery</name><argument_list>(<argument><expr><literal type="string">"*:*"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><name>count</name><operator>++</operator></expr>;</expr_stmt>
 
        <decl_stmt><decl><type><name>SolrRequestHandler</name></type> <name>select</name> <init>= <expr><call><name><name>leaderCore</name><operator>.</operator><name>getRequestHandler</name></name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>long</name></type> <name>c</name> <init>= <expr><operator>(</operator><name>long</name><operator>)</operator> <call><name><name>select</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"requests"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>long</name></type> <name>c</name> <init>= <expr><call><name><name>cnt</name><operator>.</operator><name>getCount</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
         <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"Query wasn't served by leader"</literal></expr></argument>, <argument><expr><name>count</name></expr></argument>, <argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>ExitableDirectoryReaderTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>ExitableDirectoryReaderTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">5f0d537a7e2</literal><operator>..</operator><name>aa42664b400</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>ExitableDirectoryReaderTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>ExitableDirectoryReaderTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">19</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name></name>;</package>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>SolrTestCaseJ4</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricsMap</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>response</name><operator>.</operator><name>SolrQueryResponse</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>BeforeClass</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">88</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">88</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>ExitableDirectoryReaderTest</name> extends <name>SolrTestCaseJ4</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>testCacheAssumptions</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><name>String</name> <name>fq</name><operator>=</operator> <literal type="string">"name:d*"</literal></expr></block></expr></argument></throws></expr>;
     <name>SolrCore</name> <name>core</name> <operator>=</operator> <call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>SolrInfoMBean</name></type> <name>filterCacheStats</name> <init>= <expr><call><name><name>core</name><operator>.</operator><name>getInfoRegistry</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"filterCache"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name>fqInserts</name> <init>= <expr><operator>(</operator><name>long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>MetricsMap</name></type> <name>filterCacheStats</name> <init>= <expr><operator>(</operator><name>MetricsMap</name><operator>)</operator><call><name><name>core</name><operator>.</operator><name>getCoreMetricManager</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getRegistry</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getMetrics</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"CACHE.searcher.filterCache"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name>fqInserts</name> <init>= <expr><operator>(</operator><name>long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
    <decl_stmt><decl><type><name>SolrInfoMBean</name></type> <name>queryCacheStats</name> <init>= <expr><call><name><name>core</name><operator>.</operator><name>getInfoRegistry</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"queryResultCache"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name>qrInserts</name> <init>= <expr><operator>(</operator><name>long</name><operator>)</operator> <call><name><name>queryCacheStats</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>MetricsMap</name></type> <name>queryCacheStats</name> <init>= <expr><operator>(</operator><name>MetricsMap</name><operator>)</operator><call><name><name>core</name><operator>.</operator><name>getCoreMetricManager</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getRegistry</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getMetrics</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"CACHE.searcher.queryResultCache"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name>qrInserts</name> <init>= <expr><operator>(</operator><name>long</name><operator>)</operator> <call><name><name>queryCacheStats</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <comment type="line">// This gets 0 docs back. Use 10000 instead of 1 for timeAllowed and it gets 100 back and the for loop below</comment>
     <comment type="line">// succeeds.</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">105</literal></expr><operator>,</operator><expr><literal type="number">16</literal> <operator>+</operator><literal type="number">105</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@ <specifier>public</specifier> <name>class</name> <name>ExitableDirectoryReaderTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"Should have partial results"</literal></expr></argument>, <argument><expr><operator>(</operator><name>Boolean</name><operator>)</operator> <operator>(</operator><call><name><name>header</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>SolrQueryResponse</name><operator>.</operator><name>RESPONSE_HEADER_PARTIAL_RESULTS_KEY</name></name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;
 
     <call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"Should NOT have inserted partial results in the cache!"</literal></expr></argument>,
        <argument><expr><operator>(</operator><name>long</name><operator>)</operator> <call><name><name>queryCacheStats</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>qrInserts</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
        <expr_stmt><expr><operator>(</operator><name>long</name><operator>)</operator> <call><name><name>queryCacheStats</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><name>qrInserts</name></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt></try>
 
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"Should NOT have another insert"</literal></expr></argument>, <argument><expr><name>fqInserts</name></expr></argument>, <argument><expr><operator>(</operator><name>long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"Should NOT have another insert"</literal></expr></argument>, <argument><expr><name>fqInserts</name></expr></argument>, <argument><expr><operator>(</operator><name>long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <comment type="line">// At the end of all this, we should have no hits in the queryResultCache.</comment>
     <expr_stmt><expr><name>response</name> <operator>=</operator> <call><name>JQ</name><argument_list>(<argument><expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"q"</literal></expr></argument>, <argument><expr><literal type="string">"*:*"</literal></expr></argument>, <argument><expr><literal type="string">"fq"</literal></expr></argument>, <argument><expr><name>fq</name></expr></argument>, <argument><expr><literal type="string">"indent"</literal></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>, <argument><expr><literal type="string">"timeAllowed"</literal></expr></argument>, <argument><expr><name>longTimeout</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <comment type="line">// Check that we did insert this one.</comment>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"Hits should still be 0"</literal></expr></argument>, <argument><expr><operator>(</operator><name>long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0L</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"Inserts should be bumped"</literal></expr></argument>, <argument><expr><operator>(</operator><name>long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>fqInserts</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"Hits should still be 0"</literal></expr></argument>, <argument><expr><operator>(</operator><name>long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0L</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"Inserts should be bumped"</literal></expr></argument>, <argument><expr><operator>(</operator><name>long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>fqInserts</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <expr_stmt><expr><name>res</name> <operator>=</operator> <operator>(</operator><name>Map</name><operator>)</operator> <call><name><name>ObjectBuilder</name><operator>.</operator><name>fromJSON</name></name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>body</name> <operator>=</operator> <operator>(</operator><name>Map</name><operator>)</operator> <operator>(</operator><call><name><name>res</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"response"</literal></expr></argument>)</argument_list></call><operator>)</operator></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">130</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">130</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>class</name> <name>ExitableDirectoryReaderTest</name> extends <name>SolrTestCaseJ4</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>testQueryResults</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><name>String</name> <name>q</name> <operator>=</operator> <literal type="string">"name:e*"</literal></expr></block></expr></argument></throws></expr>;
     <name>SolrCore</name> <name>core</name> <operator>=</operator> <call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>SolrInfoMBean</name></type> <name>queryCacheStats</name> <init>= <expr><call><name><name>core</name><operator>.</operator><name>getInfoRegistry</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"queryResultCache"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>NamedList</name></type> <name>nl</name> <init>= <expr><call><name><name>queryCacheStats</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>MetricsMap</name></type> <name>queryCacheStats</name> <init>= <expr><operator>(</operator><name>MetricsMap</name><operator>)</operator><call><name><name>core</name><operator>.</operator><name>getCoreMetricManager</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getRegistry</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getMetrics</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"CACHE.searcher.queryResultCache"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>nl</name> <init>= <expr><call><name><name>queryCacheStats</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>long</name></type> <name>inserts</name> <init>= <expr><operator>(</operator><name>long</name><operator>)</operator> <call><name><name>nl</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name>String</name></type> <name>response</name> <init>= <expr><call><name>JQ</name><argument_list>(<argument><expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"q"</literal></expr></argument>, <argument><expr><name>q</name></expr></argument>, <argument><expr><literal type="string">"indent"</literal></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>, <argument><expr><literal type="string">"timeAllowed"</literal></expr></argument>, <argument><expr><literal type="string">"1"</literal></expr></argument>, <argument><expr><literal type="string">"sleep"</literal></expr></argument>, <argument><expr><name>sleep</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <comment type="line">// The queryResultCache should NOT get an entry here.</comment>
    <expr_stmt><expr><name>nl</name> <operator>=</operator> <call><name><name>queryCacheStats</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>nl</name> <operator>=</operator> <call><name><name>queryCacheStats</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"Should NOT have inserted partial results!"</literal></expr></argument>, <argument><expr><name>inserts</name></expr></argument>, <argument><expr><operator>(</operator><name>long</name><operator>)</operator> <call><name><name>nl</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>Map</name></type> <name>res</name> <init>= <expr><operator>(</operator><name>Map</name><operator>)</operator> <call><name><name>ObjectBuilder</name><operator>.</operator><name>fromJSON</name></name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">150</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">150</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ExitableDirectoryReaderTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><name>response</name> <operator>=</operator> <call><name>JQ</name><argument_list>(<argument><expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"q"</literal></expr></argument>, <argument><expr><name>q</name></expr></argument>, <argument><expr><literal type="string">"indent"</literal></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>, <argument><expr><literal type="string">"timeAllowed"</literal></expr></argument>, <argument><expr><name>longTimeout</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
     <comment type="line">// Check that we did insert this one.</comment>
    <name>NamedList</name> <name>nl2</name> <operator>=</operator> <call><name><name>queryCacheStats</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>nl2</name> <init>= <expr><call><name><name>queryCacheStats</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"Hits should still be 0"</literal></expr></argument>, <argument><expr><operator>(</operator><name>long</name><operator>)</operator> <call><name><name>nl</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>(</operator><name>long</name><operator>)</operator> <call><name><name>nl2</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"Inserts should be bumped"</literal></expr></argument>, <argument><expr><name>inserts</name> <operator>&lt;</operator> <operator>(</operator><name>long</name><operator>)</operator> <call><name><name>nl2</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>HdfsDirectoryFactoryTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>HdfsDirectoryFactoryTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">75f6c9b6ba7</literal><operator>..</operator><literal type="number">2a4dcc0513b</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>HdfsDirectoryFactoryTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>HdfsDirectoryFactoryTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>file</name><operator>.</operator><name>Path</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>text</name><operator>.</operator><name>SimpleDateFormat</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Date</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Iterator</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Locale</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Random</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>conf</name><operator>.</operator><name>Configuration</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>fs</name><operator>.</operator><name>FileSystem</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">30</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">30</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>hadoop</name><operator>.</operator><name>hdfs</name><operator>.</operator><name>MiniDFSCluster</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>Directory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>IndexOutput</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>store</name><operator>.</operator><name>NoLockFactory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>TestUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>SolrTestCaseJ4</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>cloud</name><operator>.</operator><name>hdfs</name><operator>.</operator><name>HdfsTestUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>DirectoryFactory</name><operator>.</operator><name>DirContext</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>handler</name><operator>.</operator><name>SnapShooter</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricsMap</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricManager</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>store</name><operator>.</operator><name>hdfs</name><operator>.</operator><name>HdfsLocalityReporter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>BadHdfsThreadsFilter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>MockCoreContainer</name><operator>.</operator><name>MockCoreDescriptor</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">175</literal></expr><operator>,</operator><expr><literal type="number">24</literal> <operator>+</operator><literal type="number">178</literal></expr><operator>,</operator><expr><literal type="number">24</literal> @@ <specifier>public</specifier> <name>class</name> <name>HdfsDirectoryFactoryTest</name> extends <name>SolrTestCaseJ4</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>testLocalityReporter</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><name>Configuration</name> <name>conf</name> <operator>=</operator> <call><name><name>HdfsTestUtil</name><operator>.</operator><name>getClientConfiguration</name></name><argument_list>(<argument><expr><name>dfsCluster</name></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
     <call><name><name>conf</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><literal type="string">"dfs.permissions.enabled"</literal></expr></argument>, <argument><expr><literal type="string">"false"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    

    <decl_stmt><decl><type><name>Random</name></type> <name>r</name> <init>= <expr><call><name>random</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>HdfsDirectoryFactory</name></type> <name>factory</name> <init>= <expr><operator>new</operator> <call><name>HdfsDirectoryFactory</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>SolrMetricManager</name></type> <name>metricManager</name> <init>= <expr><operator>new</operator> <call><name>SolrMetricManager</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>registry</name> <init>= <expr><call><name><name>TestUtil</name><operator>.</operator><name>randomSimpleString</name></name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>scope</name> <init>= <expr><call><name><name>TestUtil</name><operator>.</operator><name>randomSimpleString</name></name><argument_list>(<argument><expr><name>r</name></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>props</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>HdfsDirectoryFactory</name><operator>.</operator><name>HDFS_HOME</name></name></expr></argument>, <argument><expr><call><name><name>HdfsTestUtil</name><operator>.</operator><name>getURI</name></name><argument_list>(<argument><expr><name>dfsCluster</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="string">"/solr"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>HdfsDirectoryFactory</name><operator>.</operator><name>BLOCKCACHE_ENABLED</name></name></expr></argument>, <argument><expr><literal type="string">"false"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>HdfsDirectoryFactory</name><operator>.</operator><name>NRTCACHINGDIRECTORY_ENABLE</name></name></expr></argument>, <argument><expr><literal type="string">"false"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>props</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>HdfsDirectoryFactory</name><operator>.</operator><name>LOCALITYMETRICS_ENABLED</name></name></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>factory</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>NamedList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>(<argument><expr><name>props</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
    <decl_stmt><decl><type><name><name>Iterator</name><argument_list type="generic">&lt;<argument><name>SolrInfoMBean</name></argument>&gt;</argument_list></name></type> <name>it</name> <init>= <expr><call><name><name>factory</name><operator>.</operator><name>offerMBeans</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>iterator</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>it</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt> <comment type="line">// skip</comment>
    <decl_stmt><decl><type><name>SolrInfoMBean</name></type> <name>localityBean</name> <init>= <expr><call><name><name>it</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line">// brittle, but it's ok</comment>
    
    <comment type="line">// Make sure we have the right bean.</comment>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"Got the wrong bean: "</literal> <operator>+</operator> <call><name><name>localityBean</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"hdfs-locality"</literal></expr></argument>, <argument><expr><call><name><name>localityBean</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
    <expr_stmt><expr><call><name><name>factory</name><operator>.</operator><name>initializeMetrics</name></name><argument_list>(<argument><expr><name>metricManager</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// get the metrics map for the locality bean</comment>
    <decl_stmt><decl><type><name>MetricsMap</name></type> <name>metrics</name> <init>= <expr><operator>(</operator><name>MetricsMap</name><operator>)</operator><call><name><name>metricManager</name><operator>.</operator><name>registry</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getMetrics</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"OTHER."</literal> <operator>+</operator> <name>scope</name> <operator>+</operator> <literal type="string">".hdfsLocality"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <comment type="line">// We haven't done anything, so there should be no data</comment>
    <decl_stmt><decl><type><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name></type> <name>statistics</name> <init>= <expr><call><name><name>localityBean</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>statistics</name> <init>= <expr><call><name><name>metrics</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"Saw bytes that were not written: "</literal> <operator>+</operator> <call><name><name>statistics</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>HdfsLocalityReporter</name><operator>.</operator><name>LOCALITY_BYTES_TOTAL</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0l</literal></expr></argument>,
         <argument><expr><call><name><name>statistics</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>HdfsLocalityReporter</name><operator>.</operator><name>LOCALITY_BYTES_TOTAL</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(
<argument>@@ <expr><operator>-</operator><literal type="number">210</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">213</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>HdfsDirectoryFactoryTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     
     <comment type="line">// no locality because hostname not set</comment>
     <expr><call><name><name>factory</name><operator>.</operator><name>setHost</name></name><argument_list>(<argument><expr><literal type="string">"bogus"</literal></expr></argument>)</argument_list></call></expr>;
    <name>statistics</name> <operator>=</operator> <call><name><name>localityBean</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></block></expr></argument>;</argument_list></call></expr></expr_stmt>
    <expr_stmt><expr><name>statistics</name> <operator>=</operator> <call><name><name>metrics</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"Wrong number of total bytes counted: "</literal> <operator>+</operator> <call><name><name>statistics</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>HdfsLocalityReporter</name><operator>.</operator><name>LOCALITY_BYTES_TOTAL</name></name></expr></argument>)</argument_list></call></expr></argument>,
         <argument><expr><name>long_bytes</name></expr></argument>, <argument><expr><call><name><name>statistics</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>HdfsLocalityReporter</name><operator>.</operator><name>LOCALITY_BYTES_TOTAL</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"Wrong number of total blocks counted: "</literal> <operator>+</operator> <call><name><name>statistics</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>HdfsLocalityReporter</name><operator>.</operator><name>LOCALITY_BLOCKS_TOTAL</name></name></expr></argument>)</argument_list></call></expr></argument>,
<argument>@@ <expr><operator>-</operator><literal type="number">221</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">224</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>HdfsDirectoryFactoryTest</name> extends <name>SolrTestCaseJ4</name> <block>{
         
     <comment type="line">// set hostname and check again</comment>
     <expr><call><name><name>factory</name><operator>.</operator><name>setHost</name></name><argument_list>(<argument><expr><literal type="string">"127.0.0.1"</literal></expr></argument>)</argument_list></call></expr>;
    <name>statistics</name> <operator>=</operator> <call><name><name>localityBean</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></block></expr></argument>;</argument_list></call></expr></expr_stmt>
    <expr_stmt><expr><name>statistics</name> <operator>=</operator> <call><name><name>metrics</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(
         <argument><expr><literal type="string">"Did not count block as local after setting hostname: "</literal>
             <operator>+</operator> <call><name><name>statistics</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>HdfsLocalityReporter</name><operator>.</operator><name>LOCALITY_BYTES_LOCAL</name></name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>MockInfoBean</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>MockInfoBean</name><operator>.</operator><name>java</name></name>
<operator>new</operator> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <literal type="number">00000000000..dfa94ae1121</literal>
<operator>--</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>MockInfoBean</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal> <operator>+</operator><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">71</literal> @@</expr></argument></argument_list></call></expr></expr_stmt>
<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricRegistry</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricsMap</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricManager</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricProducer</name></name>;</import>

<class>class <name>MockInfoBean</name> <super_list><implements>implements <super><name>SolrInfoBean</name></super>, <super><name>SolrMetricProducer</name></super></implements></super_list> <block>{
  <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>metricNames</name> <init>= <expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>MetricRegistry</name></type> <name>registry</name></decl>;</decl_stmt>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>String</name></type> <name>getName</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><literal type="string">"mock"</literal></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>Category</name></type> <name>getCategory</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name><name>Category</name><operator>.</operator><name>OTHER</name></name></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>String</name></type> <name>getDescription</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><literal type="string">"mock"</literal></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>getMetricNames</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>metricNames</name></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>MetricRegistry</name></type> <name>getMetricRegistry</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name>registry</name></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>initializeMetrics</name><parameter_list>(<parameter><decl><type><name>SolrMetricManager</name></type> <name>manager</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>registryName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>scope</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name>registry</name> <operator>=</operator> <call><name><name>manager</name><operator>.</operator><name>registry</name></name><argument_list>(<argument><expr><name>registryName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>MetricsMap</name></type> <name>metricsMap</name> <init>= <expr><operator>new</operator> <call><name>MetricsMap</name><argument_list>(<argument><expr><lambda><parameter_list>(<parameter><decl><name>detailed</name></decl></parameter>, <parameter><decl><name>map</name></decl></parameter>)</parameter_list> -&gt; <block>{<block_content>
      <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"Integer"</literal></expr></argument>, <argument><expr><literal type="number">123</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"Double"</literal></expr></argument>,<argument><expr><literal type="number">567.534</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"Long"</literal></expr></argument>, <argument><expr><literal type="number">32352463l</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"Short"</literal></expr></argument>, <argument><expr><operator>(</operator><name>short</name><operator>)</operator> <literal type="number">32768</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"Byte"</literal></expr></argument>, <argument><expr><operator>(</operator><name>byte</name><operator>)</operator> <literal type="number">254</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"Float"</literal></expr></argument>, <argument><expr><literal type="number">3.456f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"String"</literal></expr></argument>,<argument><expr><literal type="string">"testing"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"Object"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>Object</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></lambda></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registryName</name></expr></argument>, <argument><expr><name>metricsMap</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSimpleName</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><operator>\</operator> <name>No</name> <name>newline</name> <name>at</name> <name>end</name> <name>of</name> <name>file</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>MockInfoMBean</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>MockInfoMBean</name><operator>.</operator><name>java</name></name>
<name>deleted</name> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <name>e0d566c47a0</name><operator>..</operator><literal type="number">00000000000</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>MockInfoMBean</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
@@ <operator>-</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">69</literal> <operator>+</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> @@</expr></expr_stmt>
<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URL</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>

<class>class <name>MockInfoMBean</name> <super_list><implements>implements <super><name>SolrInfoMBean</name></super></implements></super_list> <block>{
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>String</name></type> <name>getName</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><literal type="string">"mock"</literal></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>Category</name></type> <name>getCategory</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><name><name>Category</name><operator>.</operator><name>OTHER</name></name></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>String</name></type> <name>getDescription</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><literal type="string">"mock"</literal></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name><name>URL</name><index>[]</index></name></type> <name>getDocs</name><parameter_list>()</parameter_list> <block>{<block_content>
    <comment type="line">// TODO Auto-generated method stub</comment>
    <return>return <expr><literal type="null">null</literal></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>String</name></type> <name>getVersion</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><literal type="string">"mock"</literal></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>String</name></type> <name>getSource</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><literal type="string">"mock"</literal></expr>;</return>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unchecked"</literal></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>NamedList</name></type> <name>getStatistics</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>NamedList</name></type> <name>myList</name> <init>= <expr><operator>new</operator> <call><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Integer</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>myList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"Integer"</literal></expr></argument>, <argument><expr><literal type="number">123</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>myList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"Double"</literal></expr></argument>,<argument><expr><literal type="number">567.534</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>myList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"Long"</literal></expr></argument>, <argument><expr><literal type="number">32352463l</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>myList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"Short"</literal></expr></argument>, <argument><expr><operator>(</operator><name>short</name><operator>)</operator> <literal type="number">32768</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>myList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"Byte"</literal></expr></argument>, <argument><expr><operator>(</operator><name>byte</name><operator>)</operator> <literal type="number">254</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>myList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"Float"</literal></expr></argument>, <argument><expr><literal type="number">3.456f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>myList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"String"</literal></expr></argument>,<argument><expr><literal type="string">"testing"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>myList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"Object"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>Object</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>myList</name></expr>;</return>
  </block_content>}</block></function>
}</block></class>
<expr_stmt><expr><operator>\</operator> <name>No</name> <name>newline</name> <name>at</name> <name>end</name> <name>of</name> <name>file</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>MockQuerySenderListenerReqHandler</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>MockQuerySenderListenerReqHandler</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">367870a697f</literal><operator>..</operator><name>bcf6e9f91db</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>MockQuerySenderListenerReqHandler</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>MockQuerySenderListenerReqHandler</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name></name>;</package>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>handler</name><operator>.</operator><name>RequestHandlerBase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricManager</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>request</name><operator>.</operator><name>SolrQueryRequest</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>response</name><operator>.</operator><name>SolrQueryResponse</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">40</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">41</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>MockQuerySenderListenerReqHandler</name> extends <name>RequestHandlerBase</name> <block>{
     <expr><call><name><name>super</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>args</name></expr></argument>)</argument_list></call></expr>;
   }</block></expr></expr_stmt>
 
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>initializeMetrics</name><parameter_list>(<parameter><decl><type><name>SolrMetricManager</name></type> <name>manager</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>registryName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>scope</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>initializeMetrics</name></name><argument_list>(<argument><expr><name>manager</name></expr></argument>, <argument><expr><name>registryName</name></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>registerGauge</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>registryName</name></expr></argument>, <argument><expr><lambda><parameter_list>()</parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>initCounter</name><operator>.</operator><name>intValue</name></name><argument_list>()</argument_list></call></expr></block_content></block></lambda></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"initCount"</literal></expr></argument>, <argument><expr><call><name>getCategory</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

   <function><annotation>@<name>Override</name></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>handleRequestBody</name><parameter_list>(<parameter><decl><type><name>SolrQueryRequest</name></type> <name>req</name></decl></parameter>, <parameter><decl><type><name>SolrQueryResponse</name></type> <name>rsp</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
     <expr_stmt><expr><name><name>this</name><operator>.</operator><name>req</name></name> <operator>=</operator> <name>req</name></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">51</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">58</literal></expr><operator>,</operator><expr><literal type="number">4</literal> @@ <specifier>public</specifier> <name>class</name> <name>MockQuerySenderListenerReqHandler</name> extends <name>RequestHandlerBase</name> <block>{
     <expr><name>String</name> <name>result</name> <operator>=</operator> <literal type="null">null</literal></expr>;</block></expr></expr_stmt>
     <return>return <expr><name>result</name></expr>;</return>
   </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>getStatistics</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>lst</name> <init>= <expr><call><name><name>super</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>lst</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"initCount"</literal></expr></argument>, <argument><expr><call><name><name>initCounter</name><operator>.</operator><name>intValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>lst</name></expr>;</return>
  </block_content>}</block></function>
 
 </block_content>}</block></for>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>RequestHandlersTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>RequestHandlersTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9a953e1ccca</literal><operator>..</operator><literal type="number">3c13645702c</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>RequestHandlersTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>RequestHandlersTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@
  <operator>*</operator><operator>/</operator></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>Gauge</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>SolrTestCaseJ4</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricManager</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>request</name><operator>.</operator><name>SolrRequestHandler</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>stats</name><operator>.</operator><name>MetricUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>BeforeClass</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">30</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">34</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>RequestHandlersTest</name> extends <name>SolrTestCaseJ4</name> <block>{
 
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testInitCount</name><argument_list>()</argument_list></call> <block>{
    <expr><name>SolrCore</name> <name>core</name> <operator>=</operator> <call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call></expr>;
    <name>SolrRequestHandler</name> <name>handler</name> <operator>=</operator> <call><name><name>core</name><operator>.</operator><name>getRequestHandler</name></name><argument_list>( <argument><expr><literal type="string">"mock"</literal></expr></argument> )</argument_list></call></block></expr>;
    <name>String</name> <name>registry</name> <operator>=</operator> <call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCoreMetricManager</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getRegistryName</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>SolrMetricManager</name></type> <name>manager</name> <init>= <expr><call><name><name>h</name><operator>.</operator><name>getCoreContainer</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getMetricManager</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Gauge</name><argument_list type="generic">&lt;<argument><name>Number</name></argument>&gt;</argument_list></name></type> <name>g</name> <init>= <expr><operator>(</operator><name><name>Gauge</name><argument_list type="generic">&lt;<argument><name>Number</name></argument>&gt;</argument_list></name><operator>)</operator><call><name><name>manager</name><operator>.</operator><name>registry</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getMetrics</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"QUERY.mock.initCount"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"Incorrect init count"</literal></expr></argument>,
                 <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>handler</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"initCount"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><literal type="number">1</literal></expr><operator>,</operator> <expr><call><name><name>g</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>intValue</name><argument_list>()</argument_list></call></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt></for>
   }</block>
 
   @<name>Test</name>
@@ <operator>-</operator><literal type="number">105</literal>,<literal type="number">11</literal> <operator>+</operator><literal type="number">110</literal>,<literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>RequestHandlersTest</name> extends <name>SolrTestCaseJ4</name> <block>{
         <expr><literal type="string">"text"</literal></expr>, <expr><literal type="string">"line up and fly directly at the enemy death cannons, clogging them with wreckage!"</literal></expr>))</block></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertU</name><argument_list>(<argument><expr><call><name>commit</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <decl_stmt><decl><type><name>NamedList</name></type> <name>updateStats</name> <init>= <expr><call><name><name>updateHandler</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>NamedList</name></type> <name>termStats</name> <init>= <expr><call><name><name>termHandler</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>updateStats</name> <init>= <expr><call><name><name>MetricUtils</name><operator>.</operator><name>convertMetrics</name></name><argument_list>(<argument><expr><call><name><name>updateHandler</name><operator>.</operator><name>getMetricRegistry</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>updateHandler</name><operator>.</operator><name>getMetricNames</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>termStats</name> <init>= <expr><call><name><name>MetricUtils</name><operator>.</operator><name>convertMetrics</name></name><argument_list>(<argument><expr><call><name><name>termHandler</name><operator>.</operator><name>getMetricRegistry</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>termHandler</name><operator>.</operator><name>getMetricNames</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
    <decl_stmt><decl><type><name>Double</name></type> <name>updateTime</name> <init>= <expr><operator>(</operator><name>Double</name><operator>)</operator> <call><name><name>updateStats</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"avgTimePerRequest"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Double</name></type> <name>termTime</name> <init>= <expr><operator>(</operator><name>Double</name><operator>)</operator> <call><name><name>termStats</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"avgTimePerRequest"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Long</name></type> <name>updateTime</name> <init>= <expr><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>updateStats</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"UPDATE./update.totalTime"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Long</name></type> <name>termTime</name> <init>= <expr><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>termStats</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"QUERY./terms.totalTime"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><literal type="string">"RequestHandlers should not share statistics!"</literal></expr></argument>, <argument><expr><call><name><name>updateTime</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>termTime</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></super_list></class_decl>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrCoreTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrCoreTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">695e8693ec1</literal><operator>..</operator><name>c042bd66c4e</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrCoreTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>SolrCoreTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">245</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">245</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrCoreTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <comment type="line">//TEst that SolrInfoMBeans are registered, including SearchComponents</comment>
     <expr><name>SolrCore</name> <name>core</name> <operator>=</operator> <call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call></expr>;
 
    <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>SolrInfoMBean</name></argument>&gt;</argument_list></name> <name>infoRegistry</name> <operator>=</operator> <call><name><name>core</name><operator>.</operator><name>getInfoRegistry</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>SolrInfoBean</name></argument>&gt;</argument_list></name></type> <name>infoRegistry</name> <init>= <expr><call><name><name>core</name><operator>.</operator><name>getInfoRegistry</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"infoRegistry Size: "</literal> <operator>+</operator> <call><name><name>infoRegistry</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">" is not greater than: "</literal> <operator>+</operator> <literal type="number">0</literal></expr></argument>, <argument><expr><call><name><name>infoRegistry</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <comment type="line">//try out some that we know are in the config</comment>
    <decl_stmt><decl><type><name>SolrInfoMBean</name></type> <name>bean</name> <init>= <expr><call><name><name>infoRegistry</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>SpellCheckComponent</name><operator>.</operator><name>COMPONENT_NAME</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>SolrInfoBean</name></type> <name>bean</name> <init>= <expr><call><name><name>infoRegistry</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>SpellCheckComponent</name><operator>.</operator><name>COMPONENT_NAME</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><literal type="string">"bean not registered"</literal></expr></argument>, <argument><expr><name>bean</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <comment type="line">//try a default one</comment>
     <expr_stmt><expr><name>bean</name> <operator>=</operator> <call><name><name>infoRegistry</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name><name>QueryComponent</name><operator>.</operator><name>COMPONENT_NAME</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestJmxIntegration</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestJmxIntegration</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f841f92781f</name><operator>..</operator><name>db941f7efb3</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestJmxIntegration</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestJmxIntegration</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@
  <operator>*</operator><operator>/</operator></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name></name>;</package>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>JmxMonitoredMap</name><operator>.</operator><name>SolrDynamicMBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricManager</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricReporter</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>reporters</name><operator>.</operator><name>JmxObjectNameFactory</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>reporters</name><operator>.</operator><name>SolrJmxReporter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>AbstractSolrTestCase</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>AfterClass</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>BeforeClass</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">32</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@</expr></expr_stmt> <import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>AttributeNotFoundException</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>MBeanAttributeInfo</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>MBeanInfo</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>MBeanServer</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>MalformedObjectNameException</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>ObjectInstance</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>ObjectName</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>invoke</name><operator>.</operator><name>MethodHandles</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>management</name><operator>.</operator><name>ManagementFactory</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Hashtable</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">49</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">50</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestJmxIntegration</name> extends <name>AbstractSolrTestCase</name> <block>{
   <expr><specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>Logger</name> <name>log</name> <operator>=</operator> <call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><call><name><name>MethodHandles</name><operator>.</operator><name>lookup</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>lookupClass</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
   <specifier>private</specifier> <specifier>static</specifier> <name>MBeanServer</name> <name>mbeanServer</name> <operator>=</operator> <literal type="null">null</literal></block></expr>;</expr_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>JmxObjectNameFactory</name></type> <name>nameFactory</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>String</name></type> <name>registryName</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
 
   <function><annotation>@<name>BeforeClass</name></annotation>
   <type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>beforeClass</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">61</literal></expr><operator>,</operator><expr><literal type="number">25</literal> <operator>+</operator><literal type="number">64</literal></expr><operator>,</operator><expr><literal type="number">30</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestJmxIntegration</name> extends <name>AbstractSolrTestCase</name> <block>{
 
     <expr><call><name>initCore</name><argument_list>(<argument><expr><literal type="string">"solrconfig.xml"</literal></expr></argument>, <argument><expr><literal type="string">"schema.xml"</literal></expr></argument>)</argument_list></call></expr>;
 
    <comment type="line">// we should be able to se that the core has JmxIntegration enabled</comment>
    <call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"JMX not enabled"</literal></expr></argument>,
               <argument><expr><call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSolrConfig</name><argument_list>()</argument_list></call><operator>.</operator><name><name>jmxConfig</name><operator>.</operator><name>enabled</name></name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <comment type="line">// and we should be able to see that the the monitor map found </comment>
    <comment type="line">// a JMX server to use, which refers to the server we started</comment>

    <decl_stmt><decl><type><name>Map</name></type> <name>registry</name> <init>= <expr><call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getInfoRegistry</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"info registry is not a JMX monitored map"</literal></expr></argument>,
               <argument><expr><name>registry</name> <operator>instanceof</operator> <name>JmxMonitoredMap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>mbeanServer</name> <operator>=</operator> <operator>(</operator><operator>(</operator><name>JmxMonitoredMap</name><operator>)</operator><name>registry</name><operator>)</operator><operator>.</operator><call><name>getServer</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><literal type="string">"No JMX server found by monitor map"</literal></expr></argument>,
                  <argument><expr><name>mbeanServer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// NOTE: we can't garuntee that "mbeanServer == platformServer"</comment>
    <comment type="line">// the JVM may have mutiple MBean servers funning when the test started</comment>
    <comment type="line">// and the contract of not specifying one when configuring solr with</comment>
    <comment type="line">// &lt;jmx /&gt; is that it will use whatever the "first" MBean server </comment>
    <comment type="line">// we should be able to see that the core has JmxIntegration enabled</comment>
    <expr_stmt><expr><name>registryName</name> <operator>=</operator> <call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCoreMetricManager</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getRegistryName</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>SolrMetricManager</name></type> <name>manager</name> <init>= <expr><call><name><name>h</name><operator>.</operator><name>getCoreContainer</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getMetricManager</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>SolrMetricReporter</name></argument>&gt;</argument_list></name></type> <name>reporters</name> <init>= <expr><call><name><name>manager</name><operator>.</operator><name>getReporters</name></name><argument_list>(<argument><expr><name>registryName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>reporters</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>SolrMetricReporter</name></type> <name>reporter</name> <init>= <expr><call><name><name>reporters</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>iterator</name><argument_list>()</argument_list></call><operator>.</operator><call><name>next</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><name>reporter</name> <operator>instanceof</operator> <name>SolrJmxReporter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>SolrJmxReporter</name></type> <name>jmx</name> <init>= <expr><operator>(</operator><name>SolrJmxReporter</name><operator>)</operator><name>reporter</name></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"JMX not enabled"</literal></expr></argument>, <argument><expr><call><name><name>jmx</name><operator>.</operator><name>isActive</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="line">// and we should be able to see that the reporter</comment>
    <comment type="line">// refers to the JMX server we started</comment>

    <expr_stmt><expr><name>mbeanServer</name> <operator>=</operator> <call><name><name>jmx</name><operator>.</operator><name>getMBeanServer</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><literal type="string">"No JMX server found in the reporter"</literal></expr></argument>,
        <argument><expr><name>mbeanServer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// NOTE: we can't guarantee that "mbeanServer == platformServer"</comment>
    <comment type="line">// the JVM may have multiple MBean servers running when the test started</comment>
    <comment type="line">// and the contract of not specifying one when configuring solr.xml without</comment>
    <comment type="line">// agetnId or serviceUrl is that it will use whatever the "first" MBean server</comment>
     <comment type="line">// returned by the JVM is.</comment>

    <expr_stmt><expr><name>nameFactory</name> <operator>=</operator> <operator>new</operator> <call><name>JmxObjectNameFactory</name><argument_list>(<argument><expr><literal type="string">"default"</literal></expr></argument>, <argument><expr><name>registryName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
   <annotation>@<name>AfterClass</name></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">93</literal></expr><operator>,</operator><expr><literal type="number">34</literal> <operator>+</operator><literal type="number">101</literal></expr><operator>,</operator><expr><literal type="number">38</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestJmxIntegration</name> extends <name>AbstractSolrTestCase</name> <block>{
 
     <expr><name><name>Set</name><argument_list type="generic">&lt;<argument><name>ObjectInstance</name></argument>&gt;</argument_list></name> <name>objects</name> <operator>=</operator> <call><name><name>mbeanServer</name><operator>.</operator><name>queryMBeans</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;
     <call><name>assertFalse</name><argument_list>(<argument><expr><literal type="string">"No objects found in mbean server"</literal></expr></argument>, <argument><expr><call><name><name>objects</name>
            <operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
        <expr_stmt><expr><operator>.</operator><call><name>isEmpty</name><argument_list>()</argument_list></call></expr></expr_stmt>)</block_content></block>;</function>
     <decl_stmt><decl><type><name>int</name></type> <name>numDynamicMbeans</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
     <for>for <control>(<init><decl><type><name>ObjectInstance</name></type> <name>o</name> <range>: <expr><name>objects</name></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><literal type="string">"Null name on: "</literal> <operator>+</operator> <call><name><name>o</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>o</name><operator>.</operator><name>getObjectName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>MBeanInfo</name></type> <name>mbeanInfo</name> <init>= <expr><call><name><name>mbeanServer</name><operator>.</operator><name>getMBeanInfo</name></name><argument_list>(<argument><expr><call><name><name>o</name><operator>.</operator><name>getObjectName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><call><name><name>mbeanInfo</name><operator>.</operator><name>getClassName</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>endsWith</name><argument_list>(<argument><expr><call><name><name>SolrDynamicMBean</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>ObjectName</name></type> <name>name</name> <init>= <expr><call><name><name>o</name><operator>.</operator><name>getObjectName</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><literal type="string">"Null name on: "</literal> <operator>+</operator> <call><name><name>o</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>MBeanInfo</name></type> <name>mbeanInfo</name> <init>= <expr><call><name><name>mbeanServer</name><operator>.</operator><name>getMBeanInfo</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><call><name><name>name</name><operator>.</operator><name>getDomain</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><literal type="string">"solr"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><name>numDynamicMbeans</name><operator>++</operator></expr>;</expr_stmt>
         <decl_stmt><decl><type><name><name>MBeanAttributeInfo</name><index>[]</index></name></type> <name>attrs</name> <init>= <expr><call><name><name>mbeanInfo</name><operator>.</operator><name>getAttributes</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"No Attributes found for mbean: "</literal> <operator>+</operator> <name>mbeanInfo</name></expr></argument>, 
                   <argument><expr><literal type="number">0</literal> <operator>&lt;</operator> <name><name>attrs</name><operator>.</operator><name>length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><call><name><name>name</name><operator>.</operator><name>getKeyProperty</name></name><argument_list>(<argument><expr><literal type="string">"name"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><literal type="string">"fetcher"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <comment type="line">// no attributes without active replication</comment>
          <continue>continue;</continue>
        </block_content>}</block></if></if_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"No Attributes found for mbean: "</literal> <operator>+</operator> <call><name><name>o</name><operator>.</operator><name>getObjectName</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">", "</literal> <operator>+</operator> <name>mbeanInfo</name></expr></argument>,
            <argument><expr><literal type="number">0</literal> <operator>&lt;</operator> <name><name>attrs</name><operator>.</operator><name>length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <for>for <control>(<init><decl><type><name>MBeanAttributeInfo</name></type> <name>attr</name> <range>: <expr><name>attrs</name></expr></range></decl></init>)</control> <block>{<block_content>
           <comment type="line">// ensure every advertised attribute is gettable</comment>
           <try>try <block>{<block_content>
             <decl_stmt><decl><type><name>Object</name></type> <name>trash</name> <init>= <expr><call><name><name>mbeanServer</name><operator>.</operator><name>getAttribute</name></name><argument_list>(<argument><expr><call><name><name>o</name><operator>.</operator><name>getObjectName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>attr</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
           </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>AttributeNotFoundException</name></name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
             <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><literal type="string">"Unable to featch attribute for "</literal> <operator>+</operator> <call><name><name>o</name><operator>.</operator><name>getObjectName</name></name><argument_list>()</argument_list></call>
                                       <operator>+</operator> <literal type="string">": "</literal> <operator>+</operator> <call><name><name>attr</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
                <expr_stmt><expr><operator>+</operator> <literal type="string">": "</literal> <operator>+</operator> <call><name><name>attr</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr><operator>,</operator> <expr><name>e</name></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt></catch></try>
           </block_content>}</block></for>
         </block_content>}</block></if></if_stmt>
       </block_content>}</block></if></if_stmt>
     </block_content>}</block></for>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"No SolrDynamicMBeans found"</literal></expr></argument>, <argument><expr><literal type="number">0</literal> <operator>&lt;</operator> <name>numDynamicMbeans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"No MBeans found"</literal></expr></argument>, <argument><expr><literal type="number">0</literal> <operator>&lt;</operator> <name>numDynamicMbeans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></if></if_stmt>
 
   <function><annotation>@<name>Test</name></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>testJmxUpdate</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
 
    <decl_stmt><decl><type><name>SolrInfoMBean</name></type> <name>bean</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>SolrInfoBean</name></type> <name>bean</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
     <comment type="line">// wait until searcher is registered</comment>
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><literal type="number">100</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
       <expr_stmt><expr><name>bean</name> <operator>=</operator> <call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getInfoRegistry</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"searcher"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">128</literal></expr><operator>,</operator><expr><literal type="number">18</literal> <operator>+</operator><literal type="number">140</literal></expr><operator>,</operator><expr><literal type="number">20</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestJmxIntegration</name> extends <name>AbstractSolrTestCase</name> <block>{
       <expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">250</literal></expr></argument>)</argument_list></call></expr>;
     }</block></expr></expr_stmt>
     <if_stmt><if>if <condition>(<expr><name>bean</name><operator>==</operator><literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content> <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><literal type="string">"searcher was never registered"</literal></expr></argument>)</argument_list></call></expr>;</throw></block_content></block></if></if_stmt>
    <decl_stmt><decl><type><name>ObjectName</name></type> <name>searcher</name> <init>= <expr><call><name>getObjectName</name><argument_list>(<argument><expr><literal type="string">"searcher"</literal></expr></argument>, <argument><expr><name>bean</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ObjectName</name></type> <name>searcher</name> <init>= <expr><call><name><name>nameFactory</name><operator>.</operator><name>createName</name></name><argument_list>(<argument><expr><literal type="string">"gauge"</literal></expr></argument>, <argument><expr><name>registryName</name></expr></argument>, <argument><expr><literal type="string">"SEARCHER.searcher.*"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Mbeans in server: "</literal> <operator>+</operator> <call><name><name>mbeanServer</name><operator>.</operator><name>queryNames</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>ObjectInstance</name></argument>&gt;</argument_list></name></type> <name>objects</name> <init>= <expr><call><name><name>mbeanServer</name><operator>.</operator><name>queryMBeans</name></name><argument_list>(<argument><expr><name>searcher</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><literal type="string">"No mbean found for SolrIndexSearcher"</literal></expr></argument>, <argument><expr><call><name><name>mbeanServer</name><operator>.</operator><name>queryMBeans</name></name><argument_list>(<argument><expr><name>searcher</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>isEmpty</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <decl_stmt><decl><type><name>int</name></type> <name>oldNumDocs</name> <init>=  <expr><operator>(</operator><name>Integer</name><operator>)</operator><call><name><name>mbeanServer</name><operator>.</operator><name>getAttribute</name></name><argument_list>(<argument><expr><name>searcher</name></expr></argument>, <argument><expr><literal type="string">"numDocs"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ObjectName</name></type> <name>name</name> <init>= <expr><call><name><name>nameFactory</name><operator>.</operator><name>createName</name></name><argument_list>(<argument><expr><literal type="string">"gauge"</literal></expr></argument>, <argument><expr><name>registryName</name></expr></argument>, <argument><expr><literal type="string">"SEARCHER.searcher.numDocs"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>oldNumDocs</name> <init>=  <expr><operator>(</operator><name>Integer</name><operator>)</operator><call><name><name>mbeanServer</name><operator>.</operator><name>getAttribute</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><literal type="string">"Value"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertU</name><argument_list>(<argument><expr><call><name>adoc</name><argument_list>(<argument><expr><literal type="string">"id"</literal></expr></argument>, <argument><expr><literal type="string">"1"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertU</name><argument_list>(<argument><expr><literal type="string">"commit"</literal></expr></argument>, <argument><expr><call><name>commit</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>numDocs</name> <init>= <expr><operator>(</operator><name>Integer</name><operator>)</operator><call><name><name>mbeanServer</name><operator>.</operator><name>getAttribute</name></name><argument_list>(<argument><expr><name>searcher</name></expr></argument>, <argument><expr><literal type="string">"numDocs"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>numDocs</name> <init>= <expr><operator>(</operator><name>Integer</name><operator>)</operator><call><name><name>mbeanServer</name><operator>.</operator><name>getAttribute</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><literal type="string">"Value"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"New numDocs is same as old numDocs as reported by JMX"</literal></expr></argument>,
            <argument><expr><name>numDocs</name> <operator>&gt;</operator> <name>oldNumDocs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>numDocs</name> <operator>&gt;</operator> <name>oldNumDocs</name></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt></for>
   </block_content>}</block></function>
 
   <annotation>@<name>Test</name></annotation> <annotation>@<name>Ignore</name><argument_list>(<argument><expr><literal type="string">"timing problem? https://issues.apache.org/jira/browse/SOLR-2715"</literal></expr></argument>)</argument_list></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">183</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">197</literal></expr><operator>,</operator><expr><literal type="number">4</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestJmxIntegration</name> extends <name>AbstractSolrTestCase</name> <block>{
     <expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"After Reload: Size of infoRegistry: "</literal> <operator>+</operator> <name>registrySize</name> <operator>+</operator> <literal type="string">" MBeans: "</literal> <operator>+</operator> <name>newNumberOfObjects</name></expr></argument>)</argument_list></call></expr>;
     <call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"Number of registered MBeans is not the same as info registry size"</literal></expr></argument>, <argument><expr><name>registrySize</name></expr></argument>, <argument><expr><name>newNumberOfObjects</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
   </block_content>}</block></function>

  <function><type><specifier>private</specifier> <name>ObjectName</name></type> <name>getObjectName</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>key</name></decl></parameter>, <parameter><decl><type><name>SolrInfoMBean</name></type> <name>infoBean</name></decl></parameter>)</parameter_list>
          <throws>throws <argument><expr><name>MalformedObjectNameException</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name><name>Hashtable</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>map</name> <init>= <expr><operator>new</operator> <call><name><name>Hashtable</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"type"</literal></expr></argument>, <argument><expr><name>key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"id"</literal></expr></argument>, <argument><expr><call><name><name>infoBean</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>coreName</name> <init>= <expr><call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getName</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <return>return <expr><call><name><name>ObjectName</name><operator>.</operator><name>getInstance</name></name><argument_list>(<argument><expr><operator>(</operator><literal type="string">"solr"</literal> <operator>+</operator> <operator>(</operator><ternary><condition><expr><literal type="null">null</literal> <operator>!=</operator> <name>coreName</name></expr> ?</condition><then> <expr><literal type="string">"/"</literal> <operator>+</operator> <name>coreName</name></expr> </then><else>: <expr><literal type="string">""</literal></expr></else></ternary><operator>)</operator><operator>)</operator></expr></argument>, <argument><expr><name>map</name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></function>
</block_content>}</block></function>

</block_content>}</block></if></if_stmt>
<expr_stmt><expr><operator>\</operator> <name>No</name> <name>newline</name> <name>at</name> <name>end</name> <name>of</name> <name>file</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestJmxMonitoredMap</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestJmxMonitoredMap</name><operator>.</operator><name>java</name></name>
<name>deleted</name> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <name>aa107bce0bf</name><operator>..</operator><literal type="number">00000000000</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestJmxMonitoredMap</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
@@ <operator>-</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">217</literal> <operator>+</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> @@</expr></expr_stmt>
<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name></name>;</package>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrConfig</name><operator>.</operator><name>JmxConfiguration</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>After</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Before</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>

<import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>MBeanServerConnection</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>ObjectInstance</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>ObjectName</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>Query</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>remote</name><operator>.</operator><name>JMXConnector</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>remote</name><operator>.</operator><name>JMXConnectorFactory</name></name>;</import>
<import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>remote</name><operator>.</operator><name>JMXServiceURL</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>invoke</name><operator>.</operator><name>MethodHandles</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>ServerSocket</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>rmi</name><operator>.</operator><name>registry</name><operator>.</operator><name>LocateRegistry</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>rmi</name><operator>.</operator><name>server</name><operator>.</operator><name>RMIServerSocketFactory</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>

<import>import static <name><name>org</name><operator>.</operator><name>hamcrest</name><operator>.</operator><name>CoreMatchers</name><operator>.</operator><name>allOf</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>hamcrest</name><operator>.</operator><name>CoreMatchers</name><operator>.</operator><name>equalTo</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>hamcrest</name><operator>.</operator><name>CoreMatchers</name><operator>.</operator><name>instanceOf</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Test for JmxMonitoredMap
 *
 *
 * @since solr 1.3
 */</comment>
<class><specifier>public</specifier> class <name>TestJmxMonitoredMap</name> <super_list><extends>extends <super><name>LuceneTestCase</name></super></extends></super_list> <block>{

  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Logger</name></type> <name>log</name> <init>= <expr><call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><call><name><name>MethodHandles</name><operator>.</operator><name>lookup</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>lookupClass</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>private</specifier> <name>int</name></type> <name>port</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>private</specifier> <name>JMXConnector</name></type> <name>connector</name></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>private</specifier> <name>MBeanServerConnection</name></type> <name>mbeanServer</name></decl>;</decl_stmt>

  <decl_stmt><decl><type><specifier>private</specifier> <name><name>JmxMonitoredMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>SolrInfoMBean</name></argument>&gt;</argument_list></name></type> <name>monitoredMap</name></decl>;</decl_stmt>

  <function><annotation>@<name>Override</name></annotation>
  <annotation>@<name>Before</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>setUp</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>setUp</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>oldHost</name> <init>= <expr><call><name><name>System</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><literal type="string">"java.rmi.server.hostname"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <try>try <block>{<block_content>
      <comment type="line">// this stupid sysprop thing is needed, because remote stubs use an</comment>
      <comment type="line">// arbitrary local ip to connect</comment>
      <comment type="line">// See: http://weblogs.java.net/blog/emcmanus/archive/2006/12/multihomed_comp.html</comment>
      <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"java.rmi.server.hostname"</literal></expr></argument>, <argument><expr><literal type="string">"127.0.0.1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <class>class <name>LocalhostRMIServerSocketFactory</name> <super_list><implements>implements <super><name>RMIServerSocketFactory</name></super></implements></super_list> <block>{
        <decl_stmt><decl><type><name>ServerSocket</name></type> <name>socket</name></decl>;</decl_stmt>
        
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>public</specifier> <name>ServerSocket</name></type> <name>createServerSocket</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>port</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
          <return>return <expr><name>socket</name> <operator>=</operator> <operator>new</operator> <call><name>ServerSocket</name><argument_list>(<argument><expr><name>port</name></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block></function>
      }</block></class><empty_stmt>;</empty_stmt>
      <decl_stmt><decl><type><name>LocalhostRMIServerSocketFactory</name></type> <name>factory</name> <init>= <expr><operator>new</operator> <call><name>LocalhostRMIServerSocketFactory</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>LocateRegistry</name><operator>.</operator><name>createRegistry</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>factory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>port</name> <operator>=</operator> <call><name><name>factory</name><operator>.</operator><name>socket</name><operator>.</operator><name>getLocalPort</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Using port: "</literal> <operator>+</operator> <name>port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>String</name></type> <name>url</name> <init>= <expr><literal type="string">"service:jmx:rmi:///jndi/rmi://127.0.0.1:"</literal><operator>+</operator><name>port</name><operator>+</operator><literal type="string">"/solrjmx"</literal></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>JmxConfiguration</name></type> <name>config</name> <init>= <expr><operator>new</operator> <call><name>JmxConfiguration</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>url</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><name>monitoredMap</name> <operator>=</operator> <operator>new</operator> <call><name><name>JmxMonitoredMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>JMXServiceURL</name></type> <name>u</name> <init>= <expr><operator>new</operator> <call><name>JMXServiceURL</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><name>connector</name> <operator>=</operator> <call><name><name>JMXConnectorFactory</name><operator>.</operator><name>connect</name></name><argument_list>(<argument><expr><name>u</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>mbeanServer</name> <operator>=</operator> <call><name><name>connector</name><operator>.</operator><name>getMBeanServerConnection</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <finally>finally <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>oldHost</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>clearProperty</name></name><argument_list>(<argument><expr><literal type="string">"java.rmi.server.hostname"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"java.rmi.server.hostname"</literal></expr></argument>, <argument><expr><name>oldHost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></else></if_stmt>
    </block_content>}</block></finally></try>
  </block_content>}</block></function>

  <function><annotation>@<name>Override</name></annotation>
  <annotation>@<name>After</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>tearDown</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <try>try <block>{<block_content>
      <expr_stmt><expr><call><name><name>connector</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
    </block_content>}</block></catch></try>
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>tearDown</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testTypeName</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws><block>{<block_content>
    <decl_stmt><decl><type><name>MockInfoMBean</name></type> <name>mock</name> <init>= <expr><operator>new</operator> <call><name>MockInfoMBean</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>monitoredMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"mock"</literal></expr></argument>, <argument><expr><name>mock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>NamedList</name></type> <name>dynamicStats</name> <init>= <expr><call><name><name>mock</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>dynamicStats</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>dynamicStats</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"Integer"</literal></expr></argument>)</argument_list></call> <operator>instanceof</operator> <name>Integer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>dynamicStats</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"Double"</literal></expr></argument>)</argument_list></call> <operator>instanceof</operator> <name>Double</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>dynamicStats</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"Long"</literal></expr></argument>)</argument_list></call> <operator>instanceof</operator> <name>Long</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>dynamicStats</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"Short"</literal></expr></argument>)</argument_list></call> <operator>instanceof</operator> <name>Short</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>dynamicStats</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"Byte"</literal></expr></argument>)</argument_list></call> <operator>instanceof</operator> <name>Byte</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>dynamicStats</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"Float"</literal></expr></argument>)</argument_list></call> <operator>instanceof</operator> <name>Float</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>dynamicStats</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"String"</literal></expr></argument>)</argument_list></call> <operator>instanceof</operator> <name>String</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>ObjectInstance</name></argument>&gt;</argument_list></name></type> <name>objects</name> <init>= <expr><call><name><name>mbeanServer</name><operator>.</operator><name>queryMBeans</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><call><name><name>Query</name><operator>.</operator><name>match</name></name><argument_list>(
        <argument><expr><call><name><name>Query</name><operator>.</operator><name>attr</name></name><argument_list>(<argument><expr><literal type="string">"name"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>Query</name><operator>.</operator><name>value</name></name><argument_list>(<argument><expr><literal type="string">"mock"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>ObjectName</name></type> <name>name</name> <init>= <expr><call><name><name>objects</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>next</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getObjectName</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertMBeanTypeAndValue</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><literal type="string">"Integer"</literal></expr></argument>, <argument><expr><name><name>Integer</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><literal type="number">123</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertMBeanTypeAndValue</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><literal type="string">"Double"</literal></expr></argument>, <argument><expr><name><name>Double</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><literal type="number">567.534</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertMBeanTypeAndValue</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><literal type="string">"Long"</literal></expr></argument>, <argument><expr><name><name>Long</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><literal type="number">32352463l</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertMBeanTypeAndValue</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><literal type="string">"Short"</literal></expr></argument>, <argument><expr><name><name>Short</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><operator>(</operator><name>short</name><operator>)</operator> <literal type="number">32768</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertMBeanTypeAndValue</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><literal type="string">"Byte"</literal></expr></argument>, <argument><expr><name><name>Byte</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><operator>(</operator><name>byte</name><operator>)</operator> <literal type="number">254</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertMBeanTypeAndValue</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><literal type="string">"Float"</literal></expr></argument>, <argument><expr><name><name>Float</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><literal type="number">3.456f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertMBeanTypeAndValue</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><literal type="string">"String"</literal></expr></argument>,<argument><expr><name><name>String</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><literal type="string">"testing"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  </block_content>}</block></function>

  <function><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unchecked"</literal></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>assertMBeanTypeAndValue</name><parameter_list>(<parameter><decl><type><name>ObjectName</name></type> <name>name</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>attr</name></decl></parameter>, <parameter><decl><type><name>Class</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>Object</name></type> <name>value</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name>assertThat</name><argument_list>(<argument><expr><call><name><name>mbeanServer</name><operator>.</operator><name>getAttribute</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><name>attr</name></expr></argument>)</argument_list></call></expr></argument>, 
        <argument><expr><call><name>allOf</name><argument_list>(<argument><expr><call><name>instanceOf</name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>equalTo</name><argument_list>(<argument><expr><name>value</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>
    )</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testPutRemoveClear</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>MockInfoMBean</name></type> <name>mock</name> <init>= <expr><operator>new</operator> <call><name>MockInfoMBean</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>monitoredMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"mock"</literal></expr></argument>, <argument><expr><name>mock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>ObjectInstance</name></argument>&gt;</argument_list></name></type> <name>objects</name> <init>= <expr><call><name><name>mbeanServer</name><operator>.</operator><name>queryMBeans</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><call><name><name>Query</name><operator>.</operator><name>match</name></name><argument_list>(
        <argument><expr><call><name><name>Query</name><operator>.</operator><name>attr</name></name><argument_list>(<argument><expr><literal type="string">"name"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>Query</name><operator>.</operator><name>value</name></name><argument_list>(<argument><expr><literal type="string">"mock"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><literal type="string">"No MBean for mock object found in MBeanServer"</literal></expr></argument>, <argument><expr><call><name><name>objects</name>
        <operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>monitoredMap</name><operator>.</operator><name>remove</name></name><argument_list>(<argument><expr><literal type="string">"mock"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>objects</name> <operator>=</operator> <call><name><name>mbeanServer</name><operator>.</operator><name>queryMBeans</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><call><name><name>Query</name><operator>.</operator><name>match</name></name><argument_list>(<argument><expr><call><name><name>Query</name><operator>.</operator><name>attr</name></name><argument_list>(<argument><expr><literal type="string">"name"</literal></expr></argument>)</argument_list></call></expr></argument>,
        <argument><expr><call><name><name>Query</name><operator>.</operator><name>value</name></name><argument_list>(<argument><expr><literal type="string">"mock"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"MBean for mock object found in MBeanServer even after removal"</literal></expr></argument>,
        <argument><expr><call><name><name>objects</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>monitoredMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"mock"</literal></expr></argument>, <argument><expr><name>mock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>monitoredMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"mock2"</literal></expr></argument>, <argument><expr><name>mock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>objects</name> <operator>=</operator> <call><name><name>mbeanServer</name><operator>.</operator><name>queryMBeans</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><call><name><name>Query</name><operator>.</operator><name>match</name></name><argument_list>(<argument><expr><call><name><name>Query</name><operator>.</operator><name>attr</name></name><argument_list>(<argument><expr><literal type="string">"name"</literal></expr></argument>)</argument_list></call></expr></argument>,
        <argument><expr><call><name><name>Query</name><operator>.</operator><name>value</name></name><argument_list>(<argument><expr><literal type="string">"mock"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><literal type="string">"No MBean for mock object found in MBeanServer"</literal></expr></argument>, <argument><expr><call><name><name>objects</name>
        <operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>monitoredMap</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>objects</name> <operator>=</operator> <call><name><name>mbeanServer</name><operator>.</operator><name>queryMBeans</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><call><name><name>Query</name><operator>.</operator><name>match</name></name><argument_list>(<argument><expr><call><name><name>Query</name><operator>.</operator><name>attr</name></name><argument_list>(<argument><expr><literal type="string">"name"</literal></expr></argument>)</argument_list></call></expr></argument>,
        <argument><expr><call><name><name>Query</name><operator>.</operator><name>value</name></name><argument_list>(<argument><expr><literal type="string">"mock"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(
        <argument><expr><literal type="string">"MBean for mock object found in MBeanServer even after clear has been called"</literal></expr></argument>,
        <argument><expr><call><name><name>objects</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  </block_content>}</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testJmxAugmentedSolrInfoMBean</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><specifier>final</specifier> <name>MockInfoMBean</name></type> <name>mock</name> <init>= <expr><operator>new</operator> <call><name>MockInfoMBean</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>jmxKey</name> <init>= <expr><literal type="string">"jmx"</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>jmxValue</name> <init>= <expr><literal type="string">"jmxValue"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>MockJmxAugmentedSolrInfoMBean</name></type> <name>mbean</name> <init>= <expr><operator>new</operator> <class><super><name>MockJmxAugmentedSolrInfoMBean</name></super><argument_list>(<argument><expr><name>mock</name></expr></argument>)</argument_list> <block>{
      <function><annotation>@<name>Override</name></annotation>
      <type><specifier>public</specifier> <name>NamedList</name></type> <name>getStatisticsForJmx</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>NamedList</name></type> <name>stats</name> <init>= <expr><call><name>getStatistics</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>stats</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>jmxKey</name></expr></argument>, <argument><expr><name>jmxValue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return <expr><name>stats</name></expr>;</return>
      </block_content>}</block></function>
    }</block></class></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>monitoredMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"mock"</literal></expr></argument>, <argument><expr><name>mbean</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// assert getStatistics called when used as a map.  Note can't use equals here to compare</comment>
    <comment type="line">// because getStatistics returns a new Object each time.</comment>
    <expr_stmt><expr><call><name>assertNull</name><argument_list>(<argument><expr><call><name><name>monitoredMap</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"mock"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getStatistics</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name>jmxKey</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">//  assert getStatisticsForJmx called when used as jmx server</comment>
    <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>ObjectInstance</name></argument>&gt;</argument_list></name></type> <name>objects</name> <init>= <expr><call><name><name>mbeanServer</name><operator>.</operator><name>queryMBeans</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><call><name><name>Query</name><operator>.</operator><name>match</name></name><argument_list>(
        <argument><expr><call><name><name>Query</name><operator>.</operator><name>attr</name></name><argument_list>(<argument><expr><literal type="string">"name"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>Query</name><operator>.</operator><name>value</name></name><argument_list>(<argument><expr><literal type="string">"mock"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ObjectName</name></type> <name>name</name> <init>= <expr><call><name><name>objects</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>next</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getObjectName</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertMBeanTypeAndValue</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><name>jmxKey</name></expr></argument>, <argument><expr><call><name><name>jmxValue</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>jmxValue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

  <class><specifier>private</specifier> <specifier>static</specifier> <specifier>abstract</specifier> class <name>MockJmxAugmentedSolrInfoMBean</name>
      <super_list><extends>extends <super><name>SolrInfoMBeanWrapper</name></super></extends> <implements>implements <super><name><name>JmxMonitoredMap</name><operator>.</operator><name>JmxAugmentedSolrInfoMBean</name></name></super></implements></super_list> <block>{

    <constructor><specifier>public</specifier> <name>MockJmxAugmentedSolrInfoMBean</name><parameter_list>(<parameter><decl><type><name>SolrInfoMBean</name></type> <name>mbean</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>mbean</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <function_decl><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <specifier>abstract</specifier> <name>NamedList</name></type> <name>getStatisticsForJmx</name><parameter_list>()</parameter_list>;</function_decl>
  }</block></class>
}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestSolrDynamicMBean</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestSolrDynamicMBean</name><operator>.</operator><name>java</name></name>
<name>deleted</name> <name>file</name> <name>mode</name> <literal type="number">100644</literal>
<name>index</name> <name>eae4e799e89</name><operator>..</operator><literal type="number">00000000000</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name><name>TestSolrDynamicMBean</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <operator>/</operator><name>dev</name><operator>/</operator><literal type="null">null</literal>
@@ <operator>-</operator><literal type="number">1</literal></expr><operator>,</operator><expr><literal type="number">87</literal> <operator>+</operator><literal type="number">0</literal></expr><operator>,</operator><expr><literal type="number">0</literal> @@</expr></expr_stmt>
<comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name></name>;</package>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>JmxMonitoredMap</name><operator>.</operator><name>SolrDynamicMBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Before</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Test for JmxMonitoredMap
 *
 *
 * @since solr 1.3
 */</comment>
<class><specifier>public</specifier> class <name>TestSolrDynamicMBean</name> <super_list><extends>extends <super><name>LuceneTestCase</name></super></extends></super_list> <block>{


  <function><annotation>@<name>Override</name></annotation>
  <annotation>@<name>Before</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>setUp</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>setUp</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>


  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testCachedStatsOption</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws><block>{<block_content>
    <comment type="line">//  SOLR-6747 Add an optional caching option as a workaround for SOLR-6586.</comment>
    
    <decl_stmt><decl><type><name>SolrInfoMBean</name></type> <name>solrmbeaninfo</name> <init>= <expr><operator>new</operator> <call><name>MockInfoMBean</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>SolrDynamicMBean</name></type> <name>sdmbean</name> <init>= <expr><operator>new</operator> <call><name>SolrDynamicMBean</name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><name>solrmbeaninfo</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    
    <expr_stmt><expr><call><name><name>sdmbean</name><operator>.</operator><name>getMBeanInfo</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    
    <decl_stmt><decl><type><name>Object</name></type> <name>object1</name> <init>= <expr><call><name><name>sdmbean</name><operator>.</operator><name>getAttribute</name></name><argument_list>(<argument><expr><literal type="string">"Object"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Object</name></type> <name>object2</name> <init>= <expr><call><name><name>sdmbean</name><operator>.</operator><name>getAttribute</name></name><argument_list>(<argument><expr><literal type="string">"Object"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    
    <expr_stmt><expr><call><name>assertNotSame</name><argument_list>(<argument><expr><name>object1</name></expr></argument>, <argument><expr><name>object2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
    <expr_stmt><expr><call><name><name>sdmbean</name><operator>.</operator><name>getMBeanInfo</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    
    <decl_stmt><decl><type><name>Object</name></type> <name>object12</name> <init>= <expr><call><name><name>sdmbean</name><operator>.</operator><name>getAttribute</name></name><argument_list>(<argument><expr><literal type="string">"Object"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Object</name></type> <name>object22</name> <init>= <expr><call><name><name>sdmbean</name><operator>.</operator><name>getAttribute</name></name><argument_list>(<argument><expr><literal type="string">"Object"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    
    <expr_stmt><expr><call><name>assertNotSame</name><argument_list>(<argument><expr><name>object1</name></expr></argument>, <argument><expr><name>object12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertNotSame</name><argument_list>(<argument><expr><name>object2</name></expr></argument>, <argument><expr><name>object22</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
    
    <comment type="line">// test cached stats</comment>
    
    <expr_stmt><expr><name>solrmbeaninfo</name> <operator>=</operator> <operator>new</operator> <call><name>MockInfoMBean</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>sdmbean</name> <operator>=</operator> <operator>new</operator> <call><name>SolrDynamicMBean</name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><name>solrmbeaninfo</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
    <expr_stmt><expr><call><name><name>sdmbean</name><operator>.</operator><name>getMBeanInfo</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    
    <expr_stmt><expr><name>object1</name> <operator>=</operator> <call><name><name>sdmbean</name><operator>.</operator><name>getAttribute</name></name><argument_list>(<argument><expr><literal type="string">"Object"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>object2</name> <operator>=</operator> <call><name><name>sdmbean</name><operator>.</operator><name>getAttribute</name></name><argument_list>(<argument><expr><literal type="string">"Object"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>object1</name></expr></argument>, <argument><expr><name>object2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
    <expr_stmt><expr><call><name><name>sdmbean</name><operator>.</operator><name>getMBeanInfo</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    
    <expr_stmt><expr><name>object12</name> <operator>=</operator> <call><name><name>sdmbean</name><operator>.</operator><name>getAttribute</name></name><argument_list>(<argument><expr><literal type="string">"Object"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>object22</name> <operator>=</operator> <call><name><name>sdmbean</name><operator>.</operator><name>getAttribute</name></name><argument_list>(<argument><expr><literal type="string">"Object"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
    <expr_stmt><expr><call><name>assertNotSame</name><argument_list>(<argument><expr><name>object1</name></expr></argument>, <argument><expr><name>object12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertNotSame</name><argument_list>(<argument><expr><name>object2</name></expr></argument>, <argument><expr><name>object22</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>object12</name></expr></argument>, <argument><expr><name>object22</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
  </block_content>}</block></function>

}</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>MBeansHandlerTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>MBeansHandlerTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">84e2382d00c</literal><operator>..</operator><name>c7622f640cc</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>MBeansHandlerTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>MBeansHandlerTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">31</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">31</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>BeforeClass</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
 
 <class><specifier>public</specifier> class <name>MBeansHandlerTest</name> <super_list><extends>extends <super><name>SolrTestCaseJ4</name></super></extends></super_list> <block>{
  

   <function><annotation>@<name>BeforeClass</name></annotation>
   <type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>beforeClass</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
     <expr_stmt><expr><call><name>initCore</name><argument_list>(<argument><expr><literal type="string">"solrconfig.xml"</literal></expr></argument>, <argument><expr><literal type="string">"schema.xml"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">26</literal> <operator>+</operator><literal type="number">43</literal></expr><operator>,</operator><expr><literal type="number">26</literal> @@ <specifier>public</specifier> <name>class</name> <name>MBeansHandlerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
         <expr><name><name>CommonParams</name><operator>.</operator><name>QT</name></name></expr>,<expr><literal type="string">"/admin/mbeans"</literal></expr>,
         <expr><literal type="string">"stats"</literal></expr>,<expr><literal type="string">"true"</literal></expr>,
         <expr><name><name>CommonParams</name><operator>.</operator><name>WT</name></name></expr>,<expr><literal type="string">"xml"</literal></expr>
     ))</block></expr>;</expr_stmt>
    )</block_content></block></function>)</block>;</class>
     <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>ContentStream</name></argument>&gt;</argument_list></name></type> <name>streams</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>streams</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name><name>ContentStreamBase</name><operator>.</operator><name>StringStream</name></name><argument_list>(<argument><expr><name>xml</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    

     <decl_stmt><decl><type><name>LocalSolrQueryRequest</name></type> <name>req</name> <init>= <expr><call><name><name>lrf</name><operator>.</operator><name>makeRequest</name></name><argument_list>(
         <argument><expr><name><name>CommonParams</name><operator>.</operator><name>QT</name></name></expr></argument>,<argument><expr><literal type="string">"/admin/mbeans"</literal></expr></argument>,
         <argument><expr><literal type="string">"stats"</literal></expr></argument>,<argument><expr><literal type="string">"true"</literal></expr></argument>,
         <argument><expr><name><name>CommonParams</name><operator>.</operator><name>WT</name></name></expr></argument>,<argument><expr><literal type="string">"xml"</literal></expr></argument>,
         <argument><expr><literal type="string">"diff"</literal></expr></argument>,<argument><expr><literal type="string">"true"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>req</name><operator>.</operator><name>setContentStreams</name></name><argument_list>(<argument><expr><name>streams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    

     <expr_stmt><expr><name>xml</name> <operator>=</operator> <call><name><name>h</name><operator>.</operator><name>query</name></name><argument_list>(<argument><expr><name>req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>diff</name> <init>= <expr><call><name><name>SolrInfoMBeanHandler</name><operator>.</operator><name>fromXML</name></name><argument_list>(<argument><expr><name>xml</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <comment type="line">// The stats bean for SolrInfoMBeanHandler</comment>
     <decl_stmt><decl><type><name>NamedList</name></type> <name>stats</name> <init>= <expr><operator>(</operator><name>NamedList</name><operator>)</operator><call><name><name>diff</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"ADMIN"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"/admin/mbeans"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"stats"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    

     <comment type="line">//System.out.println("stats:"+stats);</comment>
     <decl_stmt><decl><type><name>Pattern</name></type> <name>p</name> <init>= <expr><call><name><name>Pattern</name><operator>.</operator><name>compile</name></name><argument_list>(<argument><expr><literal type="string">"Was: (?&lt;was&gt;[0-9]+), Now: (?&lt;now&gt;[0-9]+), Delta: (?&lt;delta&gt;[0-9]+)"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>response</name> <init>= <expr><call><name><name>stats</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"requests"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>response</name> <init>= <expr><call><name><name>stats</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"ADMIN./admin/mbeans.requests"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>Matcher</name></type> <name>m</name> <init>= <expr><call><name><name>p</name><operator>.</operator><name>matcher</name></name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>m</name><operator>.</operator><name>matches</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><literal type="string">"Response did not match pattern: "</literal> <operator>+</operator> <name>response</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">96</literal></expr><operator>,</operator><expr><literal type="number">4</literal> <operator>+</operator><literal type="number">96</literal></expr><operator>,</operator><expr><literal type="number">4</literal> @@ <specifier>public</specifier> <name>class</name> <name>MBeansHandlerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
 
     <expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"external entity ignored properly"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;
   }</block></expr></expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>
<expr_stmt><expr><operator>\</operator> <name>No</name> <name>newline</name> <name>at</name> <name>end</name> <name>of</name> <name>file</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>MetricsHandlerTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>MetricsHandlerTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2f849977e9f</literal><operator>..</operator><name>f9fc8743d69</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>MetricsHandlerTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>MetricsHandlerTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>handler</name><operator>.</operator><name>admin</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>management</name><operator>.</operator><name>ManagementFactory</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>SolrTestCaseJ4</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">34</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
 <class><specifier>public</specifier> class <name>MetricsHandlerTest</name> <super_list><extends>extends <super><name>SolrTestCaseJ4</name></super></extends></super_list> <block>{
   <function><annotation>@<name>BeforeClass</name></annotation>
   <type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>beforeClass</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <comment type="line">// this is needed to enable default SolrJmxReporter in TestHarness</comment>
    <expr_stmt><expr><call><name><name>ManagementFactory</name><operator>.</operator><name>getPlatformMBeanServer</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

     <expr_stmt><expr><call><name>initCore</name><argument_list>(<argument><expr><literal type="string">"solrconfig.xml"</literal></expr></argument>, <argument><expr><literal type="string">"schema.xml"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">135</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">139</literal></expr><operator>,</operator><expr><literal type="number">17</literal> @@ <specifier>public</specifier> <name>class</name> <name>MetricsHandlerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><call><name>assertNotNull</name><argument_list>(<argument><expr><call><name><name>values</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"CONTAINER.threadPool.coreContainerWorkExecutor.completed"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <call><name>assertNotNull</name><argument_list>(<argument><expr><call><name><name>values</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"CONTAINER.threadPool.coreLoadExecutor.completed"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
 
    <expr_stmt><expr><name>resp</name> <operator>=</operator> <operator>new</operator> <call><name>SolrQueryResponse</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>handler</name><operator>.</operator><name>handleRequestBody</name></name><argument_list>(<argument><expr><call><name>req</name><argument_list>(<argument><expr><name><name>CommonParams</name><operator>.</operator><name>QT</name></name></expr></argument>, <argument><expr><literal type="string">"/admin/metrics"</literal></expr></argument>, <argument><expr><name><name>CommonParams</name><operator>.</operator><name>WT</name></name></expr></argument>, <argument><expr><literal type="string">"json"</literal></expr></argument>, <argument><expr><literal type="string">"prefix"</literal></expr></argument>, <argument><expr><literal type="string">"CONTAINER.cores"</literal></expr></argument>, <argument><expr><literal type="string">"regex"</literal></expr></argument>, <argument><expr><literal type="string">"C.*thread.*completed"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>resp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>values</name> <operator>=</operator> <call><name><name>resp</name><operator>.</operator><name>getValues</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><call><name><name>values</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"metrics"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>values</name> <operator>=</operator> <operator>(</operator><name>NamedList</name><operator>)</operator> <call><name><name>values</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"metrics"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><call><name><name>values</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"solr.node"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>values</name> <operator>=</operator> <operator>(</operator><name>NamedList</name><operator>)</operator> <call><name><name>values</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"solr.node"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><call><name><name>values</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><call><name><name>values</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"CONTAINER.threadPool.coreContainerWorkExecutor.completed"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><call><name><name>values</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"CONTAINER.threadPool.coreLoadExecutor.completed"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

     <expr_stmt><expr><name>resp</name> <operator>=</operator> <operator>new</operator> <call><name>SolrQueryResponse</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>handler</name><operator>.</operator><name>handleRequestBody</name></name><argument_list>(<argument><expr><call><name>req</name><argument_list>(<argument><expr><name><name>CommonParams</name><operator>.</operator><name>QT</name></name></expr></argument>, <argument><expr><literal type="string">"/admin/metrics"</literal></expr></argument>, <argument><expr><name><name>CommonParams</name><operator>.</operator><name>WT</name></name></expr></argument>, <argument><expr><literal type="string">"json"</literal></expr></argument>, <argument><expr><literal type="string">"group"</literal></expr></argument>, <argument><expr><literal type="string">"jvm"</literal></expr></argument>, <argument><expr><literal type="string">"prefix"</literal></expr></argument>, <argument><expr><literal type="string">"CONTAINER.cores"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>resp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>values</name> <operator>=</operator> <call><name><name>resp</name><operator>.</operator><name>getValues</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>StatsReloadRaceTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>StatsReloadRaceTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7bf493923e5</literal><operator>..</operator><name>ca3b76e6bef</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>StatsReloadRaceTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>StatsReloadRaceTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>handler</name><operator>.</operator><name>admin</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Random</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>atomic</name><operator>.</operator><name>AtomicInteger</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">68</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">67</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>StatsReloadRaceTest</name> extends <name>SolrTestCaseJ4</name> <block>{
       <expr><name>boolean</name> <name>isCompleted</name></expr>;</block></expr></expr_stmt>
       <do>do <block>{<block_content>
         <if_stmt><if>if <condition>(<expr><call><name><name>random</name><operator>.</operator><name>nextBoolean</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name>requestMbeans</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name>requestMetrics</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if> <else>else <block>{<block_content>
           <expr_stmt><expr><call><name>requestCoreStatus</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></else></if_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">106</literal></expr><operator>,</operator><expr><literal type="number">22</literal> <operator>+</operator><literal type="number">105</literal></expr><operator>,</operator><expr><literal type="number">31</literal> @@ <specifier>public</specifier> <name>class</name> <name>StatsReloadRaceTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <return>return <expr><name>isCompleted</name></expr>;</return>
   }</block></expr></expr_stmt>
 
  <function><type><specifier>private</specifier> <name>void</name></type> <name>requestMbeans</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>String</name></type> <name>stats</name> <init>= <expr><call><name><name>h</name><operator>.</operator><name>query</name></name><argument_list>(<argument><expr><call><name>req</name><argument_list>(
        <argument><expr><name><name>CommonParams</name><operator>.</operator><name>QT</name></name></expr></argument>, <argument><expr><literal type="string">"/admin/mbeans"</literal></expr></argument>,
        <argument><expr><literal type="string">"stats"</literal></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>actualStats</name> <init>= <expr><call><name><name>SolrInfoMBeanHandler</name><operator>.</operator><name>fromXML</name></name><argument_list>(<argument><expr><name>stats</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"CORE"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    
    <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name></type> <name>tuple</name> <range>: <expr><name>actualStats</name></expr></range></decl></init>)</control> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><call><name><name>tuple</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>contains</name><argument_list>(<argument><expr><literal type="string">"earcher"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <comment type="line">// catches "searcher" and "Searcher@345345 blah"</comment>
        <decl_stmt><decl><type><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>searcherStats</name> <init>= <expr><call><name><name>tuple</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unchecked"</literal></expr></argument>)</argument_list></annotation>
        <type><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>statsList</name> <init>= <expr><operator>(</operator><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>&gt;</argument_list></name><operator>)</operator><call><name><name>searcherStats</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"stats"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"expect to have exactly one indexVersion at "</literal><operator>+</operator><name>statsList</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>statsList</name><operator>.</operator><name>getAll</name></name><argument_list>(<argument><expr><literal type="string">"indexVersion"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>statsList</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"indexVersion"</literal></expr></argument>)</argument_list></call> <operator>instanceof</operator> <name>Long</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
  <function><type><specifier>private</specifier> <name>void</name></type> <name>requestMetrics</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>SolrQueryResponse</name></type> <name>rsp</name> <init>= <expr><operator>new</operator> <call><name>SolrQueryResponse</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>registry</name> <init>= <expr><literal type="string">"solr.core."</literal> <operator>+</operator> <name><name>h</name><operator>.</operator><name>coreName</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>key</name> <init>= <expr><literal type="string">"SEARCHER.searcher.indexVersion"</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>boolean</name></type> <name>found</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>count</name> <init>= <expr><literal type="number">10</literal></expr></init></decl>;</decl_stmt>
    <while>while <condition>(<expr><operator>!</operator><name>found</name> <operator>&amp;&amp;</operator> <name>count</name><operator>--</operator> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>h</name><operator>.</operator><name>getCoreContainer</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getRequestHandler</name><argument_list>(<argument><expr><literal type="string">"/admin/metrics"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>handleRequest</name><argument_list>(
          <argument><expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"prefix"</literal></expr></argument>, <argument><expr><literal type="string">"SEARCHER"</literal></expr></argument>, <argument><expr><literal type="string">"registry"</literal></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><literal type="string">"compact"</literal></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>rsp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <decl_stmt><decl><type><name>NamedList</name></type> <name>values</name> <init>= <expr><call><name><name>rsp</name><operator>.</operator><name>getValues</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>NamedList</name></type> <name>metrics</name> <init>= <expr><operator>(</operator><name>NamedList</name><operator>)</operator><call><name><name>values</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"metrics"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><name>metrics</name> <operator>=</operator> <operator>(</operator><name>NamedList</name><operator>)</operator><call><name><name>metrics</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <comment type="line">// this is not guaranteed to exist right away after core reload - there's a</comment>
      <comment type="line">// small window between core load and before searcher metrics are registered</comment>
      <comment type="line">// so we may have to check a few times</comment>
      <if_stmt><if>if <condition>(<expr><call><name><name>metrics</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>found</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>metrics</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call> <operator>instanceof</operator> <name>Long</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <break>break;</break>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">500</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></else></if_stmt>
     </block_content>}</block></while>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"Key "</literal> <operator>+</operator> <name>key</name> <operator>+</operator> <literal type="string">" not found in registry "</literal> <operator>+</operator> <name>registry</name></expr></argument>, <argument><expr><name>found</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
 </block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>SystemInfoHandlerTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>SystemInfoHandlerTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>c961a55c5f5</name><operator>..</operator><literal type="number">2e20dc8bdba</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>SystemInfoHandlerTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>SystemInfoHandlerTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>management</name><operator>.</operator><name>ManagementFactory</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>management</name><operator>.</operator><name>OperatingSystemMXBean</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
 
<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>Gauge</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>SimpleOrderedMap</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>stats</name><operator>.</operator><name>MetricUtils</name></name>;</import>
 
 
 <class><specifier>public</specifier> class <name>SystemInfoHandlerTest</name> <super_list><extends>extends <super><name>LuceneTestCase</name></super></extends></super_list> <block>{
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">36</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>SystemInfoHandlerTest</name> extends <name>LuceneTestCase</name> <block>{
     <expr><call><name><name>info</name><operator>.</operator><name>add</name></name><argument_list>( <argument><expr><literal type="string">"version"</literal></expr></argument>, <argument><expr><call><name><name>os</name><operator>.</operator><name>getVersion</name></name><argument_list>()</argument_list></call></expr></argument> )</argument_list></call></expr>;
     <call><name><name>info</name><operator>.</operator><name>add</name></name><argument_list>( <argument><expr><literal type="string">"arch"</literal></expr></argument>, <argument><expr><call><name><name>os</name><operator>.</operator><name>getArch</name></name><argument_list>()</argument_list></call></expr></argument> )</argument_list></call></block></expr>;</expr_stmt>
 
    <comment type="line">// make another using addMXBeanProperties() </comment>
    <comment type="line">// make another using MetricUtils.addMXBeanMetrics()</comment>
     <decl_stmt><decl><type><name><name>SimpleOrderedMap</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>info2</name> <init>= <expr><operator>new</operator> <call><name><name>SimpleOrderedMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <constructor_decl><name><name>SystemInfoHandler</name><operator>.</operator><name>addMXBeanProperties</name></name><parameter_list>( <parameter><decl><type><name>os</name></type></decl></parameter>, <parameter><decl><type><name><name>OperatingSystemMXBean</name><operator>.</operator><name>class</name></name></type></decl></parameter>, <parameter><decl><type><name>info2</name></type></decl></parameter> )</parameter_list>;</constructor_decl>
    <expr_stmt><expr><call><name><name>MetricUtils</name><operator>.</operator><name>addMXBeanMetrics</name></name><argument_list>( <argument><expr><name>os</name></expr></argument>, <argument><expr><name><name>OperatingSystemMXBean</name><operator>.</operator><name>class</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><lambda><parameter_list>(<parameter><decl><name>k</name></decl></parameter>, <parameter><decl><name>v</name></decl></parameter>)</parameter_list> -&gt; <block>{<block_content>
      <expr_stmt><expr><call><name><name>info2</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>k</name></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>Gauge</name><operator>)</operator><name>v</name><operator>)</operator><operator>.</operator><call><name>getValue</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></lambda></expr></argument> )</argument_list></call></expr>;</expr_stmt>
 
     <comment type="line">// make sure they got the same thing</comment>
     <for>for <control>(<init><decl><type><name>String</name></type> <name>p</name> <range>: <expr><call><name><name>Arrays</name><operator>.</operator><name>asList</name></name><argument_list>(<argument><expr><literal type="string">"name"</literal></expr></argument>, <argument><expr><literal type="string">"version"</literal></expr></argument>, <argument><expr><literal type="string">"arch"</literal></expr></argument>)</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>ResourceSharingTestComponent</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>ResourceSharingTestComponent</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7c4e6639a1b</literal><operator>..</operator><name>d268a4e424d</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>ResourceSharingTestComponent</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>component</name><operator>/</operator><name><name>ResourceSharingTestComponent</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">63</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">63</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>ResourceSharingTestComponent</name> extends <name>SearchComponent</name> implements <name>Sol</name></expr></expr_stmt>
     <return>return <expr><literal type="string">"ResourceSharingTestComponent"</literal></expr>;</return>
   </block_content>}</block></for>
 
  <function><annotation>@<name>Override</name></annotation>
  <type><specifier>public</specifier> <name>String</name></type> <name>getSource</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><literal type="null">null</literal></expr>;</return>
  </block_content>}</block></function>

   <function><annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unchecked"</literal></expr></argument>)</argument_list></annotation>
   <type><name>TestObject</name></type> <name>getTestObj</name><parameter_list>()</parameter_list> <block>{<block_content>
     <return>return <expr><call><name><name>this</name><operator>.</operator><name>blob</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr>;</return>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>JvmMetricsTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>JvmMetricsTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">72adc686354</literal><operator>..</operator><name>a656f843ba7</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>JvmMetricsTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>JvmMetricsTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@
  <operator>*</operator><operator>/</operator></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name></name>;</package>
 
<import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>MBeanServer</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>management</name><operator>.</operator><name>ManagementFactory</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 
 <import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>Gauge</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">31</literal></expr><operator>,</operator><expr><literal type="number">26</literal> <operator>+</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">63</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
  <expr_stmt><expr><operator>*</operator><operator>/</operator>
 <specifier>public</specifier> <name>class</name> <name>JvmMetricsTest</name> extends <name>SolrJettyTestBase</name> <block>{
 
  <expr><specifier>static</specifier> <name>final</name> <name><name>String</name><index>[]</index></name> <name>STRING_OS_METRICS</name> <operator>=</operator> <block>{
      <expr><literal type="string">"arch"</literal></expr>,
      <expr><literal type="string">"name"</literal></expr>,
      <expr><literal type="string">"version"</literal></expr>
  }</block></expr>;
  <specifier>static</specifier> <name>final</name> <name><name>String</name><index>[]</index></name> <name>NUMERIC_OS_METRICS</name> <operator>=</operator> <block>{
      <expr><literal type="string">"availableProcessors"</literal></expr>,
      <expr><literal type="string">"systemLoadAverage"</literal></expr>
  }</block></block></expr>;</expr_stmt>

  <decl_stmt><decl><type><specifier>static</specifier> <specifier>final</specifier> <name><name>String</name><index>[]</index></name></type> <name>BUFFER_METRICS</name> <init>= <expr><block>{
      <expr><literal type="string">"direct.Count"</literal></expr>,
      <expr><literal type="string">"direct.MemoryUsed"</literal></expr>,
      <expr><literal type="string">"direct.TotalCapacity"</literal></expr>,
      <expr><literal type="string">"mapped.Count"</literal></expr>,
      <expr><literal type="string">"mapped.MemoryUsed"</literal></expr>,
      <expr><literal type="string">"mapped.TotalCapacity"</literal></expr>
  }</block></expr></init></decl>;</decl_stmt>

   <function><annotation>@<name>BeforeClass</name></annotation>
   <type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>beforeTest</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
     <expr_stmt><expr><call><name>createJetty</name><argument_list>(<argument><expr><call><name>legacyExampleCollection1SolrHome</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
   <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testOperatingSystemMetricsSet</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>MBeanServer</name></type> <name>mBeanServer</name> <init>= <expr><call><name><name>ManagementFactory</name><operator>.</operator><name>getPlatformMBeanServer</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>OperatingSystemMetricSet</name></type> <name>set</name> <init>= <expr><operator>new</operator> <call><name>OperatingSystemMetricSet</name><argument_list>(<argument><expr><name>mBeanServer</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <function><type><specifier>public</specifier> <name>void</name></type> <name>testOperatingSystemMetricSet</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>OperatingSystemMetricSet</name></type> <name>set</name> <init>= <expr><operator>new</operator> <call><name>OperatingSystemMetricSet</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Metric</name></argument>&gt;</argument_list></name></type> <name>metrics</name> <init>= <expr><call><name><name>set</name><operator>.</operator><name>getMetrics</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>metrics</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><name>String</name></type> <name>metric</name> <range>: <expr><name><name>OperatingSystemMetricSet</name><operator>.</operator><name>METRICS</name></name></expr></range></decl></init>)</control> <block>{<block_content>
    <for>for <control>(<init><decl><type><name>String</name></type> <name>metric</name> <range>: <expr><name>NUMERIC_OS_METRICS</name></expr></range></decl></init>)</control> <block>{<block_content>
       <decl_stmt><decl><type><name><name>Gauge</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name></type> <name>gauge</name> <init>= <expr><operator>(</operator><name><name>Gauge</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name><operator>)</operator><call><name><name>metrics</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>metric</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>gauge</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <call><name><name>gauge</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content> <comment type="line">// some are optional depending on OS</comment>
        <continue>continue;</continue>
      </block_content>}</block></if></if_stmt>
      <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><name>metric</name></expr></argument>, <argument><expr><name>gauge</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>double</name></type> <name>value</name> <init>= <expr><operator>(</operator><operator>(</operator><name>Number</name><operator>)</operator><call><name><name>gauge</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>)</operator><operator>.</operator><call><name>doubleValue</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <comment type="line">// SystemLoadAverage on Windows may be -1.0</comment>
       <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"unexpected value of "</literal> <operator>+</operator> <name>metric</name> <operator>+</operator> <literal type="string">": "</literal> <operator>+</operator> <name>value</name></expr></argument>, <argument><expr><name>value</name> <operator>&gt;=</operator> <literal type="number">0</literal> <operator>||</operator> <name>value</name> <operator>==</operator> <operator>-</operator><literal type="number">1.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>
    <for>for <control>(<init><decl><type><name>String</name></type> <name>metric</name> <range>: <expr><name>STRING_OS_METRICS</name></expr></range></decl></init>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name><name>Gauge</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name></type> <name>gauge</name> <init>= <expr><operator>(</operator><name><name>Gauge</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name><operator>)</operator><call><name><name>metrics</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>metric</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><name>metric</name></expr></argument>, <argument><expr><name>gauge</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>String</name></type> <name>value</name> <init>= <expr><operator>(</operator><name>String</name><operator>)</operator><call><name><name>gauge</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>value</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
  </block_content>}</block></for>

  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testAltBufferPoolMetricSet</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>AltBufferPoolMetricSet</name></type> <name>set</name> <init>= <expr><operator>new</operator> <call><name>AltBufferPoolMetricSet</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Metric</name></argument>&gt;</argument_list></name></type> <name>metrics</name> <init>= <expr><call><name><name>set</name><operator>.</operator><name>getMetrics</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>metrics</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><name>String</name></type> <name>name</name> <range>: <expr><name>BUFFER_METRICS</name></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><call><name><name>metrics</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>Object</name></type> <name>g</name> <init>= <expr><call><name><name>metrics</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><name>g</name> <operator>instanceof</operator> <name>Gauge</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>Object</name></type> <name>v</name> <init>= <expr><operator>(</operator><operator>(</operator><name>Gauge</name><operator>)</operator><name>g</name><operator>)</operator><operator>.</operator><call><name>getValue</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><name>v</name> <operator>instanceof</operator> <name>Long</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
   </block_content>}</block></function>
 
   <annotation>@<name>Test</name></annotation>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrCoreMetricManagerTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrCoreMetricManagerTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">6e8e1e58e92</literal><operator>..</operator><literal type="number">11f89232af0</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrCoreMetricManagerTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrCoreMetricManagerTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>TestUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>SolrTestCaseJ4</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>CoreAdminParams</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>PluginInfo</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoMBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>reporters</name><operator>.</operator><name>MockMetricReporter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>schema</name><operator>.</operator><name>FieldType</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>After</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">61</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">61</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrCoreMetricManagerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><name>Random</name> <name>random</name> <operator>=</operator> <call><name>random</name><argument_list>()</argument_list></call></expr>;
 
     <name>String</name> <name>scope</name> <operator>=</operator> <call><name><name>SolrMetricTestUtils</name><operator>.</operator><name>getRandomScope</name></name><argument_list>(<argument><expr><name>random</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>SolrInfoMBean</name><operator>.</operator><name>Category</name></name></type> <name>category</name> <init>= <expr><call><name><name>SolrMetricTestUtils</name><operator>.</operator><name>getRandomCategory</name></name><argument_list>(<argument><expr><name>random</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>SolrInfoBean</name><operator>.</operator><name>Category</name></name></type> <name>category</name> <init>= <expr><call><name><name>SolrMetricTestUtils</name><operator>.</operator><name>getRandomCategory</name></name><argument_list>(<argument><expr><name>random</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Counter</name></argument>&gt;</argument_list></name></type> <name>metrics</name> <init>= <expr><call><name><name>SolrMetricTestUtils</name><operator>.</operator><name>getRandomMetrics</name></name><argument_list>(<argument><expr><name>random</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>SolrMetricProducer</name></type> <name>producer</name> <init>= <expr><call><name><name>SolrMetricTestUtils</name><operator>.</operator><name>getProducerOf</name></name><argument_list>(<argument><expr><name>metricManager</name></expr></argument>, <argument><expr><name>category</name></expr></argument>, <argument><expr><name>scope</name></expr></argument>, <argument><expr><name>metrics</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <try>try <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">82</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">82</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrCoreMetricManagerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
 
     <expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Counter</name></argument>&gt;</argument_list></name> <name>registered</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
     <name>String</name> <name>scope</name> <operator>=</operator> <call><name><name>SolrMetricTestUtils</name><operator>.</operator><name>getRandomScope</name></name><argument_list>(<argument><expr><name>random</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>SolrInfoMBean</name><operator>.</operator><name>Category</name></name></type> <name>category</name> <init>= <expr><call><name><name>SolrMetricTestUtils</name><operator>.</operator><name>getRandomCategory</name></name><argument_list>(<argument><expr><name>random</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>SolrInfoBean</name><operator>.</operator><name>Category</name></name></type> <name>category</name> <init>= <expr><call><name><name>SolrMetricTestUtils</name><operator>.</operator><name>getRandomCategory</name></name><argument_list>(<argument><expr><name>random</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name>int</name></type> <name>iterations</name> <init>= <expr><call><name><name>TestUtil</name><operator>.</operator><name>nextInt</name></name><argument_list>(<argument><expr><name>random</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>MAX_ITERATIONS</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>iterations</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrMetricManagerTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrMetricManagerTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">1c29c5e9a73</literal><operator>..</operator><name>d30611904c3</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrMetricManagerTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrMetricManagerTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>TestUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>SolrTestCaseJ4</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>PluginInfo</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoMBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrResourceLoader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>reporters</name><operator>.</operator><name>MockMetricReporter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">62</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">62</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrMetricManagerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><name>String</name> <name>toName</name> <operator>=</operator> <literal type="string">"to-"</literal> <operator>+</operator> <call><name><name>TestUtil</name><operator>.</operator><name>randomSimpleString</name></name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</block></expr></expr_stmt>
     <comment type="line">// register test metrics</comment>
     <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Counter</name></argument>&gt;</argument_list></name></name></type> <name>entry</name> <range>: <expr><call><name><name>metrics1</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>register</name></name><argument_list>(<argument><expr><name>fromName</name></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"metrics1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>register</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>fromName</name></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"metrics1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>
     <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Counter</name></argument>&gt;</argument_list></name></name></type> <name>entry</name> <range>: <expr><call><name><name>metrics2</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>register</name></name><argument_list>(<argument><expr><name>toName</name></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"metrics2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>register</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>toName</name></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"metrics2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>metrics1</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>metricManager</name><operator>.</operator><name>registry</name></name><argument_list>(<argument><expr><name>fromName</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getMetrics</name><argument_list>()</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>metrics2</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>metricManager</name><operator>.</operator><name>registry</name></name><argument_list>(<argument><expr><name>toName</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getMetrics</name><argument_list>()</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">125</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">125</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrMetricManagerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><name>String</name> <name>registryName</name> <operator>=</operator> <call><name><name>TestUtil</name><operator>.</operator><name>randomSimpleString</name></name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</block></expr></expr_stmt>
 
     <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Counter</name></argument>&gt;</argument_list></name></name></type> <name>entry</name> <range>: <expr><call><name><name>metrics</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>register</name></name><argument_list>(<argument><expr><name>registryName</name></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"foo"</literal></expr></argument>, <argument><expr><literal type="string">"bar"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>register</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>registryName</name></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"foo"</literal></expr></argument>, <argument><expr><literal type="string">"bar"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>
     <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Counter</name></argument>&gt;</argument_list></name></name></type> <name>entry</name> <range>: <expr><call><name><name>metrics</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>register</name></name><argument_list>(<argument><expr><name>registryName</name></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"foo"</literal></expr></argument>, <argument><expr><literal type="string">"baz"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>register</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>registryName</name></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"foo"</literal></expr></argument>, <argument><expr><literal type="string">"baz"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>
     <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Counter</name></argument>&gt;</argument_list></name></name></type> <name>entry</name> <range>: <expr><call><name><name>metrics</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>register</name></name><argument_list>(<argument><expr><name>registryName</name></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"foo"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>register</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>registryName</name></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"foo"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>
 
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>metrics</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>*</operator> <literal type="number">3</literal></expr></argument>, <argument><expr><call><name><name>metricManager</name><operator>.</operator><name>registry</name></name><argument_list>(<argument><expr><name>registryName</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getMetrics</name><argument_list>()</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">163</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">163</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrMetricManagerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
 
     <expr><name>String</name> <name>registryName</name> <operator>=</operator> <call><name><name>TestUtil</name><operator>.</operator><name>randomSimpleString</name></name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;
 
    <call><name><name>metricManager</name><operator>.</operator><name>counter</name></name><argument_list>(<argument><expr><name>registryName</name></expr></argument>, <argument><expr><literal type="string">"simple_counter"</literal></expr></argument>, <argument><expr><literal type="string">"foo"</literal></expr></argument>, <argument><expr><literal type="string">"bar"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>timer</name></name><argument_list>(<argument><expr><name>registryName</name></expr></argument>, <argument><expr><literal type="string">"simple_timer"</literal></expr></argument>, <argument><expr><literal type="string">"foo"</literal></expr></argument>, <argument><expr><literal type="string">"bar"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>meter</name></name><argument_list>(<argument><expr><name>registryName</name></expr></argument>, <argument><expr><literal type="string">"simple_meter"</literal></expr></argument>, <argument><expr><literal type="string">"foo"</literal></expr></argument>, <argument><expr><literal type="string">"bar"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>histogram</name></name><argument_list>(<argument><expr><name>registryName</name></expr></argument>, <argument><expr><literal type="string">"simple_histogram"</literal></expr></argument>, <argument><expr><literal type="string">"foo"</literal></expr></argument>, <argument><expr><literal type="string">"bar"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>counter</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>registryName</name></expr></argument>, <argument><expr><literal type="string">"simple_counter"</literal></expr></argument>, <argument><expr><literal type="string">"foo"</literal></expr></argument>, <argument><expr><literal type="string">"bar"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>timer</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>registryName</name></expr></argument>, <argument><expr><literal type="string">"simple_timer"</literal></expr></argument>, <argument><expr><literal type="string">"foo"</literal></expr></argument>, <argument><expr><literal type="string">"bar"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>meter</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>registryName</name></expr></argument>, <argument><expr><literal type="string">"simple_meter"</literal></expr></argument>, <argument><expr><literal type="string">"foo"</literal></expr></argument>, <argument><expr><literal type="string">"bar"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>histogram</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>registryName</name></expr></argument>, <argument><expr><literal type="string">"simple_histogram"</literal></expr></argument>, <argument><expr><literal type="string">"foo"</literal></expr></argument>, <argument><expr><literal type="string">"bar"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Metric</name></argument>&gt;</argument_list></name></type> <name>metrics</name> <init>= <expr><call><name><name>metricManager</name><operator>.</operator><name>registry</name></name><argument_list>(<argument><expr><name>registryName</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getMetrics</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><call><name><name>metrics</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Metric</name></argument>&gt;</argument_list></name></name></type> <name>entry</name> <range>: <expr><call><name><name>metrics</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">180</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">180</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrMetricManagerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
 
     <expr><name>String</name> <name>name</name> <operator>=</operator> <call><name><name>TestUtil</name><operator>.</operator><name>randomSimpleString</name></name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;
 
    <name>String</name> <name>result</name> <operator>=</operator> <call><name><name>SolrMetricManager</name><operator>.</operator><name>getRegistryName</name></name><argument_list>(<argument><expr><name><name>SolrInfoMBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>core</name></name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><literal type="string">"collection1"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>result</name> <init>= <expr><call><name><name>SolrMetricManager</name><operator>.</operator><name>getRegistryName</name></name><argument_list>(<argument><expr><name><name>SolrInfoBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>core</name></name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><literal type="string">"collection1"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"solr.core."</literal> <operator>+</operator> <name>name</name> <operator>+</operator> <literal type="string">".collection1"</literal></expr></argument>, <argument><expr><name>result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <comment type="line">// try it with already prefixed name - group will be ignored</comment>
    <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>SolrMetricManager</name><operator>.</operator><name>getRegistryName</name></name><argument_list>(<argument><expr><name><name>SolrInfoMBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>core</name></name></expr></argument>, <argument><expr><name>result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>SolrMetricManager</name><operator>.</operator><name>getRegistryName</name></name><argument_list>(<argument><expr><name><name>SolrInfoBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>core</name></name></expr></argument>, <argument><expr><name>result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"solr.core."</literal> <operator>+</operator> <name>name</name> <operator>+</operator> <literal type="string">".collection1"</literal></expr></argument>, <argument><expr><name>result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <comment type="line">// try it with already prefixed name but with additional segments</comment>
    <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>SolrMetricManager</name><operator>.</operator><name>getRegistryName</name></name><argument_list>(<argument><expr><name><name>SolrInfoMBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>core</name></name></expr></argument>, <argument><expr><name>result</name></expr></argument>, <argument><expr><literal type="string">"shard1"</literal></expr></argument>, <argument><expr><literal type="string">"replica1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>SolrMetricManager</name><operator>.</operator><name>getRegistryName</name></name><argument_list>(<argument><expr><name><name>SolrInfoBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>core</name></name></expr></argument>, <argument><expr><name>result</name></expr></argument>, <argument><expr><literal type="string">"shard1"</literal></expr></argument>, <argument><expr><literal type="string">"replica1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"solr.core."</literal> <operator>+</operator> <name>name</name> <operator>+</operator> <literal type="string">".collection1.shard1.replica1"</literal></expr></argument>, <argument><expr><name>result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></for>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">206</literal></expr><operator>,</operator><expr><literal type="number">18</literal> <operator>+</operator><literal type="number">206</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrMetricManagerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
         <expr><call><name>createPluginInfo</name><argument_list>(<argument><expr><literal type="string">"core_foo"</literal></expr></argument>, <argument><expr><literal type="string">"core"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>
     }</block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>tag</name> <init>= <expr><literal type="string">"xyz"</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>loadReporters</name></name><argument_list>(<argument><expr><name>plugins</name></expr></argument>, <argument><expr><name>loader</name></expr></argument>, <argument><expr><name>tag</name></expr></argument>, <argument><expr><name><name>SolrInfoMBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>node</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>loadReporters</name></name><argument_list>(<argument><expr><name>plugins</name></expr></argument>, <argument><expr><name>loader</name></expr></argument>, <argument><expr><name>tag</name></expr></argument>, <argument><expr><name><name>SolrInfoBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>node</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>SolrMetricReporter</name></argument>&gt;</argument_list></name></type> <name>reporters</name> <init>= <expr><call><name><name>metricManager</name><operator>.</operator><name>getReporters</name></name><argument_list>(
        <argument><expr><call><name><name>SolrMetricManager</name><operator>.</operator><name>getRegistryName</name></name><argument_list>(<argument><expr><name><name>SolrInfoMBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>node</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>SolrMetricManager</name><operator>.</operator><name>getRegistryName</name></name><argument_list>(<argument><expr><name><name>SolrInfoBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>node</name></name></expr></argument>)</argument_list></call></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt></for>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><call><name><name>reporters</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>reporters</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><literal type="string">"universal_foo@"</literal> <operator>+</operator> <name>tag</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>reporters</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><literal type="string">"multigroup_foo@"</literal> <operator>+</operator> <name>tag</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>reporters</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><literal type="string">"node_foo@"</literal> <operator>+</operator> <name>tag</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>reporters</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><literal type="string">"multiregistry_foo@"</literal> <operator>+</operator> <name>tag</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>loadReporters</name></name><argument_list>(<argument><expr><name>plugins</name></expr></argument>, <argument><expr><name>loader</name></expr></argument>, <argument><expr><name>tag</name></expr></argument>, <argument><expr><name><name>SolrInfoMBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>core</name></name></expr></argument>, <argument><expr><literal type="string">"collection1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>loadReporters</name></name><argument_list>(<argument><expr><name>plugins</name></expr></argument>, <argument><expr><name>loader</name></expr></argument>, <argument><expr><name>tag</name></expr></argument>, <argument><expr><name><name>SolrInfoBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>core</name></name></expr></argument>, <argument><expr><literal type="string">"collection1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>reporters</name> <operator>=</operator> <call><name><name>metricManager</name><operator>.</operator><name>getReporters</name></name><argument_list>(
        <argument><expr><call><name><name>SolrMetricManager</name><operator>.</operator><name>getRegistryName</name></name><argument_list>(<argument><expr><name><name>SolrInfoMBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>core</name></name></expr></argument>, <argument><expr><literal type="string">"collection1"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>SolrMetricManager</name><operator>.</operator><name>getRegistryName</name></name><argument_list>(<argument><expr><name><name>SolrInfoBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>core</name></name></expr></argument>, <argument><expr><literal type="string">"collection1"</literal></expr></argument>)</argument_list></call></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt></try>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><call><name><name>reporters</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>reporters</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><literal type="string">"universal_foo@"</literal> <operator>+</operator> <name>tag</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>reporters</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><literal type="string">"multigroup_foo@"</literal> <operator>+</operator> <name>tag</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">225</literal></expr><operator>,</operator><expr><literal type="number">26</literal> <operator>+</operator><literal type="number">225</literal></expr><operator>,</operator><expr><literal type="number">26</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrMetricManagerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>reporters</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><literal type="string">"core_foo@"</literal> <operator>+</operator> <name>tag</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>reporters</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><literal type="string">"multiregistry_foo@"</literal> <operator>+</operator> <name>tag</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
 
    <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>loadReporters</name></name><argument_list>(<argument><expr><name>plugins</name></expr></argument>, <argument><expr><name>loader</name></expr></argument>, <argument><expr><name>tag</name></expr></argument>, <argument><expr><name><name>SolrInfoMBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>jvm</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>loadReporters</name></name><argument_list>(<argument><expr><name>plugins</name></expr></argument>, <argument><expr><name>loader</name></expr></argument>, <argument><expr><name>tag</name></expr></argument>, <argument><expr><name><name>SolrInfoBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>jvm</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>reporters</name> <operator>=</operator> <call><name><name>metricManager</name><operator>.</operator><name>getReporters</name></name><argument_list>(
        <argument><expr><call><name><name>SolrMetricManager</name><operator>.</operator><name>getRegistryName</name></name><argument_list>(<argument><expr><name><name>SolrInfoMBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>jvm</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>SolrMetricManager</name><operator>.</operator><name>getRegistryName</name></name><argument_list>(<argument><expr><name><name>SolrInfoBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>jvm</name></name></expr></argument>)</argument_list></call></expr></expr_stmt>)</block_content></block>;</function>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><call><name><name>reporters</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>reporters</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><literal type="string">"universal_foo@"</literal> <operator>+</operator> <name>tag</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>reporters</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><literal type="string">"multigroup_foo@"</literal> <operator>+</operator> <name>tag</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>removeRegistry</name></name><argument_list>(<argument><expr><literal type="string">"solr.jvm"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>reporters</name> <operator>=</operator> <call><name><name>metricManager</name><operator>.</operator><name>getReporters</name></name><argument_list>(
        <argument><expr><call><name><name>SolrMetricManager</name><operator>.</operator><name>getRegistryName</name></name><argument_list>(<argument><expr><name><name>SolrInfoMBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>jvm</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>SolrMetricManager</name><operator>.</operator><name>getRegistryName</name></name><argument_list>(<argument><expr><name><name>SolrInfoBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>jvm</name></name></expr></argument>)</argument_list></call></expr></expr_stmt>)</block_content></block>;</function>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name><name>reporters</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>removeRegistry</name></name><argument_list>(<argument><expr><literal type="string">"solr.node"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>reporters</name> <operator>=</operator> <call><name><name>metricManager</name><operator>.</operator><name>getReporters</name></name><argument_list>(
        <argument><expr><call><name><name>SolrMetricManager</name><operator>.</operator><name>getRegistryName</name></name><argument_list>(<argument><expr><name><name>SolrInfoMBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>node</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>SolrMetricManager</name><operator>.</operator><name>getRegistryName</name></name><argument_list>(<argument><expr><name><name>SolrInfoBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>node</name></name></expr></argument>)</argument_list></call></expr></expr_stmt>)</block_content></block>;</function>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name><name>reporters</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>removeRegistry</name></name><argument_list>(<argument><expr><literal type="string">"solr.core.collection1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>reporters</name> <operator>=</operator> <call><name><name>metricManager</name><operator>.</operator><name>getReporters</name></name><argument_list>(
        <argument><expr><call><name><name>SolrMetricManager</name><operator>.</operator><name>getRegistryName</name></name><argument_list>(<argument><expr><name><name>SolrInfoMBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>core</name></name></expr></argument>, <argument><expr><literal type="string">"collection1"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>SolrMetricManager</name><operator>.</operator><name>getRegistryName</name></name><argument_list>(<argument><expr><name><name>SolrInfoBean</name><operator>.</operator><name>Group</name><operator>.</operator><name>core</name></name></expr></argument>, <argument><expr><literal type="string">"collection1"</literal></expr></argument>)</argument_list></call></expr></expr_stmt>)</block>;</class>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name><name>reporters</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
   </block_content>}</block></for>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrMetricReporterTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrMetricReporterTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b275919a873</name><operator>..</operator><name>f3359cca5a0</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrMetricReporterTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrMetricReporterTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrMetricReporterTest</name> extends <name>LuceneTestCase</name> <block>{
     <expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name> <name>attrs</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
     <call><name><name>attrs</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>FieldType</name><operator>.</operator><name>CLASS_NAME</name></name></expr></argument>, <argument><expr><call><name><name>MockMetricReporter</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>attrs</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>CoreAdminParams</name><operator>.</operator><name>NAME</name></name></expr></argument>, <argument><expr><call><name><name>TestUtil</name><operator>.</operator><name>randomUnicodeString</name></name><argument_list>(<argument><expr><name>random</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>attrs</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"enabled"</literal></expr></argument>, <argument><expr><call><name><name>random</name><operator>.</operator><name>nextBoolean</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>boolean</name></type> <name>shouldDefineConfigurable</name> <init>= <expr><call><name><name>random</name><operator>.</operator><name>nextBoolean</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>configurable</name> <init>= <expr><call><name><name>TestUtil</name><operator>.</operator><name>randomUnicodeString</name></name><argument_list>(<argument><expr><name>random</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrMetricTestUtils</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrMetricTestUtils</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">6bd6500b4fe</literal><operator>..</operator><literal type="number">98fc9b1c810</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrMetricTestUtils</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrMetricTestUtils</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">23</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">23</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Random</name></name>;</import>
 
 <import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>Counter</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>TestUtil</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoMBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoBean</name></name>;</import>
 
 <class><specifier>public</specifier> <specifier>final</specifier> class <name>SolrMetricTestUtils</name> <block>{
 
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>int</name></type>                    <name>MAX_ITERATIONS</name> <init>= <expr><literal type="number">100</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name><name>SolrInfoMBean</name><operator>.</operator><name>Category</name></name></type> <name><name>CATEGORIES</name><index>[]</index></name>   <init>= <expr><call><name><name>SolrInfoMBean</name><operator>.</operator><name>Category</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name><name>SolrInfoBean</name><operator>.</operator><name>Category</name></name></type> <name><name>CATEGORIES</name><index>[]</index></name>   <init>= <expr><call><name><name>SolrInfoBean</name><operator>.</operator><name>Category</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
   <function><type><specifier>public</specifier> <specifier>static</specifier> <name>String</name></type> <name>getRandomScope</name><parameter_list>(<parameter><decl><type><name>Random</name></type> <name>random</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <return>return <expr><call><name>getRandomScope</name><argument_list>(<argument><expr><name>random</name></expr></argument>, <argument><expr><call><name><name>random</name><operator>.</operator><name>nextBoolean</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>SolrMetricTestUtils</name> <block>{
     <return>return <expr><name>shouldDefineScope</name> <operator>?</operator> <call><name><name>TestUtil</name><operator>.</operator><name>randomSimpleString</name></name><argument_list>(<argument><expr><name>random</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call> <operator>:</operator> <literal type="null">null</literal></expr>;</return> <comment type="line">// must be simple string for JMX publishing</comment>
   }</block></expr></expr_stmt>
 
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name><name>SolrInfoMBean</name><operator>.</operator><name>Category</name></name></type> <name>getRandomCategory</name><parameter_list>(<parameter><decl><type><name>Random</name></type> <name>random</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name><name>SolrInfoBean</name><operator>.</operator><name>Category</name></name></type> <name>getRandomCategory</name><parameter_list>(<parameter><decl><type><name>Random</name></type> <name>random</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <return>return <expr><call><name>getRandomCategory</name><argument_list>(<argument><expr><name>random</name></expr></argument>, <argument><expr><call><name><name>random</name><operator>.</operator><name>nextBoolean</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name><name>SolrInfoMBean</name><operator>.</operator><name>Category</name></name></type> <name>getRandomCategory</name><parameter_list>(<parameter><decl><type><name>Random</name></type> <name>random</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>shouldDefineCategory</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name><name>SolrInfoBean</name><operator>.</operator><name>Category</name></name></type> <name>getRandomCategory</name><parameter_list>(<parameter><decl><type><name>Random</name></type> <name>random</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>shouldDefineCategory</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <return>return <expr><ternary><condition><expr><name>shouldDefineCategory</name></expr> ?</condition><then> <expr><name><name>CATEGORIES</name><index>[<expr><call><name><name>TestUtil</name><operator>.</operator><name>nextInt</name></name><argument_list>(<argument><expr><name>random</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>CATEGORIES</name><operator>.</operator><name>length</name></name> <operator>-</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr> </then><else>: <expr><literal type="null">null</literal></expr></else></ternary></expr>;</return>
   </block_content>}</block></function>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">75</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">75</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>SolrMetricTestUtils</name> <block>{
     <return>return <expr><name>metrics</name></expr>;</return>
   }</block></expr></expr_stmt>
 
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>SolrMetricProducer</name></type> <name>getProducerOf</name><parameter_list>(<parameter><decl><type><name>SolrMetricManager</name></type> <name>metricManager</name></decl></parameter>, <parameter><decl><type><name><name>SolrInfoMBean</name><operator>.</operator><name>Category</name></name></type> <name>category</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>scope</name></decl></parameter>, <parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Counter</name></argument>&gt;</argument_list></name></type> <name>metrics</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <function><type><specifier>public</specifier> <specifier>static</specifier> <name>SolrMetricProducer</name></type> <name>getProducerOf</name><parameter_list>(<parameter><decl><type><name>SolrMetricManager</name></type> <name>metricManager</name></decl></parameter>, <parameter><decl><type><name><name>SolrInfoBean</name><operator>.</operator><name>Category</name></name></type> <name>category</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>scope</name></decl></parameter>, <parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Counter</name></argument>&gt;</argument_list></name></type> <name>metrics</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <return>return <expr><operator>new</operator> <class><super><name>SolrMetricProducer</name></super><argument_list>()</argument_list> <block>{
       <function><annotation>@<name>Override</name></annotation>
       <type><specifier>public</specifier> <name>void</name></type> <name>initializeMetrics</name><parameter_list>(<parameter><decl><type><name>SolrMetricManager</name></type> <name>manager</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>registry</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>scope</name></decl></parameter>)</parameter_list> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">86</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">86</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>final</name> <name>class</name> <name>SolrMetricTestUtils</name> <block>{
           <return>return;</return>
         }</block></expr></expr_stmt>
         <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Counter</name></argument>&gt;</argument_list></name></name></type> <name>entry</name> <range>: <expr><call><name><name>metrics</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
          <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>counter</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>category</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>manager</name><operator>.</operator><name>counter</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><call><name><name>entry</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>category</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></for>
       </block_content>}</block></function>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrMetricsIntegrationTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrMetricsIntegrationTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>dfb5a0fa2da</name><operator>..</operator><literal type="number">56dab37e65e</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrMetricsIntegrationTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name><name>SolrMetricsIntegrationTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">29</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>SolrTestCaseJ4</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>CoreContainer</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>NodeConfig</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>PluginInfo</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoMBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrResourceLoader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrXmlConfig</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>reporters</name><operator>.</operator><name>MockMetricReporter</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>JmxUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>TestHarness</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>After</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Before</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">50</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">51</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrMetricsIntegrationTest</name> extends <name>SolrTestCaseJ4</name> <block>{
   <expr><specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name>String</name> <name>MULTIREGISTRY</name> <operator>=</operator> <literal type="string">"multiregistry"</literal></expr>;
   <specifier>private</specifier> <specifier>static</specifier> <name>final</name> <name><name>String</name><index>[]</index></name> <name>INITIAL_REPORTERS</name> <operator>=</operator> <block>{<expr><name><name>REPORTER_NAMES</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>, <expr><name><name>REPORTER_NAMES</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>, <expr><name>UNIVERSAL</name></expr>, <expr><name>SPECIFIC</name></expr>, <expr><name>MULTIGROUP</name></expr>, <expr><name>MULTIREGISTRY</name></expr>}</block></block></expr>;</expr_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name><name>String</name><index>[]</index></name></type> <name>RENAMED_REPORTERS</name> <init>= <expr><block>{<expr><name><name>REPORTER_NAMES</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>, <expr><name><name>REPORTER_NAMES</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>, <expr><name>UNIVERSAL</name></expr>, <expr><name>MULTIGROUP</name></expr>}</block></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name><name>SolrInfoMBean</name><operator>.</operator><name>Category</name></name></type> <name>HANDLER_CATEGORY</name> <init>= <expr><name><name>SolrInfoMBean</name><operator>.</operator><name>Category</name><operator>.</operator><name>QUERY</name></name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name><name>SolrInfoBean</name><operator>.</operator><name>Category</name></name></type> <name>HANDLER_CATEGORY</name> <init>= <expr><name><name>SolrInfoBean</name><operator>.</operator><name>Category</name><operator>.</operator><name>QUERY</name></name></expr></init></decl>;</decl_stmt>
 
   <decl_stmt><decl><type><specifier>private</specifier> <name>CoreContainer</name></type> <name>cc</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>SolrMetricManager</name></type> <name>metricManager</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>tag</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>int</name></type> <name>jmxReporter</name></decl>;</decl_stmt>
 
   <function><type><specifier>private</specifier> <name>void</name></type> <name>assertTagged</name><parameter_list>(<parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>SolrMetricReporter</name></argument>&gt;</argument_list></name></type> <name>reporters</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>name</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"Reporter '"</literal> <operator>+</operator> <name>name</name> <operator>+</operator> <literal type="string">"' missing in "</literal> <operator>+</operator> <name>reporters</name></expr></argument>, <argument><expr><call><name><name>reporters</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><name>name</name> <operator>+</operator> <literal type="string">"@"</literal> <operator>+</operator> <name>tag</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">71</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">73</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrMetricsIntegrationTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><name>cc</name> <operator>=</operator> <call><name>createCoreContainer</name><argument_list>(<argument><expr><name>cfg</name></expr></argument>,
         <argument><expr><operator>new</operator> <call><name><name>TestHarness</name><operator>.</operator><name>TestCoresLocator</name></name><argument_list>(<argument><expr><name>DEFAULT_TEST_CORENAME</name></expr></argument>, <argument><expr><call><name><name>initCoreDataDir</name><operator>.</operator><name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"solrconfig.xml"</literal></expr></argument>, <argument><expr><literal type="string">"schema.xml"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <name><name>h</name><operator>.</operator><name>coreName</name></name> <operator>=</operator> <name>DEFAULT_TEST_CORENAME</name></block></expr>;</expr_stmt>
    <expr_stmt><expr><name>jmxReporter</name> <operator>=</operator> <ternary><condition><expr><call><name><name>JmxUtil</name><operator>.</operator><name>findFirstMBeanServer</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr>;</expr_stmt>
     <expr_stmt><expr><name>metricManager</name> <operator>=</operator> <call><name><name>cc</name><operator>.</operator><name>getMetricManager</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>tag</name> <operator>=</operator> <call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCoreMetricManager</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTag</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <comment type="line">// initially there are more reporters, because two of them are added via a matching collection name</comment>
     <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>SolrMetricReporter</name></argument>&gt;</argument_list></name></type> <name>reporters</name> <init>= <expr><call><name><name>metricManager</name><operator>.</operator><name>getReporters</name></name><argument_list>(<argument><expr><literal type="string">"solr.core."</literal> <operator>+</operator> <name>DEFAULT_TEST_CORENAME</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>INITIAL_REPORTERS</name><operator>.</operator><name>length</name></name></expr></argument>, <argument><expr><call><name><name>reporters</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>INITIAL_REPORTERS</name><operator>.</operator><name>length</name></name> <operator>+</operator> <name>jmxReporter</name></expr></argument>, <argument><expr><call><name><name>reporters</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <for>for <control>(<init><decl><type><name>String</name></type> <name>r</name> <range>: <expr><name>INITIAL_REPORTERS</name></expr></range></decl></init>)</control> <block>{<block_content>
       <expr_stmt><expr><call><name>assertTagged</name><argument_list>(<argument><expr><name>reporters</name></expr></argument>, <argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">85</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">88</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrMetricsIntegrationTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><name>cfg</name> <operator>=</operator> <call><name><name>cc</name><operator>.</operator><name>getConfig</name></name><argument_list>()</argument_list></call></expr>;
     <name><name>PluginInfo</name><index>[]</index></name> <name>plugins</name> <operator>=</operator> <call><name><name>cfg</name><operator>.</operator><name>getMetricReporterPlugins</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><name>plugins</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name><name>plugins</name><operator>.</operator><name>length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">10</literal> <operator>+</operator> <name>jmxReporter</name></expr></argument>, <argument><expr><name><name>plugins</name><operator>.</operator><name>length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>reporters</name> <operator>=</operator> <call><name><name>metricManager</name><operator>.</operator><name>getReporters</name></name><argument_list>(<argument><expr><literal type="string">"solr.node"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><call><name><name>reporters</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">4</literal> <operator>+</operator> <name>jmxReporter</name></expr></argument>, <argument><expr><call><name><name>reporters</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"Reporter '"</literal> <operator>+</operator> <name><name>REPORTER_NAMES</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+</operator> <literal type="string">"' missing in solr.node"</literal></expr></argument>, <argument><expr><call><name><name>reporters</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><name><name>REPORTER_NAMES</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"Reporter '"</literal> <operator>+</operator> <name>UNIVERSAL</name> <operator>+</operator> <literal type="string">"' missing in solr.node"</literal></expr></argument>, <argument><expr><call><name><name>reporters</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><name>UNIVERSAL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"Reporter '"</literal> <operator>+</operator> <name>MULTIGROUP</name> <operator>+</operator> <literal type="string">"' missing in solr.node"</literal></expr></argument>, <argument><expr><call><name><name>reporters</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><name>MULTIGROUP</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">120</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">123</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrMetricsIntegrationTest</name> extends <name>SolrTestCaseJ4</name> <block>{
 
     <expr><name>String</name> <name>metricName</name> <operator>=</operator> <call><name><name>SolrMetricManager</name><operator>.</operator><name>mkName</name></name><argument_list>(<argument><expr><name>METRIC_NAME</name></expr></argument>, <argument><expr><call><name><name>HANDLER_CATEGORY</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>HANDLER_NAME</name></expr></argument>)</argument_list></call></expr>;
     <name>SolrCoreMetricManager</name> <name>coreMetricManager</name> <operator>=</operator> <call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCoreMetricManager</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>Timer</name></type> <name>timer</name> <init>= <expr><operator>(</operator><name>Timer</name><operator>)</operator> <call><name><name>metricManager</name><operator>.</operator><name>timer</name></name><argument_list>(<argument><expr><call><name><name>coreMetricManager</name><operator>.</operator><name>getRegistryName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>metricName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Timer</name></type> <name>timer</name> <init>= <expr><operator>(</operator><name>Timer</name><operator>)</operator> <call><name><name>metricManager</name><operator>.</operator><name>timer</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><call><name><name>coreMetricManager</name><operator>.</operator><name>getRegistryName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>metricName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name>long</name></type> <name>initialCount</name> <init>= <expr><call><name><name>timer</name><operator>.</operator><name>getCount</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">132</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">135</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrMetricsIntegrationTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><name>long</name> <name>finalCount</name> <operator>=</operator> <call><name><name>timer</name><operator>.</operator><name>getCount</name></name><argument_list>()</argument_list></call></expr>;
     <call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"metric counter incorrect"</literal></expr></argument>, <argument><expr><name>iterations</name></expr></argument>, <argument><expr><name>finalCount</name> <operator>-</operator> <name>initialCount</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>SolrMetricReporter</name></argument>&gt;</argument_list></name></type> <name>reporters</name> <init>= <expr><call><name><name>metricManager</name><operator>.</operator><name>getReporters</name></name><argument_list>(<argument><expr><call><name><name>coreMetricManager</name><operator>.</operator><name>getRegistryName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>RENAMED_REPORTERS</name><operator>.</operator><name>length</name></name></expr></argument>, <argument><expr><call><name><name>reporters</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>RENAMED_REPORTERS</name><operator>.</operator><name>length</name></name> <operator>+</operator> <name>jmxReporter</name></expr></argument>, <argument><expr><call><name><name>reporters</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <comment type="line">// SPECIFIC and MULTIREGISTRY were skipped because they were</comment>
     <comment type="line">// specific to collection1</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name><name>SolrGangliaReporterTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name><name>SolrGangliaReporterTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>c50ff3c8419</name><operator>..</operator><name>eca414cd8ff</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name><name>SolrGangliaReporterTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name><name>SolrGangliaReporterTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">64</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">64</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrGangliaReporterTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><name><name>h</name><operator>.</operator><name>coreName</name></name> <operator>=</operator> <name>DEFAULT_TEST_CORENAME</name></expr>;
     <name>SolrMetricManager</name> <name>metricManager</name> <operator>=</operator> <call><name><name>cc</name><operator>.</operator><name>getMetricManager</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>SolrMetricReporter</name></argument>&gt;</argument_list></name></type> <name>reporters</name> <init>= <expr><call><name><name>metricManager</name><operator>.</operator><name>getReporters</name></name><argument_list>(<argument><expr><literal type="string">"solr.node"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>reporters</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>reporters</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>reporters</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>&gt;=</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>SolrMetricReporter</name></type> <name>reporter</name> <init>= <expr><call><name><name>reporters</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"test"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><name>reporter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><name>reporter</name> <operator>instanceof</operator> <name>SolrGangliaReporter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name><name>SolrGraphiteReporterTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name><name>SolrGraphiteReporterTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f45b19359db</name><operator>..</operator><literal type="number">54385049033</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name><name>SolrGraphiteReporterTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name><name>SolrGraphiteReporterTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">35</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">35</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrResourceLoader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrXmlConfig</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricManager</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricReporter</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>JmxUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>TestHarness</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">45</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">46</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrGraphiteReporterTest</name> extends <name>SolrTestCaseJ4</name> <block>{
 
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testReporter</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
    <expr><name>int</name> <name>jmxReporter</name> <operator>=</operator> <call><name><name>JmxUtil</name><operator>.</operator><name>findFirstMBeanServer</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal> <operator>?</operator> <literal type="number">1</literal></expr></block></expr></argument></throws><operator>:</operator> <literal type="number">0</literal></expr>;
     <name>Path</name> <name>home</name> <operator>=</operator> <call><name><name>Paths</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name>TEST_HOME</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <comment type="line">// define these properties, they are used in solrconfig.xml</comment>
     <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>setProperty</name></name><argument_list>(<argument><expr><literal type="string">"solr.test.sys.prop1"</literal></expr></argument>, <argument><expr><literal type="string">"propone"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">63</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">65</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrGraphiteReporterTest</name> extends <name>SolrTestCaseJ4</name> <block>{
       <expr><name><name>h</name><operator>.</operator><name>coreName</name></name> <operator>=</operator> <name>DEFAULT_TEST_CORENAME</name></expr>;
       <name>SolrMetricManager</name> <name>metricManager</name> <operator>=</operator> <call><name><name>cc</name><operator>.</operator><name>getMetricManager</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
       <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>SolrMetricReporter</name></argument>&gt;</argument_list></name></type> <name>reporters</name> <init>= <expr><call><name><name>metricManager</name><operator>.</operator><name>getReporters</name></name><argument_list>(<argument><expr><literal type="string">"solr.node"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>reporters</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1</literal> <operator>+</operator> <name>jmxReporter</name></expr></argument>, <argument><expr><call><name><name>reporters</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>SolrMetricReporter</name></type> <name>reporter</name> <init>= <expr><call><name><name>reporters</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"test"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><name>reporter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><name>reporter</name> <operator>instanceof</operator> <name>SolrGraphiteReporter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name><name>SolrJmxReporterTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name><name>SolrJmxReporterTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">82b9d58cc85</literal><operator>..</operator><literal type="number">839a44b6a72</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name><name>SolrJmxReporterTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name><name>SolrJmxReporterTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>MBeanServer</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>ObjectInstance</name></name>;</import>
 <import>import <name><name>javax</name><operator>.</operator><name>management</name><operator>.</operator><name>ObjectName</name></name>;</import>
 
<import>import <name><name>java</name><operator>.</operator><name>rmi</name><operator>.</operator><name>registry</name><operator>.</operator><name>LocateRegistry</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>rmi</name><operator>.</operator><name>registry</name><operator>.</operator><name>Registry</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Random</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">31</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>SolrTestCaseJ4</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>CoreAdminParams</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>PluginInfo</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrCore</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoMBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrCoreMetricManager</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricManager</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricProducer</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">40</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">42</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricTestUtils</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>schema</name><operator>.</operator><name>FieldType</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>After</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Before</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>BeforeClass</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
 
 <class><specifier>public</specifier> class <name>SolrJmxReporterTest</name> <super_list><extends>extends <super><name>SolrTestCaseJ4</name></super></extends></super_list> <block>{
 
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>int</name></type> <name>MAX_ITERATIONS</name> <init>= <expr><literal type="number">20</literal></expr></init></decl>;</decl_stmt>
 
  <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <name>int</name></type> <name>jmxPort</name></decl>;</decl_stmt>

   <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>domain</name></decl>;</decl_stmt>
 
   <decl_stmt><decl><type><specifier>private</specifier> <name>SolrCoreMetricManager</name></type> <name>coreMetricManager</name></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">53</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">58</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrJmxReporterTest</name> extends <name>SolrTestCaseJ4</name> <block>{
   <expr><specifier>private</specifier> <name>SolrJmxReporter</name> <name>reporter</name></expr>;
   <specifier>private</specifier> <name>MBeanServer</name> <name>mBeanServer</name></block></expr>;</expr_stmt>
   <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>reporterName</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>rootName</name></decl>;</decl_stmt>

  <function><annotation>@<name>BeforeClass</name></annotation>
  <type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>init</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><name>jmxPort</name> <operator>=</operator> <call><name>getNextAvailablePort</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><name>jmxPort</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>LocateRegistry</name><operator>.</operator><name>createRegistry</name></name><argument_list>(<argument><expr><name>jmxPort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>
 
   <function><annotation>@<name>Before</name></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>beforeTest</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">60</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">73</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrJmxReporterTest</name> extends <name>SolrTestCaseJ4</name> <block>{
 
     <expr><name>final</name> <name>SolrCore</name> <name>core</name> <operator>=</operator> <call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call></expr>;
     <name>domain</name> <operator>=</operator> <call><name><name>core</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><name>rootName</name> <operator>=</operator> <call><name><name>TestUtil</name><operator>.</operator><name>randomSimpleString</name></name><argument_list>(<argument><expr><call><name>random</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <expr_stmt><expr><name>coreMetricManager</name> <operator>=</operator> <call><name><name>core</name><operator>.</operator><name>getCoreMetricManager</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>metricManager</name> <operator>=</operator> <call><name><name>core</name><operator>.</operator><name>getCoreDescriptor</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCoreContainer</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getMetricManager</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>PluginInfo</name></type> <name>pluginInfo</name> <init>= <expr><call><name>createReporterPluginInfo</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>PluginInfo</name></type> <name>pluginInfo</name> <init>= <expr><call><name>createReporterPluginInfo</name><argument_list>(<argument><expr><name>rootName</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>loadReporter</name></name><argument_list>(<argument><expr><call><name><name>coreMetricManager</name><operator>.</operator><name>getRegistryName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>coreMetricManager</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getResourceLoader</name><argument_list>()</argument_list></call></expr></argument>,
         <argument><expr><name>pluginInfo</name></expr></argument>, <argument><expr><call><name><name>coreMetricManager</name><operator>.</operator><name>getTag</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">79</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">93</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrJmxReporterTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><call><name>assertNotNull</name><argument_list>(<argument><expr><literal type="string">"MBean server not found."</literal></expr></argument>, <argument><expr><name>mBeanServer</name></expr></argument>)</argument_list></call></expr>;
   }</block></expr></expr_stmt>
 
  <function><type><specifier>private</specifier> <name>PluginInfo</name></type> <name>createReporterPluginInfo</name><parameter_list>()</parameter_list> <block>{<block_content>
  <function><type><specifier>private</specifier> <name>PluginInfo</name></type> <name>createReporterPluginInfo</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>rootName</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>enabled</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <decl_stmt><decl><type><name>Random</name></type> <name>random</name> <init>= <expr><call><name>random</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>className</name> <init>= <expr><call><name><name>SolrJmxReporter</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>reporterName</name> <init>= <expr><call><name><name>TestUtil</name><operator>.</operator><name>randomSimpleString</name></name><argument_list>(<argument><expr><name>random</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">87</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">101</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrJmxReporterTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name> <name>attrs</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
     <call><name><name>attrs</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>FieldType</name><operator>.</operator><name>CLASS_NAME</name></name></expr></argument>, <argument><expr><name>className</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>attrs</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name><name>CoreAdminParams</name><operator>.</operator><name>NAME</name></name></expr></argument>, <argument><expr><name>reporterName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>attrs</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"rootName"</literal></expr></argument>, <argument><expr><name>rootName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>attrs</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"enabled"</literal></expr></argument>, <argument><expr><name>enabled</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>attrs</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"serviceUrl"</literal></expr></argument>, <argument><expr><literal type="string">"service:jmx:rmi:///jndi/rmi://localhost:"</literal> <operator>+</operator> <name>jmxPort</name> <operator>+</operator> <literal type="string">"/solrjmx"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>boolean</name></type> <name>shouldOverrideDomain</name> <init>= <expr><call><name><name>random</name><operator>.</operator><name>nextBoolean</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <if_stmt><if>if <condition>(<expr><name>shouldOverrideDomain</name></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">114</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">131</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrJmxReporterTest</name> extends <name>SolrTestCaseJ4</name> <block>{
 
     <expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Counter</name></argument>&gt;</argument_list></name> <name>registered</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
     <name>String</name> <name>scope</name> <operator>=</operator> <call><name><name>SolrMetricTestUtils</name><operator>.</operator><name>getRandomScope</name></name><argument_list>(<argument><expr><name>random</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>SolrInfoMBean</name><operator>.</operator><name>Category</name></name></type> <name>category</name> <init>= <expr><call><name><name>SolrMetricTestUtils</name><operator>.</operator><name>getRandomCategory</name></name><argument_list>(<argument><expr><name>random</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>SolrInfoBean</name><operator>.</operator><name>Category</name></name></type> <name>category</name> <init>= <expr><call><name><name>SolrMetricTestUtils</name><operator>.</operator><name>getRandomCategory</name></name><argument_list>(<argument><expr><name>random</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name>int</name></type> <name>iterations</name> <init>= <expr><call><name><name>TestUtil</name><operator>.</operator><name>nextInt</name></name><argument_list>(<argument><expr><name>random</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>MAX_ITERATIONS</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>iterations</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">126</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">143</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrJmxReporterTest</name> extends <name>SolrTestCaseJ4</name> <block>{
       <expr><name><name>Set</name><argument_list type="generic">&lt;<argument><name>ObjectInstance</name></argument>&gt;</argument_list></name> <name>objects</name> <operator>=</operator> <call><name><name>mBeanServer</name><operator>.</operator><name>queryMBeans</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;
       <call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>registered</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>objects</name><operator>.</operator><name>stream</name></name><argument_list>()</argument_list></call><operator>.</operator>
           <call><name>filter</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>o</name></decl></parameter></parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>scope</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><call><name><name>o</name><operator>.</operator><name>getObjectName</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getKeyProperty</name><argument_list>(<argument><expr><literal type="string">"scope"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator>
                      <call><name><name>reporterName</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><call><name><name>o</name><operator>.</operator><name>getObjectName</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getKeyProperty</name><argument_list>(<argument><expr><literal type="string">"reporter"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block_content></block></lambda></expr></argument>)</argument_list></call><operator>.</operator><call><name>count</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
                      <expr_stmt><expr><call><name><name>rootName</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><call><name><name>o</name><operator>.</operator><name>getObjectName</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getDomain</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></expr_stmt>)</block_content>.count(</block></for>)</block_content></block></if></if_stmt>)</block_content></block>;</function>
     </block_content>}</block></function>
   </block_content>}</block></function>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">135</literal></expr><operator>,</operator><expr><literal type="number">17</literal> <operator>+</operator><literal type="number">152</literal></expr><operator>,</operator><expr><literal type="number">17</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrJmxReporterTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><name>Random</name> <name>random</name> <operator>=</operator> <call><name>random</name><argument_list>()</argument_list></call></expr>;
 
     <name>String</name> <name>scope</name> <operator>=</operator> <call><name><name>SolrMetricTestUtils</name><operator>.</operator><name>getRandomScope</name></name><argument_list>(<argument><expr><name>random</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>SolrInfoMBean</name><operator>.</operator><name>Category</name></name></type> <name>category</name> <init>= <expr><call><name><name>SolrMetricTestUtils</name><operator>.</operator><name>getRandomCategory</name></name><argument_list>(<argument><expr><name>random</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>SolrInfoBean</name><operator>.</operator><name>Category</name></name></type> <name>category</name> <init>= <expr><call><name><name>SolrMetricTestUtils</name><operator>.</operator><name>getRandomCategory</name></name><argument_list>(<argument><expr><name>random</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Counter</name></argument>&gt;</argument_list></name></type> <name>metrics</name> <init>= <expr><call><name><name>SolrMetricTestUtils</name><operator>.</operator><name>getRandomMetrics</name></name><argument_list>(<argument><expr><name>random</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>SolrMetricProducer</name></type> <name>producer</name> <init>= <expr><call><name><name>SolrMetricTestUtils</name><operator>.</operator><name>getProducerOf</name></name><argument_list>(<argument><expr><name>metricManager</name></expr></argument>, <argument><expr><name>category</name></expr></argument>, <argument><expr><name>scope</name></expr></argument>, <argument><expr><name>metrics</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <constructor_decl><name><name>coreMetricManager</name><operator>.</operator><name>registerMetricProducer</name></name><parameter_list>(<parameter><decl><type><name>scope</name></type></decl></parameter>, <parameter><decl><type><name>producer</name></type></decl></parameter>)</parameter_list>;</constructor_decl>
     <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>ObjectInstance</name></argument>&gt;</argument_list></name></type> <name>objects</name> <init>= <expr><call><name><name>mBeanServer</name><operator>.</operator><name>queryMBeans</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>metrics</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>objects</name><operator>.</operator><name>stream</name></name><argument_list>()</argument_list></call><operator>.</operator>
         <call><name>filter</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>o</name></decl></parameter></parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>scope</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><call><name><name>o</name><operator>.</operator><name>getObjectName</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getKeyProperty</name><argument_list>(<argument><expr><literal type="string">"scope"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator>
            <call><name><name>reporterName</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><call><name><name>o</name><operator>.</operator><name>getObjectName</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getKeyProperty</name><argument_list>(<argument><expr><literal type="string">"reporter"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block_content></block></lambda></expr></argument>)</argument_list></call><operator>.</operator><call><name>count</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>o</name><operator>.</operator><name>getObjectName</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getDomain</name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>rootName</name></expr></argument>)</argument_list></call></expr></expr_stmt>)</block><expr_stmt><expr><operator>.</operator><call><name>count</name><argument_list>()</argument_list></call></expr></expr_stmt></class>)</block_content></block>;</function>
 
     <expr_stmt><expr><call><name><name>h</name><operator>.</operator><name>getCoreContainer</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>reload</name><argument_list>(<argument><expr><call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>PluginInfo</name></type> <name>pluginInfo</name> <init>= <expr><call><name>createReporterPluginInfo</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>PluginInfo</name></type> <name>pluginInfo</name> <init>= <expr><call><name>createReporterPluginInfo</name><argument_list>(<argument><expr><name>rootName</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>loadReporter</name></name><argument_list>(<argument><expr><call><name><name>coreMetricManager</name><operator>.</operator><name>getRegistryName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>coreMetricManager</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getResourceLoader</name><argument_list>()</argument_list></call></expr></argument>,
         <argument><expr><name>pluginInfo</name></expr></argument>, <argument><expr><call><name><name>String</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><call><name><name>coreMetricManager</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>hashCode</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <constructor_decl><name><name>coreMetricManager</name><operator>.</operator><name>registerMetricProducer</name></name><parameter_list>(<parameter><decl><type><name>scope</name></type></decl></parameter>, <parameter><decl><type><name>producer</name></type></decl></parameter>)</parameter_list>;</constructor_decl>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">153</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">170</literal></expr><operator>,</operator><expr><literal type="number">38</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrJmxReporterTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><name>objects</name> <operator>=</operator> <call><name><name>mBeanServer</name><operator>.</operator><name>queryMBeans</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;
     <call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>metrics</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>objects</name><operator>.</operator><name>stream</name></name><argument_list>()</argument_list></call><operator>.</operator>
         <call><name>filter</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>o</name></decl></parameter></parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>scope</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><call><name><name>o</name><operator>.</operator><name>getObjectName</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getKeyProperty</name><argument_list>(<argument><expr><literal type="string">"scope"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator>
            <call><name><name>pluginInfo</name><operator>.</operator><name>name</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><call><name><name>o</name><operator>.</operator><name>getObjectName</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getKeyProperty</name><argument_list>(<argument><expr><literal type="string">"reporter"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block_content></block></lambda></expr></argument>)</argument_list></call><operator>.</operator><call><name>count</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>rootName</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><call><name><name>o</name><operator>.</operator><name>getObjectName</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getDomain</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></expr_stmt>)</block><expr_stmt><expr><operator>.</operator><call><name>count</name><argument_list>()</argument_list></call></expr></expr_stmt></class></expr></return>)</block_content></block>;</function>
  </block_content>}</block></function>

  <function><annotation>@<name>Test</name></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testEnabled</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>String</name></type> <name>root1</name> <init>= <expr><call><name><name>TestUtil</name><operator>.</operator><name>randomSimpleString</name></name><argument_list>(<argument><expr><call><name>random</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>PluginInfo</name></type> <name>pluginInfo1</name> <init>= <expr><call><name>createReporterPluginInfo</name><argument_list>(<argument><expr><name>root1</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>loadReporter</name></name><argument_list>(<argument><expr><call><name><name>coreMetricManager</name><operator>.</operator><name>getRegistryName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>coreMetricManager</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getResourceLoader</name><argument_list>()</argument_list></call></expr></argument>,
        <argument><expr><name>pluginInfo1</name></expr></argument>, <argument><expr><call><name><name>coreMetricManager</name><operator>.</operator><name>getTag</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>String</name></type> <name>root2</name> <init>= <expr><call><name><name>TestUtil</name><operator>.</operator><name>randomSimpleString</name></name><argument_list>(<argument><expr><call><name>random</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>root2</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>root1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>PluginInfo</name></type> <name>pluginInfo2</name> <init>= <expr><call><name>createReporterPluginInfo</name><argument_list>(<argument><expr><name>root2</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>metricManager</name><operator>.</operator><name>loadReporter</name></name><argument_list>(<argument><expr><call><name><name>coreMetricManager</name><operator>.</operator><name>getRegistryName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>coreMetricManager</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getResourceLoader</name><argument_list>()</argument_list></call></expr></argument>,
        <argument><expr><name>pluginInfo2</name></expr></argument>, <argument><expr><call><name><name>coreMetricManager</name><operator>.</operator><name>getTag</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>SolrMetricReporter</name></argument>&gt;</argument_list></name></type> <name>reporters</name> <init>= <expr><call><name><name>metricManager</name><operator>.</operator><name>getReporters</name></name><argument_list>(<argument><expr><call><name><name>coreMetricManager</name><operator>.</operator><name>getRegistryName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>reporters</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><name><name>pluginInfo1</name><operator>.</operator><name>name</name></name> <operator>+</operator> <literal type="string">"@"</literal> <operator>+</operator> <call><name><name>coreMetricManager</name><operator>.</operator><name>getTag</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>reporters</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><name><name>pluginInfo2</name><operator>.</operator><name>name</name></name> <operator>+</operator> <literal type="string">"@"</literal> <operator>+</operator> <call><name><name>coreMetricManager</name><operator>.</operator><name>getTag</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>String</name></type> <name>scope</name> <init>= <expr><call><name><name>SolrMetricTestUtils</name><operator>.</operator><name>getRandomScope</name></name><argument_list>(<argument><expr><call><name>random</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>SolrInfoBean</name><operator>.</operator><name>Category</name></name></type> <name>category</name> <init>= <expr><call><name><name>SolrMetricTestUtils</name><operator>.</operator><name>getRandomCategory</name></name><argument_list>(<argument><expr><call><name>random</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Counter</name></argument>&gt;</argument_list></name></type> <name>metrics</name> <init>= <expr><call><name><name>SolrMetricTestUtils</name><operator>.</operator><name>getRandomMetrics</name></name><argument_list>(<argument><expr><call><name>random</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>SolrMetricProducer</name></type> <name>producer</name> <init>= <expr><call><name><name>SolrMetricTestUtils</name><operator>.</operator><name>getProducerOf</name></name><argument_list>(<argument><expr><name>metricManager</name></expr></argument>, <argument><expr><name>category</name></expr></argument>, <argument><expr><name>scope</name></expr></argument>, <argument><expr><name>metrics</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>coreMetricManager</name><operator>.</operator><name>registerMetricProducer</name></name><argument_list>(<argument><expr><name>scope</name></expr></argument>, <argument><expr><name>producer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>ObjectInstance</name></argument>&gt;</argument_list></name></type> <name>objects</name> <init>= <expr><call><name><name>mBeanServer</name><operator>.</operator><name>queryMBeans</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>metrics</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>objects</name><operator>.</operator><name>stream</name></name><argument_list>()</argument_list></call><operator>.</operator>
        <call><name>filter</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>o</name></decl></parameter></parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>scope</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><call><name><name>o</name><operator>.</operator><name>getObjectName</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getKeyProperty</name><argument_list>(<argument><expr><literal type="string">"scope"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator>
            <call><name><name>root1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><call><name><name>o</name><operator>.</operator><name>getObjectName</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getDomain</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block_content></block></lambda></expr></argument>)</argument_list></call><operator>.</operator><call><name>count</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name><name>objects</name><operator>.</operator><name>stream</name></name><argument_list>()</argument_list></call><operator>.</operator>
        <call><name>filter</name><argument_list>(<argument><expr><lambda><parameter_list type="pseudo"><parameter><decl><name>o</name></decl></parameter></parameter_list> -&gt;<block type="pseudo"><block_content> <expr><call><name><name>scope</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><call><name><name>o</name><operator>.</operator><name>getObjectName</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getKeyProperty</name><argument_list>(<argument><expr><literal type="string">"scope"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator>
            <call><name><name>root2</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><call><name><name>o</name><operator>.</operator><name>getObjectName</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getDomain</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></block_content></block></lambda></expr></argument>)</argument_list></call><operator>.</operator><call><name>count</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
 </block_content>}</block></function>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name><name>SolrSlf4jReporterTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name><name>SolrSlf4jReporterTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">47bf8e7216f</literal><operator>..</operator><name>a8f33437913</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name><name>SolrSlf4jReporterTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name><name>SolrSlf4jReporterTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">57</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">57</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrSlf4jReporterTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><name><name>h</name><operator>.</operator><name>coreName</name></name> <operator>=</operator> <name>DEFAULT_TEST_CORENAME</name></expr>;
     <name>SolrMetricManager</name> <name>metricManager</name> <operator>=</operator> <call><name><name>cc</name><operator>.</operator><name>getMetricManager</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>SolrMetricReporter</name></argument>&gt;</argument_list></name></type> <name>reporters</name> <init>= <expr><call><name><name>metricManager</name><operator>.</operator><name>getReporters</name></name><argument_list>(<argument><expr><literal type="string">"solr.node"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><call><name><name>reporters</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>reporters</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>reporters</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>&gt;=</operator> <literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>SolrMetricReporter</name></type> <name>reporter</name> <init>= <expr><call><name><name>reporters</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"test1"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><name>reporter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><name>reporter</name> <operator>instanceof</operator> <name>SolrSlf4jReporter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrCloudReportersTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrCloudReportersTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">91952b889d8</literal><operator>..</operator><name>a63f12bb950</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrCloudReportersTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>metrics</name><operator>/</operator><name>reporters</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrCloudReportersTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">28</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrCore</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>AggregateMetric</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricManager</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricReporter</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>JmxUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Before</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>BeforeClass</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">39</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
 <class><specifier>public</specifier> class <name>SolrCloudReportersTest</name> <super_list><extends>extends <super><name>SolrCloudTestCase</name></super></extends></super_list> <block>{
   <decl_stmt><decl><type><name>int</name></type> <name>leaderRegistries</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><name>int</name></type> <name>clusterRegistries</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>jmxReporter</name></decl>;</decl_stmt>
 
 
   <function><annotation>@<name>BeforeClass</name></annotation>
   <type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>configureDummyCluster</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
     <expr_stmt><expr><call><name>configureCluster</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>configure</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>jmxReporter</name> <operator>=</operator> <ternary><condition><expr><call><name><name>JmxUtil</name><operator>.</operator><name>findFirstMBeanServer</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr>;</expr_stmt>
   </block_content>}</block></function>
 
   <annotation>@<name>Before</name></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">97</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">100</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrCloudReportersTest</name> extends <name>SolrCloudTestCase</name> <block>{
       <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><call><name><name>sor</name><operator>.</operator><name>getPeriod</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</block></expr></expr_stmt>
       <for>for <control>(<init><decl><type><name>String</name></type> <name>registryName</name> <range>: <expr><call><name><name>metricManager</name><operator>.</operator><name>registryNames</name></name><argument_list>(<argument><expr><literal type="string">".*\\.shard[0-9]\\.replica.*"</literal></expr></argument>)</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
         <expr_stmt><expr><name>reporters</name> <operator>=</operator> <call><name><name>metricManager</name><operator>.</operator><name>getReporters</name></name><argument_list>(<argument><expr><name>registryName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>reporters</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>reporters</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>reporters</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal> <operator>+</operator> <name>jmxReporter</name></expr></argument>, <argument><expr><call><name><name>reporters</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><name>reporter</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
         <for>for <control>(<init><decl><type><name>String</name></type> <name>name</name> <range>: <expr><call><name><name>reporters</name><operator>.</operator><name>keySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
           <if_stmt><if>if <condition>(<expr><call><name><name>name</name><operator>.</operator><name>startsWith</name></name><argument_list>(<argument><expr><literal type="string">"test"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">156</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">159</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>SolrCloudReportersTest</name> extends <name>SolrCloudTestCase</name> <block>{
       <expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>reporters</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name><name>reporters</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</block></expr></expr_stmt>
       <for>for <control>(<init><decl><type><name>String</name></type> <name>registryName</name> <range>: <expr><call><name><name>metricManager</name><operator>.</operator><name>registryNames</name></name><argument_list>(<argument><expr><literal type="string">".*\\.shard[0-9]\\.replica.*"</literal></expr></argument>)</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
         <expr_stmt><expr><name>reporters</name> <operator>=</operator> <call><name><name>metricManager</name><operator>.</operator><name>getReporters</name></name><argument_list>(<argument><expr><name>registryName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>reporters</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name><name>reporters</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>reporters</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal> <operator>+</operator> <name>jmxReporter</name></expr></argument>, <argument><expr><call><name><name>reporters</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></for>
     </block_content>}</block></if></if_stmt>)</block_content></block><empty_stmt>;</empty_stmt></for>
   </block_content>}</block></for>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>MockSearchComponent</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>MockSearchComponent</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">1539dfd919a</literal><operator>..</operator><literal type="number">874b21a8c6b</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>MockSearchComponent</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>MockSearchComponent</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">46</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">46</literal></expr><operator>,</operator><expr><literal type="number">4</literal> @@ <specifier>public</specifier> <name>class</name> <name>MockSearchComponent</name> extends <name>SearchComponent</name> <block>{
   <expr><specifier>public</specifier> <name>String</name> <call><name>getDescription</name><argument_list>()</argument_list></call> <block>{
     <return>return <expr><literal type="string">"Mock search component for tests"</literal></expr>;</return>
   }</block>

  @<name>Override</name>
  <specifier>public</specifier> <name>String</name> <call><name>getSource</name><argument_list>()</argument_list></call> <block>{
    <return>return <expr><literal type="string">""</literal></expr>;</return>
  }</block>
  
 }
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestFastLRUCache</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestFastLRUCache</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">0034b13e4d9</literal><operator>..</operator><literal type="number">72fc9cedbb5</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestFastLRUCache</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestFastLRUCache</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr>,<expr><literal type="number">12</literal> <operator>+</operator><literal type="number">17</literal></expr>,<expr><literal type="number">13</literal> @@</expr>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name></name>;</package></block></expr></expr_stmt>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>TestUtil</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricsMap</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricManager</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>ConcurrentLRUCache</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>RTimer</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Serializable</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Random</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">37</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">38</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>atomic</name><operator>.</operator><name>AtomicInteger</name></name>;</import>
  <expr_stmt><expr><operator>*</operator> @<name>since</name> <name>solr</name> <literal type="number">1.4</literal>
  <operator>*</operator><operator>/</operator>
 <specifier>public</specifier> <name>class</name> <name>TestFastLRUCache</name> extends <name>LuceneTestCase</name> <block>{
  
  <expr><name>SolrMetricManager</name> <name>metricManager</name> <operator>=</operator> <operator>new</operator> <call><name>SolrMetricManager</name><argument_list>()</argument_list></call></expr>;
  <name>String</name> <name>registry</name> <operator>=</operator> <call><name><name>TestUtil</name><operator>.</operator><name>randomSimpleString</name></name><argument_list>(<argument><expr><call><name>random</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
  <decl_stmt><decl><type><name>String</name></type> <name>scope</name> <init>= <expr><call><name><name>TestUtil</name><operator>.</operator><name>randomSimpleString</name></name><argument_list>(<argument><expr><call><name>random</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

   <function><type><specifier>public</specifier> <name>void</name></type> <name>testPercentageAutowarm</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <decl_stmt><decl><type><name><name>FastLRUCache</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>fastCache</name> <init>= <expr><operator>new</operator> <call><name><name>FastLRUCache</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>fastCache</name><operator>.</operator><name>initializeMetrics</name></name><argument_list>(<argument><expr><name>metricManager</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>MetricsMap</name></type> <name>metrics</name> <init>= <expr><call><name><name>fastCache</name><operator>.</operator><name>getMetricsMap</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>params</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>params</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"size"</literal></expr></argument>, <argument><expr><literal type="string">"100"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>params</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"initialSize"</literal></expr></argument>, <argument><expr><literal type="string">"10"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">52</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">58</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestFastLRUCache</name> extends <name>LuceneTestCase</name> <block>{
     }</block>
     <call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"25"</literal></expr></argument>, <argument><expr><call><name><name>fastCache</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">25</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><call><name><name>fastCache</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">110</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Serializable</name></argument>&gt;</argument_list></name></type> <name>nl</name> <init>= <expr><call><name><name>fastCache</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>nl</name> <init>= <expr><call><name><name>metrics</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2L</literal></expr></argument>, <argument><expr><call><name><name>nl</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"lookups"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1L</literal></expr></argument>, <argument><expr><call><name><name>nl</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">101L</literal></expr></argument>, <argument><expr><call><name><name>nl</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><call><name><name>fastCache</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line">// first item put in should be the first out</comment>
     <decl_stmt><decl><type><name><name>FastLRUCache</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>fastCacheNew</name> <init>= <expr><operator>new</operator> <call><name><name>FastLRUCache</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>fastCacheNew</name><operator>.</operator><name>initializeMetrics</name></name><argument_list>(<argument><expr><name>metricManager</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>metrics</name> <operator>=</operator> <call><name><name>fastCacheNew</name><operator>.</operator><name>getMetricsMap</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>fastCacheNew</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>params</name></expr></argument>, <argument><expr><name>o</name></expr></argument>, <argument><expr><name>cr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>fastCacheNew</name><operator>.</operator><name>warm</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>fastCache</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>fastCacheNew</name><operator>.</operator><name>setState</name></name><argument_list>(<argument><expr><name><name>SolrCache</name><operator>.</operator><name>State</name><operator>.</operator><name>LIVE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">65</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">73</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestFastLRUCache</name> extends <name>LuceneTestCase</name> <block>{
     <expr><call><name><name>fastCacheNew</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="number">103</literal></expr></argument>, <argument><expr><literal type="string">"103"</literal></expr></argument>)</argument_list></call></expr>;
     <call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"90"</literal></expr></argument>, <argument><expr><call><name><name>fastCacheNew</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">90</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"50"</literal></expr></argument>, <argument><expr><call><name><name>fastCacheNew</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">50</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>nl</name> <operator>=</operator> <call><name><name>fastCacheNew</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>nl</name> <operator>=</operator> <call><name><name>metrics</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2L</literal></expr></argument>, <argument><expr><call><name><name>nl</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"lookups"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2L</literal></expr></argument>, <argument><expr><call><name><name>nl</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1L</literal></expr></argument>, <argument><expr><call><name><name>nl</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">86</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">94</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestFastLRUCache</name> extends <name>LuceneTestCase</name> <block>{
   
   <expr><specifier>private</specifier> <name>void</name> <call><name>doTestPercentageAutowarm</name><argument_list>(<argument><expr><name>int</name> <name>limit</name></expr></argument>, <argument><expr><name>int</name> <name>percentage</name></expr></argument>, <argument><expr><name><name>int</name><index>[]</index></name> <name>hits</name></expr></argument>, <argument><expr><name><name>int</name><index>[]</index></name><name>misses</name></expr></argument>)</argument_list></call> <block>{
     <expr><name><name>FastLRUCache</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name> <name>fastCache</name> <operator>=</operator> <operator>new</operator> <call><name><name>FastLRUCache</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
    <call><name><name>fastCache</name><operator>.</operator><name>initializeMetrics</name></name><argument_list>(<argument><expr><name>metricManager</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></block></expr>;
     <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name> <name>params</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>params</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"size"</literal></expr></argument>, <argument><expr><call><name><name>String</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><name>limit</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>params</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"initialSize"</literal></expr></argument>, <argument><expr><literal type="string">"10"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">98</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">107</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestFastLRUCache</name> extends <name>LuceneTestCase</name> <block>{
     }</block>
 
     <name><name>FastLRUCache</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name> <name>fastCacheNew</name> <operator>=</operator> <operator>new</operator> <call><name><name>FastLRUCache</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>fastCacheNew</name><operator>.</operator><name>initializeMetrics</name></name><argument_list>(<argument><expr><name>metricManager</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>fastCacheNew</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>params</name></expr></argument>, <argument><expr><name>o</name></expr></argument>, <argument><expr><name>cr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>fastCacheNew</name><operator>.</operator><name>warm</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>fastCache</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>fastCacheNew</name><operator>.</operator><name>setState</name></name><argument_list>(<argument><expr><name><name>SolrCache</name><operator>.</operator><name>State</name><operator>.</operator><name>LIVE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">110</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">120</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestFastLRUCache</name> extends <name>LuceneTestCase</name> <block>{
     <for>for<control>(<init><decl><type><name>int</name></type> <name>miss</name><range>:<expr><name>misses</name></expr></range></decl></init>)</control> <block>{<block_content>
       <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"The value "</literal> <operator>+</operator> <name>miss</name> <operator>+</operator> <literal type="string">" should NOT be on new cache"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><call><name><name>fastCacheNew</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>miss</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>
    <name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Serializable</name></argument>&gt;</argument_list></name> <name>nl</name> <operator>=</operator> <call><name><name>fastCacheNew</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>nl</name> <init>= <expr><call><name><name>fastCacheNew</name><operator>.</operator><name>getMetricsMap</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getValue</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>Long</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><name><name>hits</name><operator>.</operator><name>length</name></name> <operator>+</operator> <name><name>misses</name><operator>.</operator><name>length</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>nl</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"lookups"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>Long</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><name><name>hits</name><operator>.</operator><name>length</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>nl</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>fastCacheNew</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">118</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">128</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestFastLRUCache</name> extends <name>LuceneTestCase</name> <block>{
   
   <expr><specifier>public</specifier> <name>void</name> <call><name>testNoAutowarm</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><name><name>FastLRUCache</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name> <name>fastCache</name> <operator>=</operator> <operator>new</operator> <call><name><name>FastLRUCache</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <call><name><name>fastCache</name><operator>.</operator><name>initializeMetrics</name></name><argument_list>(<argument><expr><name>metricManager</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>params</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>params</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"size"</literal></expr></argument>, <argument><expr><literal type="string">"100"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>params</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"initialSize"</literal></expr></argument>, <argument><expr><literal type="string">"10"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">129</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">140</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestFastLRUCache</name> extends <name>LuceneTestCase</name> <block>{
     }</block>
     <call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"25"</literal></expr></argument>, <argument><expr><call><name><name>fastCache</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">25</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><call><name><name>fastCache</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">110</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Serializable</name></argument>&gt;</argument_list></name></type> <name>nl</name> <init>= <expr><call><name><name>fastCache</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>nl</name> <init>= <expr><call><name><name>fastCache</name><operator>.</operator><name>getMetricsMap</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getValue</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2L</literal></expr></argument>, <argument><expr><call><name><name>nl</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"lookups"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1L</literal></expr></argument>, <argument><expr><call><name><name>nl</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">101L</literal></expr></argument>, <argument><expr><call><name><name>nl</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">177</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">188</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestFastLRUCache</name> extends <name>LuceneTestCase</name> <block>{
   
   <expr><specifier>public</specifier> <name>void</name> <call><name>testSimple</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><name>FastLRUCache</name> <name>sc</name> <operator>=</operator> <operator>new</operator> <call><name>FastLRUCache</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <call><name><name>sc</name><operator>.</operator><name>initializeMetrics</name></name><argument_list>(<argument><expr><name>metricManager</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>Map</name></type> <name>l</name> <init>= <expr><operator>new</operator> <call><name>HashMap</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>l</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"size"</literal></expr></argument>, <argument><expr><literal type="string">"100"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>l</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"initialSize"</literal></expr></argument>, <argument><expr><literal type="string">"10"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">189</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">201</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestFastLRUCache</name> extends <name>LuceneTestCase</name> <block>{
     }</block>
     <call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"25"</literal></expr></argument>, <argument><expr><call><name><name>sc</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">25</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><call><name><name>sc</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">110</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>NamedList</name></type> <name>nl</name> <init>= <expr><call><name><name>sc</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>MetricsMap</name></type> <name>metrics</name> <init>= <expr><call><name><name>sc</name><operator>.</operator><name>getMetricsMap</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>nl</name> <init>= <expr><call><name><name>metrics</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2L</literal></expr></argument>, <argument><expr><call><name><name>nl</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"lookups"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1L</literal></expr></argument>, <argument><expr><call><name><name>nl</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">101L</literal></expr></argument>, <argument><expr><call><name><name>nl</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">198</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">211</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestFastLRUCache</name> extends <name>LuceneTestCase</name> <block>{
 
 
     <expr><name>FastLRUCache</name> <name>scNew</name> <operator>=</operator> <operator>new</operator> <call><name>FastLRUCache</name><argument_list>()</argument_list></call></expr>;
    <call><name><name>scNew</name><operator>.</operator><name>initializeMetrics</name></name><argument_list>(<argument><expr><name>metricManager</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>scNew</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>l</name></expr></argument>, <argument><expr><name>o</name></expr></argument>, <argument><expr><name>cr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>scNew</name><operator>.</operator><name>warm</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>sc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>scNew</name><operator>.</operator><name>setState</name></name><argument_list>(<argument><expr><name><name>SolrCache</name><operator>.</operator><name>State</name><operator>.</operator><name>LIVE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">205</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">219</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestFastLRUCache</name> extends <name>LuceneTestCase</name> <block>{
     <expr><call><name><name>scNew</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="number">103</literal></expr></argument>, <argument><expr><literal type="string">"103"</literal></expr></argument>)</argument_list></call></expr>;
     <call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"90"</literal></expr></argument>, <argument><expr><call><name><name>scNew</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">90</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><call><name><name>scNew</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">50</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>nl</name> <operator>=</operator> <call><name><name>scNew</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>nl</name> <operator>=</operator> <call><name><name>scNew</name><operator>.</operator><name>getMetricsMap</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getValue</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2L</literal></expr></argument>, <argument><expr><call><name><name>nl</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"lookups"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1L</literal></expr></argument>, <argument><expr><call><name><name>nl</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1L</literal></expr></argument>, <argument><expr><call><name><name>nl</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestIndexSearcher</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestIndexSearcher</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8fe3f9717ab</literal><operator>..</operator><name>c36066a9818</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestIndexSearcher</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestIndexSearcher</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Date</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>CountDownLatch</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">25</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">26</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>TimeUnit</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>atomic</name><operator>.</operator><name>AtomicBoolean</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>atomic</name><operator>.</operator><name>AtomicInteger</name></name>;</import>
 
<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>Gauge</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>Metric</name></name>;</import>
 <import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>collect</name><operator>.</operator><name>ImmutableMap</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReader</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexReaderContext</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">137</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">140</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestIndexSearcher</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><name>int</name> <name>baseRefCount</name> <operator>=</operator> <call><name><name>r3</name><operator>.</operator><name>getRefCount</name></name><argument_list>()</argument_list></call></expr>;
     <call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>baseRefCount</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
 
    <decl_stmt><decl><type><name>Object</name></type> <name>sr3SearcherRegAt</name> <init>= <expr><call><name><name>sr3</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getStatistics</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"registeredAt"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Metric</name></argument>&gt;</argument_list></name></type> <name>metrics</name> <init>= <expr><call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCoreMetricManager</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getRegistry</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getMetrics</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Gauge</name><argument_list type="generic">&lt;<argument><name>Date</name></argument>&gt;</argument_list></name></type> <name>g</name> <init>= <expr><operator>(</operator><name><name>Gauge</name><argument_list type="generic">&lt;<argument><name>Date</name></argument>&gt;</argument_list></name><operator>)</operator><call><name><name>metrics</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"SEARCHER.searcher.registeredAt"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Date</name></type> <name>sr3SearcherRegAt</name> <init>= <expr><call><name><name>g</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertU</name><argument_list>(<argument><expr><call><name>commit</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// nothing has changed</comment>
     <decl_stmt><decl><type><name>SolrQueryRequest</name></type> <name>sr4</name> <init>= <expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"q"</literal></expr></argument>,<argument><expr><literal type="string">"foo"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertSame</name><argument_list>(<argument><expr><literal type="string">"nothing changed, searcher should be the same"</literal></expr></argument>,
                <argument><expr><call><name><name>sr3</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>sr4</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"nothing changed, searcher should not have been re-registered"</literal></expr></argument>,
                 <argument><expr><name>sr3SearcherRegAt</name></expr></argument>, <argument><expr><call><name><name>sr4</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getStatistics</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"registeredAt"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                 <expr_stmt><expr><name>sr3SearcherRegAt</name></expr><operator>,</operator> <expr><call><name><name>g</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></expr_stmt>)</block_content></block>;</function>
     <decl_stmt><decl><type><name>IndexReader</name></type> <name>r4</name> <init>= <expr><call><name><name>sr4</name><operator>.</operator><name>getSearcher</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getRawReader</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <comment type="line">// force an index change so the registered searcher won't be the one we are testing (and</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestLFUCache</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestLFUCache</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d137875653a</name><operator>..</operator><literal type="number">8207522ddca</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestLFUCache</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestLFUCache</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@
  <operator>*</operator><operator>/</operator></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name></name>;</package>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>TestUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>SolrTestCaseJ4</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>ExecutorUtil</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricManager</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>ConcurrentLFUCache</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>DefaultSolrThreadFactory</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>RefCounted</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">32</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>invoke</name><operator>.</operator><name>MethodHandles</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Locale</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Random</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>ExecutorService</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>TimeUnit</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>atomic</name><operator>.</operator><name>AtomicReference</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">59</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">61</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestLFUCache</name> extends <name>SolrTestCaseJ4</name> <block>{
       <expr><name>SolrIndexSearcher</name> <name>searcher</name> <operator>=</operator> <call><name><name>holder</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr>;
       <name>LFUCache</name> <name>cacheDecayTrue</name> <operator>=</operator> <operator>(</operator><name>LFUCache</name><operator>)</operator> <call><name><name>searcher</name><operator>.</operator><name>getCache</name></name><argument_list>(<argument><expr><literal type="string">"lfuCacheDecayTrue"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
       <constructor_decl><name>assertNotNull</name><parameter_list>(<parameter><decl><type><name>cacheDecayTrue</name></type></decl></parameter>)</parameter_list>;</constructor_decl>
      <decl_stmt><decl><type><name>NamedList</name></type> <name>stats</name> <init>= <expr><call><name><name>cacheDecayTrue</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>stats</name> <init>= <expr><call><name><name>cacheDecayTrue</name><operator>.</operator><name>getMetricsMap</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getValue</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><operator>(</operator><name>Boolean</name><operator>)</operator> <call><name><name>stats</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"timeDecay"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>addCache</name><argument_list>(<argument><expr><name>cacheDecayTrue</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <for>for <control>(<init><decl><type><name>int</name></type> <name>idx</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>idx</name> <operator>&lt;</operator> <literal type="number">64</literal></expr>;</condition> <incr><expr><operator>++</operator><name>idx</name></expr></incr>)</control> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">70</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">72</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestLFUCache</name> extends <name>SolrTestCaseJ4</name> <block>{
 
       <expr><name>LFUCache</name> <name>cacheDecayDefault</name> <operator>=</operator> <operator>(</operator><name>LFUCache</name><operator>)</operator> <call><name><name>searcher</name><operator>.</operator><name>getCache</name></name><argument_list>(<argument><expr><literal type="string">"lfuCacheDecayDefault"</literal></expr></argument>)</argument_list></call></expr>;
       <call><name>assertNotNull</name><argument_list>(<argument><expr><name>cacheDecayDefault</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
      <expr_stmt><expr><name>stats</name> <operator>=</operator> <call><name><name>cacheDecayDefault</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>stats</name> <operator>=</operator> <call><name><name>cacheDecayDefault</name><operator>.</operator><name>getMetricsMap</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getValue</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><operator>(</operator><name>Boolean</name><operator>)</operator> <call><name><name>stats</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"timeDecay"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>addCache</name><argument_list>(<argument><expr><name>cacheDecayDefault</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>assertCache</name><argument_list>(<argument><expr><name>cacheDecayDefault</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">84</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">86</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestLFUCache</name> extends <name>SolrTestCaseJ4</name> <block>{
 
       <expr><name>LFUCache</name> <name>cacheDecayFalse</name> <operator>=</operator> <operator>(</operator><name>LFUCache</name><operator>)</operator> <call><name><name>searcher</name><operator>.</operator><name>getCache</name></name><argument_list>(<argument><expr><literal type="string">"lfuCacheDecayFalse"</literal></expr></argument>)</argument_list></call></expr>;
       <call><name>assertNotNull</name><argument_list>(<argument><expr><name>cacheDecayFalse</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
      <expr_stmt><expr><name>stats</name> <operator>=</operator> <call><name><name>cacheDecayFalse</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>stats</name> <operator>=</operator> <call><name><name>cacheDecayFalse</name><operator>.</operator><name>getMetricsMap</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getValue</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><operator>(</operator><name>Boolean</name><operator>)</operator> <call><name><name>stats</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"timeDecay"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>addCache</name><argument_list>(<argument><expr><name>cacheDecayFalse</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>assertCache</name><argument_list>(<argument><expr><name>cacheDecayFalse</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">131</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">133</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestLFUCache</name> extends <name>SolrTestCaseJ4</name> <block>{
 
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testSimple</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
    <expr><name>SolrMetricManager</name> <name>metricManager</name> <operator>=</operator> <operator>new</operator> <call><name>SolrMetricManager</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>Random</name> <name>r</name> <operator>=</operator> <call><name>random</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>registry</name> <init>= <expr><call><name><name>TestUtil</name><operator>.</operator><name>randomSimpleString</name></name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>scope</name> <init>= <expr><call><name><name>TestUtil</name><operator>.</operator><name>randomSimpleString</name></name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>LFUCache</name></type> <name>lfuCache</name> <init>= <expr><operator>new</operator> <call><name>LFUCache</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>LFUCache</name></type> <name>newLFUCache</name> <init>= <expr><operator>new</operator> <call><name>LFUCache</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>LFUCache</name></type> <name>noWarmLFUCache</name> <init>= <expr><operator>new</operator> <call><name>LFUCache</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>lfuCache</name><operator>.</operator><name>initializeMetrics</name></name><argument_list>(<argument><expr><name>metricManager</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><name>scope</name> <operator>+</operator> <literal type="string">".lfuCache"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>newLFUCache</name><operator>.</operator><name>initializeMetrics</name></name><argument_list>(<argument><expr><name>metricManager</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><name>scope</name> <operator>+</operator> <literal type="string">".newLFUCache"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>noWarmLFUCache</name><operator>.</operator><name>initializeMetrics</name></name><argument_list>(<argument><expr><name>metricManager</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><name>scope</name> <operator>+</operator> <literal type="string">".noWarmLFUCache"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <try>try <block>{<block_content>
       <decl_stmt><decl><type><name>Map</name></type> <name>params</name> <init>= <expr><operator>new</operator> <call><name>HashMap</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>params</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"size"</literal></expr></argument>, <argument><expr><literal type="string">"100"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">148</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">157</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestLFUCache</name> extends <name>SolrTestCaseJ4</name> <block>{
       <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"15"</literal></expr></argument>, <argument><expr><call><name><name>lfuCache</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">15</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
       <call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"75"</literal></expr></argument>, <argument><expr><call><name><name>lfuCache</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">75</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><call><name><name>lfuCache</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">110</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>NamedList</name></type> <name>nl</name> <init>= <expr><call><name><name>lfuCache</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>nl</name> <init>= <expr><call><name><name>lfuCache</name><operator>.</operator><name>getMetricsMap</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getValue</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">3L</literal></expr></argument>, <argument><expr><call><name><name>nl</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"lookups"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2L</literal></expr></argument>, <argument><expr><call><name><name>nl</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">101L</literal></expr></argument>, <argument><expr><call><name><name>nl</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">164</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">173</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestLFUCache</name> extends <name>SolrTestCaseJ4</name> <block>{
       <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"15"</literal></expr></argument>, <argument><expr><call><name><name>newLFUCache</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">15</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
       <call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"75"</literal></expr></argument>, <argument><expr><call><name><name>newLFUCache</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">75</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><call><name><name>newLFUCache</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">50</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>nl</name> <operator>=</operator> <call><name><name>newLFUCache</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>nl</name> <operator>=</operator> <call><name><name>newLFUCache</name><operator>.</operator><name>getMetricsMap</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getValue</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">3L</literal></expr></argument>, <argument><expr><call><name><name>nl</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"lookups"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2L</literal></expr></argument>, <argument><expr><call><name><name>nl</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1L</literal></expr></argument>, <argument><expr><call><name><name>nl</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestLRUCache</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestLRUCache</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d2f74de5960</name><operator>..</operator><name>fa34911b80a</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestLRUCache</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestLRUCache</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">21</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">25</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Serializable</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>Accountable</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>RamUsageEstimator</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>TestUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricManager</name></name>;</import>
 
 <comment type="block" format="javadoc">/**
  * Test for &lt;code&gt;org.apache.solr.search.LRUCache&lt;/code&gt;
  */</comment>
 <class><specifier>public</specifier> class <name>TestLRUCache</name> <super_list><extends>extends <super><name>LuceneTestCase</name></super></extends></super_list> <block>{
 
  <decl_stmt><decl><type><name>SolrMetricManager</name></type> <name>metricManager</name> <init>= <expr><operator>new</operator> <call><name>SolrMetricManager</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>String</name></type> <name>registry</name> <init>= <expr><call><name><name>TestUtil</name><operator>.</operator><name>randomSimpleString</name></name><argument_list>(<argument><expr><call><name>random</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>String</name></type> <name>scope</name> <init>= <expr><call><name><name>TestUtil</name><operator>.</operator><name>randomSimpleString</name></name><argument_list>(<argument><expr><call><name>random</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

   <function><type><specifier>public</specifier> <name>void</name></type> <name>testFullAutowarm</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
     <decl_stmt><decl><type><name><name>LRUCache</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>lruCache</name> <init>= <expr><operator>new</operator> <call><name><name>LRUCache</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>params</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">97</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">101</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestLRUCache</name> extends <name>LuceneTestCase</name> <block>{
   @<expr><call><name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unchecked"</literal></expr></argument>)</argument_list></call>
   <specifier>public</specifier> <name>void</name> <call><name>testNoAutowarm</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
     <expr><name><name>LRUCache</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name> <name>lruCache</name> <operator>=</operator> <operator>new</operator> <call><name><name>LRUCache</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <call><name><name>lruCache</name><operator>.</operator><name>initializeMetrics</name></name><argument_list>(<argument><expr><name>metricManager</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>params</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>params</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"size"</literal></expr></argument>, <argument><expr><literal type="string">"100"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>params</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"initialSize"</literal></expr></argument>, <argument><expr><literal type="string">"10"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">108</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">113</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestLRUCache</name> extends <name>LuceneTestCase</name> <block>{
     }</block>
     <call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"25"</literal></expr></argument>, <argument><expr><call><name><name>lruCache</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">25</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><call><name><name>lruCache</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">110</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Serializable</name></argument>&gt;</argument_list></name></type> <name>nl</name> <init>= <expr><call><name><name>lruCache</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>nl</name> <init>= <expr><call><name><name>lruCache</name><operator>.</operator><name>getMetricsMap</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getValue</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2L</literal></expr></argument>, <argument><expr><call><name><name>nl</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"lookups"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1L</literal></expr></argument>, <argument><expr><call><name><name>nl</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">101L</literal></expr></argument>, <argument><expr><call><name><name>nl</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">126</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">131</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestLRUCache</name> extends <name>LuceneTestCase</name> <block>{
 
   <expr><specifier>public</specifier> <name>void</name> <call><name>testMaxRamSize</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><name><name>LRUCache</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Accountable</name></argument>&gt;</argument_list></name> <name>accountableLRUCache</name> <operator>=</operator> <operator>new</operator> <call><name><name>LRUCache</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <call><name><name>accountableLRUCache</name><operator>.</operator><name>initializeMetrics</name></name><argument_list>(<argument><expr><name>metricManager</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>params</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>params</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"size"</literal></expr></argument>, <argument><expr><literal type="string">"5"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>params</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"maxRamMB"</literal></expr></argument>, <argument><expr><literal type="string">"1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">149</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">155</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestLRUCache</name> extends <name>LuceneTestCase</name> <block>{
     }</block></expr></expr_stmt>)</block_content></block>;</function>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>accountableLRUCache</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>baseSize</name> <operator>+</operator> <literal type="number">512</literal> <operator>*</operator> <literal type="number">1024</literal> <operator>+</operator> <name><name>LRUCache</name><operator>.</operator><name>LINKED_HASHTABLE_RAM_BYTES_PER_ENTRY</name></name> <operator>+</operator> <name><name>LRUCache</name><operator>.</operator><name>DEFAULT_RAM_BYTES_USED</name></name></expr></argument>, <argument><expr><call><name><name>accountableLRUCache</name><operator>.</operator><name>ramBytesUsed</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Serializable</name></argument>&gt;</argument_list></name></type> <name>nl</name> <init>= <expr><call><name><name>accountableLRUCache</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>nl</name> <init>= <expr><call><name><name>accountableLRUCache</name><operator>.</operator><name>getMetricsMap</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getValue</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1L</literal></expr></argument>, <argument><expr><call><name><name>nl</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"evictions"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1L</literal></expr></argument>, <argument><expr><call><name><name>nl</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"evictionsRamUsage"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>accountableLRUCache</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"3"</literal></expr></argument>, <argument><expr><operator>new</operator> <class><super><name>Accountable</name></super><argument_list>()</argument_list> <block>{
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">158</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">164</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>TestLRUCache</name> extends <name>LuceneTestCase</name> <block>{
         <return>return <expr><literal type="number">1024</literal></expr>;</return>
       }</block></expr></expr_stmt>
     }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>nl</name> <operator>=</operator> <call><name><name>accountableLRUCache</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>nl</name> <operator>=</operator> <call><name><name>accountableLRUCache</name><operator>.</operator><name>getMetricsMap</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getValue</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1L</literal></expr></argument>, <argument><expr><call><name><name>nl</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"evictions"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1L</literal></expr></argument>, <argument><expr><call><name><name>nl</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"evictionsRamUsage"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2L</literal></expr></argument>, <argument><expr><call><name><name>accountableLRUCache</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestReRankQParserPlugin</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestReRankQParserPlugin</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>e4d6a5b5fff</name><operator>..</operator><literal type="number">42d05e9c891</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestReRankQParserPlugin</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestReRankQParserPlugin</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">11</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@
  <operator>*</operator><operator>/</operator></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name></name>;</package>
 
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>

 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>SolrTestCaseJ4</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>ModifiableSolrParams</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoMBean</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricsMap</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Before</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>BeforeClass</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">376</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">377</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestReRankQParserPlugin</name> extends <name>SolrTestCaseJ4</name> <block>{
         <expr><literal type="string">"//result/doc[5]/float[@name='id'][.='2.0']"</literal></expr>
     )</block></expr>;</expr_stmt>
 
    <decl_stmt><decl><type><name>SolrInfoMBean</name></type> <name>info</name>  <init>= <expr><call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getInfoRegistry</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"queryResultCache"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>NamedList</name></type> <name>stats</name> <init>= <expr><call><name><name>info</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>MetricsMap</name></type> <name>metrics</name> <init>= <expr><operator>(</operator><name>MetricsMap</name><operator>)</operator><call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCoreMetricManager</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getRegistry</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getMetrics</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"CACHE.searcher.queryResultCache"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>stats</name> <init>= <expr><call><name><name>metrics</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name>long</name></type> <name>inserts</name> <init>= <expr><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>stats</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">401</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">402</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestReRankQParserPlugin</name> extends <name>SolrTestCaseJ4</name> <block>{
     )</block></expr>;</expr_stmt>
 
 
    <expr_stmt><expr><name>info</name>  <operator>=</operator> <call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getInfoRegistry</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"queryResultCache"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>stats</name> <operator>=</operator> <call><name><name>info</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>stats</name> <operator>=</operator> <call><name><name>metrics</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>long</name></type> <name>inserts1</name> <init>= <expr><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>stats</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">426</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">426</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestReRankQParserPlugin</name> extends <name>SolrTestCaseJ4</name> <block>{
         <expr><literal type="string">"//result/doc[5]/float[@name='id'][.='1.0']"</literal></expr>
     )</block></expr>;</expr_stmt>
 
    <expr_stmt><expr><name>info</name>  <operator>=</operator> <call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getInfoRegistry</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"queryResultCache"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>stats</name> <operator>=</operator> <call><name><name>info</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>stats</name> <operator>=</operator> <call><name><name>metrics</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>long</name></type> <name>inserts2</name> <init>= <expr><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>stats</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <comment type="line">//Last query was NOT added to the cache</comment>
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><name>inserts1</name> <operator>==</operator> <name>inserts2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSolr4Spatial2</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSolr4Spatial2</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">1fcfe9a7537</literal><operator>..</operator><name>b909f15005a</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSolr4Spatial2</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSolr4Spatial2</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">20</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>SolrTestCaseJ4</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrException</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>FacetParams</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>ModifiableSolrParams</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricsMap</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>request</name><operator>.</operator><name>SolrQueryRequest</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Before</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>BeforeClass</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">117</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">118</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSolr4Spatial2</name> extends <name>SolrTestCaseJ4</name> <block>{
 
     <comment type="line">// The tricky thing is verifying the cache works correctly...</comment>
 
    <expr><name>SolrCache</name> <name>cache</name> <operator>=</operator> <operator>(</operator><name>SolrCache</name><operator>)</operator> <call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getInfoRegistry</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"perSegSpatialFieldCache_srptgeom"</literal></expr></argument>)</argument_list></call></expr>;
    <call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"1"</literal></expr></argument>, <argument><expr><call><name><name>cache</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"cumulative_inserts"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"0"</literal></expr></argument>, <argument><expr><call><name><name>cache</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"cumulative_hits"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>MetricsMap</name></type> <name>cacheMetrics</name> <init>= <expr><operator>(</operator><name>MetricsMap</name><operator>)</operator> <call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCoreMetricManager</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getRegistry</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getMetrics</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"CACHE.searcher.perSegSpatialFieldCache_srptgeom"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"1"</literal></expr></argument>, <argument><expr><call><name><name>cacheMetrics</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"cumulative_inserts"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"0"</literal></expr></argument>, <argument><expr><call><name><name>cacheMetrics</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"cumulative_hits"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <comment type="line">// Repeat the query earlier</comment>
     <expr_stmt><expr><call><name>assertJQ</name><argument_list>(<argument><expr><name>sameReq</name></expr></argument>, <argument><expr><literal type="string">"/response/numFound==1"</literal></expr></argument>, <argument><expr><literal type="string">"/response/docs/[0]/id=='1'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"1"</literal></expr></argument>, <argument><expr><call><name><name>cache</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"cumulative_hits"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"1"</literal></expr></argument>, <argument><expr><call><name><name>cacheMetrics</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"cumulative_hits"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"1 segment"</literal></expr></argument>,
         <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name>getSearcher</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getRawReader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>leaves</name><argument_list>()</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">141</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">142</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSolr4Spatial2</name> extends <name>SolrTestCaseJ4</name> <block>{
     <comment type="line">// When there are new segments, we accumulate another hit. This tests the cache was not blown away on commit.</comment>
     <comment type="line">// Checking equality for the first reader's cache key indicates wether the cache should still be valid.</comment>
     <expr><name>Object</name> <name>leafKey2</name> <operator>=</operator> <call><name>getFirstLeafReaderKey</name><argument_list>()</argument_list></call></expr>;
    <call><name>assertEquals</name><argument_list>(<argument><expr><ternary><condition><expr><call><name><name>leafKey1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>leafKey2</name></expr></argument>)</argument_list></call></expr> ?</condition><then> <expr><literal type="string">"2"</literal></expr> </then><else>: <expr><literal type="string">"1"</literal></expr></else></ternary></expr></argument>, <argument><expr><call><name><name>cache</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"cumulative_hits"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><ternary><condition><expr><call><name><name>leafKey1</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>leafKey2</name></expr></argument>)</argument_list></call></expr> ?</condition><then> <expr><literal type="string">"2"</literal></expr> </then><else>: <expr><literal type="string">"1"</literal></expr></else></ternary></expr></argument>, <argument><expr><call><name><name>cacheMetrics</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"cumulative_hits"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
 
     <comment type="line">// Now try to see if heatmaps work:</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSolrFieldCacheMBean</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSolrFieldCacheBean</name><operator>.</operator><name>java</name></name>
<name>similarity</name> <name>index</name> <literal type="number">59</literal><operator>%</operator>
<name>rename</name> <name>from</name> <name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSolrFieldCacheMBean</name><operator>.</operator><name>java</name></name>
<name>rename</name> <name>to</name> <name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSolrFieldCacheBean</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d11c9192090</name><operator>..</operator><literal type="number">3ae9c472073</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSolrFieldCacheMBean</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSolrFieldCacheBean</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">17</literal> <operator>+</operator><literal type="number">16</literal></expr><operator>,</operator><expr><literal type="number">21</literal> @@
  <operator>*</operator><operator>/</operator></expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name></name>;</package>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>TestUtil</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>SolrTestCaseJ4</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
 
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricsMap</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricManager</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>BeforeClass</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>Logger</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>slf4j</name><operator>.</operator><name>LoggerFactory</name></name>;</import>
 
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>invoke</name><operator>.</operator><name>MethodHandles</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Random</name></name>;</import>
 
<class><specifier>public</specifier> class <name>TestSolrFieldCacheMBean</name> <super_list><extends>extends <super><name>SolrTestCaseJ4</name></super></extends></super_list> <block>{
<class><specifier>public</specifier> class <name>TestSolrFieldCacheBean</name> <super_list><extends>extends <super><name>SolrTestCaseJ4</name></super></extends></super_list> <block>{
 
   <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Logger</name></type> <name>log</name> <init>= <expr><call><name><name>LoggerFactory</name><operator>.</operator><name>getLogger</name></name><argument_list>(<argument><expr><call><name><name>MethodHandles</name><operator>.</operator><name>lookup</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>lookupClass</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">66</literal></expr><operator>,</operator><expr><literal type="number">18</literal> <operator>+</operator><literal type="number">70</literal></expr><operator>,</operator><expr><literal type="number">28</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSolrFieldCacheMBean</name> extends <name>SolrTestCaseJ4</name> <block>{
   }</block>
 
   <specifier>private</specifier> <name>void</name> <call><name>assertEntryListIncluded</name><argument_list>(<argument><expr><name>boolean</name> <name>checkJmx</name></expr></argument>)</argument_list></call> <block>{
    <expr><name>SolrFieldCacheMBean</name> <name>mbean</name> <operator>=</operator> <operator>new</operator> <call><name>SolrFieldCacheMBean</name><argument_list>()</argument_list></call></expr>;
    <name>NamedList</name> <name>stats</name> <operator>=</operator> <ternary><condition><expr><name>checkJmx</name></expr> ?</condition><then> <expr><call><name><name>mbean</name><operator>.</operator><name>getStatisticsForJmx</name></name><argument_list>()</argument_list></call></expr> </then><else>: <expr><call><name><name>mbean</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr></else></ternary></block></expr>;</expr_stmt>
    <assert>assert<expr><operator>(</operator><call><name><name>Integer</name><operator>.</operator><name>parseInt</name></name><argument_list>(<argument><expr><call><name><name>stats</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"entries_count"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal><operator>)</operator></expr>;</assert>
    <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><call><name><name>stats</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"total_size"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><call><name><name>stats</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"entry#0"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>SolrFieldCacheBean</name></type> <name>mbean</name> <init>= <expr><operator>new</operator> <call><name>SolrFieldCacheBean</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Random</name></type> <name>r</name> <init>= <expr><call><name>random</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>registryName</name> <init>= <expr><call><name><name>TestUtil</name><operator>.</operator><name>randomSimpleString</name></name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>SolrMetricManager</name></type> <name>metricManager</name> <init>= <expr><call><name><name>h</name><operator>.</operator><name>getCoreContainer</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getMetricManager</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>mbean</name><operator>.</operator><name>initializeMetrics</name></name><argument_list>(<argument><expr><name>metricManager</name></expr></argument>, <argument><expr><name>registryName</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>MetricsMap</name></type> <name>metricsMap</name> <init>= <expr><operator>(</operator><name>MetricsMap</name><operator>)</operator><call><name><name>metricManager</name><operator>.</operator><name>registry</name></name><argument_list>(<argument><expr><name>registryName</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getMetrics</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"CACHE.fieldCache"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>metrics</name> <init>= <expr><ternary><condition><expr><name>checkJmx</name></expr> ?</condition><then> <expr><call><name><name>metricsMap</name><operator>.</operator><name>getValue</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr> </then><else>: <expr><call><name><name>metricsMap</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><operator>(</operator><operator>(</operator><name>Number</name><operator>)</operator><call><name><name>metrics</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"entries_count"</literal></expr></argument>)</argument_list></call><operator>)</operator><operator>.</operator><call><name>longValue</name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><call><name><name>metrics</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"total_size"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><call><name><name>metrics</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"entry#0"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   }</block></class>
 
   <function><type><specifier>private</specifier> <name>void</name></type> <name>assertEntryListNotIncluded</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>checkJmx</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>SolrFieldCacheMBean</name></type> <name>mbean</name> <init>= <expr><operator>new</operator> <call><name>SolrFieldCacheMBean</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>NamedList</name></type> <name>stats</name> <init>= <expr><ternary><condition><expr><name>checkJmx</name></expr> ?</condition><then> <expr><call><name><name>mbean</name><operator>.</operator><name>getStatisticsForJmx</name></name><argument_list>()</argument_list></call></expr> </then><else>: <expr><call><name><name>mbean</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>
    <assert>assert<expr><operator>(</operator><call><name><name>Integer</name><operator>.</operator><name>parseInt</name></name><argument_list>(<argument><expr><call><name><name>stats</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"entries_count"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal><operator>)</operator></expr>;</assert>
    <expr_stmt><expr><call><name>assertNull</name><argument_list>(<argument><expr><call><name><name>stats</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"total_size"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertNull</name><argument_list>(<argument><expr><call><name><name>stats</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"entry#0"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>SolrFieldCacheBean</name></type> <name>mbean</name> <init>= <expr><operator>new</operator> <call><name>SolrFieldCacheBean</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Random</name></type> <name>r</name> <init>= <expr><call><name>random</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>registryName</name> <init>= <expr><call><name><name>TestUtil</name><operator>.</operator><name>randomSimpleString</name></name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>SolrMetricManager</name></type> <name>metricManager</name> <init>= <expr><call><name><name>h</name><operator>.</operator><name>getCoreContainer</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getMetricManager</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>mbean</name><operator>.</operator><name>initializeMetrics</name></name><argument_list>(<argument><expr><name>metricManager</name></expr></argument>, <argument><expr><name>registryName</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>MetricsMap</name></type> <name>metricsMap</name> <init>= <expr><operator>(</operator><name>MetricsMap</name><operator>)</operator><call><name><name>metricManager</name><operator>.</operator><name>registry</name></name><argument_list>(<argument><expr><name>registryName</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getMetrics</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"CACHE.fieldCache"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>metrics</name> <init>= <expr><ternary><condition><expr><name>checkJmx</name></expr> ?</condition><then> <expr><call><name><name>metricsMap</name><operator>.</operator><name>getValue</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr> </then><else>: <expr><call><name><name>metricsMap</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><operator>(</operator><operator>(</operator><name>Number</name><operator>)</operator><call><name><name>metrics</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"entries_count"</literal></expr></argument>)</argument_list></call><operator>)</operator><operator>.</operator><call><name>longValue</name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertNull</name><argument_list>(<argument><expr><call><name><name>metrics</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"total_size"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertNull</name><argument_list>(<argument><expr><call><name><name>metrics</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"entry#0"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 }</block></class>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSolrQueryParser</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSolrQueryParser</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>e1372d81d7d</name><operator>..</operator><name>f454848d29b</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSolrQueryParser</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name><name>TestSolrQueryParser</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">34</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">34</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@</expr></expr_stmt> <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>TermInSetQuery</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>TermQuery</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>SolrTestCaseJ4</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>MapSolrParams</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricsMap</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>ModifiableSolrParams</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>params</name><operator>.</operator><name>SolrParams</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>core</name><operator>.</operator><name>SolrInfoMBean</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>parser</name><operator>.</operator><name>QueryParser</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>query</name><operator>.</operator><name>FilterQuery</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>request</name><operator>.</operator><name>SolrQueryRequest</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">389</literal></expr><operator>,</operator><expr><literal type="number">33</literal> <operator>+</operator><literal type="number">389</literal></expr><operator>,</operator><expr><literal type="number">33</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSolrQueryParser</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><call><name>assertU</name><argument_list>(<argument><expr><call><name>commit</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;  <comment type="line">// arg... commit no longer "commits" unless there has been a change.</comment>
 
 
    <name>final</name> <name>SolrInfoMBean</name> <name>filterCacheStats</name>
        <operator>=</operator> <call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getInfoRegistry</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"filterCache"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>MetricsMap</name></type> <name>filterCacheStats</name> <init>= <expr><operator>(</operator><name>MetricsMap</name><operator>)</operator><call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCoreMetricManager</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getRegistry</name><argument_list>()</argument_list></call>
        <operator>.</operator><call><name>getMetrics</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"CACHE.searcher.filterCache"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <constructor_decl><name>assertNotNull</name><parameter_list>(<parameter><decl><type><name>filterCacheStats</name></type></decl></parameter>)</parameter_list>;</constructor_decl>
    <decl_stmt><decl><type><specifier>final</specifier> <name>SolrInfoMBean</name></type> <name>queryCacheStats</name>
        <init>= <expr><call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getInfoRegistry</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"queryResultCache"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>MetricsMap</name></type> <name>queryCacheStats</name> <init>= <expr><operator>(</operator><name>MetricsMap</name><operator>)</operator><call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCoreMetricManager</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getRegistry</name><argument_list>()</argument_list></call>
        <operator>.</operator><call><name>getMetrics</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"CACHE.searcher.queryResultCache"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <constructor_decl><name>assertNotNull</name><parameter_list>(<parameter><decl><type><name>queryCacheStats</name></type></decl></parameter>)</parameter_list>;</constructor_decl>
 
 
    <decl_stmt><decl><type><name>long</name></type> <name>inserts</name> <init>= <expr><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name>hits</name> <init>= <expr><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name>inserts</name> <init>= <expr><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name>hits</name> <init>= <expr><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <expr_stmt><expr><call><name>assertJQ</name><argument_list>(<argument><expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"q"</literal></expr></argument>, <argument><expr><literal type="string">"doesnotexist filter(id:1) filter(qqq_s:X) filter(abcdefg)"</literal></expr></argument>)</argument_list></call></expr></argument>
         , <argument><expr><literal type="string">"/response/numFound==2"</literal></expr></argument>
     )</argument_list></call></expr>;</expr_stmt>
 
     <expr_stmt><expr><name>inserts</name> <operator>+=</operator> <literal type="number">3</literal></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>inserts</name></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call><operator>)</operator><operator>.</operator><call><name>longValue</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>hits</name></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>)</argument_list></call><operator>)</operator><operator>.</operator><call><name>longValue</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>inserts</name></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call><operator>)</operator><operator>.</operator><call><name>longValue</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>hits</name></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>)</argument_list></call><operator>)</operator><operator>.</operator><call><name>longValue</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <expr_stmt><expr><call><name>assertJQ</name><argument_list>(<argument><expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"q"</literal></expr></argument>, <argument><expr><literal type="string">"doesnotexist2 filter(id:1) filter(qqq_s:X) filter(abcdefg)"</literal></expr></argument>)</argument_list></call></expr></argument>
         , <argument><expr><literal type="string">"/response/numFound==2"</literal></expr></argument>
     )</argument_list></call></expr>;</expr_stmt>
 
     <expr_stmt><expr><name>hits</name> <operator>+=</operator> <literal type="number">3</literal></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>inserts</name></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call><operator>)</operator><operator>.</operator><call><name>longValue</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>hits</name></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>)</argument_list></call><operator>)</operator><operator>.</operator><call><name>longValue</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>inserts</name></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call><operator>)</operator><operator>.</operator><call><name>longValue</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>hits</name></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>)</argument_list></call><operator>)</operator><operator>.</operator><call><name>longValue</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <comment type="line">// make sure normal "fq" parameters also hit the cache the same way</comment>
     <expr_stmt><expr><call><name>assertJQ</name><argument_list>(<argument><expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"q"</literal></expr></argument>, <argument><expr><literal type="string">"doesnotexist3"</literal></expr></argument>, <argument><expr><literal type="string">"fq"</literal></expr></argument>, <argument><expr><literal type="string">"id:1"</literal></expr></argument>, <argument><expr><literal type="string">"fq"</literal></expr></argument>, <argument><expr><literal type="string">"qqq_s:X"</literal></expr></argument>, <argument><expr><literal type="string">"fq"</literal></expr></argument>, <argument><expr><literal type="string">"abcdefg"</literal></expr></argument>)</argument_list></call>
@@ <operator>-</operator><literal type="number">423</literal></expr></argument>,<argument><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">423</literal></expr></argument>,<argument><expr><literal type="number">8</literal> @@ <specifier>public</specifier> class <name>TestSolrQueryParser</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr/></block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <expr_stmt><expr><name>hits</name> <operator>+=</operator> <literal type="number">3</literal></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>inserts</name></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call><operator>)</operator><operator>.</operator><call><name>longValue</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>hits</name></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>)</argument_list></call><operator>)</operator><operator>.</operator><call><name>longValue</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>inserts</name></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call><operator>)</operator><operator>.</operator><call><name>longValue</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>hits</name></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>)</argument_list></call><operator>)</operator><operator>.</operator><call><name>longValue</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <comment type="line">// try a query deeply nested in a FQ</comment>
     <expr_stmt><expr><call><name>assertJQ</name><argument_list>(<argument><expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"q"</literal></expr></argument>, <argument><expr><literal type="string">"*:* doesnotexist4"</literal></expr></argument>, <argument><expr><literal type="string">"fq"</literal></expr></argument>, <argument><expr><literal type="string">"(id:* +(filter(id:1) filter(qqq_s:X) filter(abcdefg)) )"</literal></expr></argument>)</argument_list></call>
@@ <operator>-</operator><literal type="number">433</literal></expr></argument>,<argument><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">433</literal></expr></argument>,<argument><expr><literal type="number">8</literal> @@ <specifier>public</specifier> class <name>TestSolrQueryParser</name> extends <name>SolrTestCaseJ4</name> <block>{
 
     <expr><name>inserts</name> <operator>+=</operator> <literal type="number">1</literal></expr>;  <comment type="line">// +1 for top level fq</comment>
     <name>hits</name> <operator>+=</operator> <literal type="number">3</literal></block></expr></argument>;</argument_list></call></expr></expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>inserts</name></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call><operator>)</operator><operator>.</operator><call><name>longValue</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>hits</name></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>)</argument_list></call><operator>)</operator><operator>.</operator><call><name>longValue</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>inserts</name></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call><operator>)</operator><operator>.</operator><call><name>longValue</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>hits</name></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>)</argument_list></call><operator>)</operator><operator>.</operator><call><name>longValue</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <comment type="line">// retry the complex FQ and make sure hashCode/equals works as expected w/ filter queries</comment>
     <expr_stmt><expr><call><name>assertJQ</name><argument_list>(<argument><expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"q"</literal></expr></argument>, <argument><expr><literal type="string">"*:* doesnotexist5"</literal></expr></argument>, <argument><expr><literal type="string">"fq"</literal></expr></argument>, <argument><expr><literal type="string">"(id:* +(filter(id:1) filter(qqq_s:X) filter(abcdefg)) )"</literal></expr></argument>)</argument_list></call>
@@ <operator>-</operator><literal type="number">442</literal></expr></argument>,<argument><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">442</literal></expr></argument>,<argument><expr><literal type="number">8</literal> @@ <specifier>public</specifier> class <name>TestSolrQueryParser</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr/></block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <expr_stmt><expr><name>hits</name> <operator>+=</operator> <literal type="number">1</literal></expr>;</expr_stmt>  <comment type="line">// top-level fq should have been found.</comment>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>inserts</name></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call><operator>)</operator><operator>.</operator><call><name>longValue</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>hits</name></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>)</argument_list></call><operator>)</operator><operator>.</operator><call><name>longValue</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>inserts</name></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call><operator>)</operator><operator>.</operator><call><name>longValue</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>hits</name></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>)</argument_list></call><operator>)</operator><operator>.</operator><call><name>longValue</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
 
     <comment type="line">// try nested filter with multiple top-level args (i.e. a boolean query)</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">453</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">453</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSolrQueryParser</name> extends <name>SolrTestCaseJ4</name> <block>{
 
     <expr><name>hits</name> <operator>+=</operator> <literal type="number">1</literal></expr>;  <comment type="line">// the inner filter</comment>
     <name>inserts</name> <operator>+=</operator> <literal type="number">1</literal></block></expr>;</expr_stmt> <comment type="line">// the outer filter</comment>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>inserts</name></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call><operator>)</operator><operator>.</operator><call><name>longValue</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>hits</name></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>)</argument_list></call><operator>)</operator><operator>.</operator><call><name>longValue</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>inserts</name></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>)</argument_list></call><operator>)</operator><operator>.</operator><call><name>longValue</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>hits</name></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>filterCacheStats</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>)</argument_list></call><operator>)</operator><operator>.</operator><call><name>longValue</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <comment type="line">// test the score for a filter, and that default score is 0</comment>
     <expr_stmt><expr><call><name>assertJQ</name><argument_list>(<argument><expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"q"</literal></expr></argument>, <argument><expr><literal type="string">"+filter(*:*) +filter(id:1)"</literal></expr></argument>, <argument><expr><literal type="string">"fl"</literal></expr></argument>, <argument><expr><literal type="string">"id,score"</literal></expr></argument>, <argument><expr><literal type="string">"sort"</literal></expr></argument>, <argument><expr><literal type="string">"id asc"</literal></expr></argument>)</argument_list></call>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>join</name><operator>/</operator><name><name>BJQParserTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>join</name><operator>/</operator><name><name>BJQParserTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">39fa7915a25</literal><operator>..</operator><literal type="number">8c2cec36e85</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>join</name><operator>/</operator><name><name>BJQParserTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>join</name><operator>/</operator><name><name>BJQParserTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">19</literal></expr></argument>,<argument><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">19</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@</expr></argument></argument_list></call></expr></expr_stmt> <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>join</name></name>;</package>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>join</name><operator>.</operator><name>ScoreMode</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>SolrTestCaseJ4</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>search</name><operator>.</operator><name>SolrCache</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricsMap</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>BaseTestHarness</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>BeforeClass</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">32</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">31</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ListIterator</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Locale</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 
 <import>import <name><name>javax</name><operator>.</operator><name>xml</name><operator>.</operator><name>xpath</name><operator>.</operator><name>XPathConstants</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">276</literal></expr><operator>,</operator><expr><literal type="number">15</literal> <operator>+</operator><literal type="number">276</literal></expr><operator>,</operator><expr><literal type="number">15</literal> @@ <specifier>public</specifier> <name>class</name> <name>BJQParserTest</name> extends <name>SolrTestCaseJ4</name> <block>{
   @<expr><name>Test</name>
   <specifier>public</specifier> <name>void</name> <call><name>testCacheHit</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>IOException</name> <block>{
 
    <expr><name>SolrCache</name> <name>parentFilterCache</name> <operator>=</operator> <operator>(</operator><name>SolrCache</name><operator>)</operator> <call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getInfoRegistry</name><argument_list>()</argument_list></call>
        <operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"perSegFilter"</literal></expr></argument>)</argument_list></call></expr></block></expr></argument></throws></expr>;
    <name>MetricsMap</name> <name>parentFilterCache</name> <operator>=</operator> <operator>(</operator><name>MetricsMap</name><operator>)</operator><call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCoreMetricManager</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getRegistry</name><argument_list>()</argument_list></call>
        <operator>.</operator><call><name>getMetrics</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"CACHE.searcher.perSegFilter"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>MetricsMap</name></type> <name>filterCache</name> <init>= <expr><operator>(</operator><name>MetricsMap</name><operator>)</operator><call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCoreMetricManager</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getRegistry</name><argument_list>()</argument_list></call>
        <operator>.</operator><call><name>getMetrics</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"CACHE.searcher.filterCache"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
    <decl_stmt><decl><type><name>SolrCache</name></type> <name>filterCache</name> <init>= <expr><operator>(</operator><name>SolrCache</name><operator>)</operator> <call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getInfoRegistry</name><argument_list>()</argument_list></call>
        <operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"filterCache"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
    <decl_stmt><decl><type><name>NamedList</name></type> <name>parentsBefore</name> <init>= <expr><call><name><name>parentFilterCache</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>parentsBefore</name> <init>= <expr><call><name><name>parentFilterCache</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
    <decl_stmt><decl><type><name>NamedList</name></type> <name>filtersBefore</name> <init>= <expr><call><name><name>filterCache</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>filtersBefore</name> <init>= <expr><call><name><name>filterCache</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <comment type="line">// it should be weird enough to be uniq</comment>
     <decl_stmt><decl><type><name>String</name></type> <name>parentFilter</name> <init>= <expr><literal type="string">"parent_s:([a TO c] [d TO f])"</literal></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">298</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">298</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>BJQParserTest</name> extends <name>SolrTestCaseJ4</name> <block>{
         <expr><literal type="string">"//*[@numFound='6']"</literal></expr>)</block></expr>;</expr_stmt>
 
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"didn't hit fqCache yet "</literal></expr></argument>, <argument><expr><literal type="number">0L</literal></expr></argument>,
        <argument><expr><call><name>delta</name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>, <argument><expr><call><name><name>filterCache</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>filtersBefore</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>delta</name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>, <argument><expr><call><name><name>filterCache</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>filtersBefore</name></expr></argument>)</argument_list></call></expr></expr_stmt>)</block>;</class>
 
     <expr_stmt><expr><call><name>assertQ</name><argument_list>(
         <argument><expr><literal type="string">"filter by join"</literal></expr></argument>,
<argument>@@ <expr><operator>-</operator><literal type="number">306</literal></expr></argument>,<argument><expr><literal type="number">18</literal> <operator>+</operator><literal type="number">306</literal></expr></argument>,<argument><expr><literal type="number">18</literal> @@ <specifier>public</specifier> class <name>BJQParserTest</name> extends <name>SolrTestCaseJ4</name> <block>{
             <expr><operator>+</operator> <literal type="string">"\"}child_s:l"</literal></expr></block></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="string">"//*[@numFound='6']"</literal></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt></try>
 
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"in cache mode every request lookups"</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>,
        <argument><expr><call><name>delta</name><argument_list>(<argument><expr><literal type="string">"lookups"</literal></expr></argument>, <argument><expr><call><name><name>parentFilterCache</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>parentsBefore</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>delta</name><argument_list>(<argument><expr><literal type="string">"lookups"</literal></expr></argument>, <argument><expr><call><name><name>parentFilterCache</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>parentsBefore</name></expr></argument>)</argument_list></call></expr></expr_stmt>)</block_content></block><empty_stmt>;</empty_stmt></for>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"last two lookups causes hits"</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>,
        <argument><expr><call><name>delta</name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>, <argument><expr><call><name><name>parentFilterCache</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>parentsBefore</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>delta</name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>, <argument><expr><call><name><name>parentFilterCache</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>parentsBefore</name></expr></argument>)</argument_list></call></expr></expr_stmt>)</block>;</class>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"the first lookup gets insert"</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>,
        <argument><expr><call><name>delta</name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>, <argument><expr><call><name><name>parentFilterCache</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>parentsBefore</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>delta</name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>, <argument><expr><call><name><name>parentFilterCache</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>parentsBefore</name></expr></argument>)</argument_list></call></expr></expr_stmt>)</block_content></block>;</function>
 
 
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"true join query is cached in fqCache"</literal></expr></argument>, <argument><expr><literal type="number">1L</literal></expr></argument>,
        <argument><expr><call><name>delta</name><argument_list>(<argument><expr><literal type="string">"lookups"</literal></expr></argument>, <argument><expr><call><name><name>filterCache</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>filtersBefore</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>delta</name><argument_list>(<argument><expr><literal type="string">"lookups"</literal></expr></argument>, <argument><expr><call><name><name>filterCache</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>filtersBefore</name></expr></argument>)</argument_list></call></expr></expr_stmt>)</block_content></block>;</function>
   }</block></class>
   
  <function><type><specifier>private</specifier> <name>long</name></type> <name>delta</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>key</name></decl></parameter>, <parameter><decl><type><name>NamedList</name></type> <name>a</name></decl></parameter>, <parameter><decl><type><name>NamedList</name></type> <name>b</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <function><type><specifier>private</specifier> <name>long</name></type> <name>delta</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>key</name></decl></parameter>, <parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>a</name></decl></parameter>, <parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>b</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <return>return <expr><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>a</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call> <operator>-</operator> <operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>b</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>join</name><operator>/</operator><name><name>TestScoreJoinQPScore</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>join</name><operator>/</operator><name><name>TestScoreJoinQPScore</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">17abf7834f1</literal><operator>..</operator><name>b9a2e78ffe2</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>join</name><operator>/</operator><name><name>TestScoreJoinQPScore</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>search</name><operator>/</operator><name>join</name><operator>/</operator><name><name>TestScoreJoinQPScore</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">21</literal></expr><operator>,</operator><expr><literal type="number">16</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Comparator</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Locale</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Random</name></name>;</import>
 
<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>Metric</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>BoostQuery</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>Query</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>search</name><operator>.</operator><name>join</name><operator>.</operator><name>ScoreMode</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>SolrTestCaseJ4</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>SolrException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricsMap</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>request</name><operator>.</operator><name>SolrQueryRequest</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>request</name><operator>.</operator><name>SolrRequestInfo</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>response</name><operator>.</operator><name>SolrQueryResponse</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">198</literal></expr><operator>,</operator><expr><literal type="number">22</literal> <operator>+</operator><literal type="number">200</literal></expr><operator>,</operator><expr><literal type="number">23</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestScoreJoinQPScore</name> extends <name>SolrTestCaseJ4</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>testCacheHit</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><call><name>indexDataForScorring</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
 
    <name>SolrCache</name> <name>cache</name> <operator>=</operator> <operator>(</operator><name>SolrCache</name><operator>)</operator> <call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getInfoRegistry</name><argument_list>()</argument_list></call>
        <operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"queryResultCache"</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Metric</name></argument>&gt;</argument_list></name></type> <name>metrics</name> <init>= <expr><call><name><name>h</name><operator>.</operator><name>getCoreContainer</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getMetricManager</name><argument_list>()</argument_list></call><operator>.</operator><call><name>registry</name><argument_list>(<argument><expr><call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCoreMetricManager</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getRegistryName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getMetrics</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>MetricsMap</name></type> <name>mm</name> <init>= <expr><operator>(</operator><name>MetricsMap</name><operator>)</operator><call><name><name>metrics</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"CACHE.searcher.queryResultCache"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <block>{<block_content>
      <decl_stmt><decl><type><specifier>final</specifier> <name>NamedList</name></type> <name>statPre</name> <init>= <expr><call><name><name>cache</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>statPre</name> <init>= <expr><call><name><name>mm</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>h</name><operator>.</operator><name>query</name></name><argument_list>(<argument><expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"q"</literal></expr></argument>, <argument><expr><literal type="string">"{!join from=movieId_s to=id score=Avg}title:first"</literal></expr></argument>, <argument><expr><literal type="string">"fl"</literal></expr></argument>, <argument><expr><literal type="string">"id"</literal></expr></argument>, <argument><expr><literal type="string">"omitHeader"</literal></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>assertHitOrInsert</name><argument_list>(<argument><expr><name>cache</name></expr></argument>, <argument><expr><name>statPre</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>assertHitOrInsert</name><argument_list>(<argument><expr><call><name><name>mm</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>statPre</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block>
 
     <block>{<block_content>
      <decl_stmt><decl><type><specifier>final</specifier> <name>NamedList</name></type> <name>statPre</name> <init>= <expr><call><name><name>cache</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>statPre</name> <init>= <expr><call><name><name>mm</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>h</name><operator>.</operator><name>query</name></name><argument_list>(<argument><expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"q"</literal></expr></argument>, <argument><expr><literal type="string">"{!join from=movieId_s to=id score=Avg}title:first"</literal></expr></argument>, <argument><expr><literal type="string">"fl"</literal></expr></argument>, <argument><expr><literal type="string">"id"</literal></expr></argument>, <argument><expr><literal type="string">"omitHeader"</literal></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>assertHit</name><argument_list>(<argument><expr><name>cache</name></expr></argument>, <argument><expr><name>statPre</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>assertHit</name><argument_list>(<argument><expr><call><name><name>mm</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>statPre</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block>
 
     <block>{<block_content>
      <decl_stmt><decl><type><name>NamedList</name></type> <name>statPre</name> <init>= <expr><call><name><name>cache</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>statPre</name> <init>= <expr><call><name><name>mm</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
       <decl_stmt><decl><type><name>Random</name></type> <name>r</name> <init>= <expr><call><name>random</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>boolean</name></type> <name>changed</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">234</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">237</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestScoreJoinQPScore</name> extends <name>SolrTestCaseJ4</name> <block>{
               <comment type="line">//" b=" + boost + </comment>
               <expr><literal type="string">"}"</literal> <operator>+</operator> <name>q</name></expr>, <expr><literal type="string">"fl"</literal></expr>, <expr><literal type="string">"id"</literal></expr>, <expr><literal type="string">"omitHeader"</literal></expr>, <expr><literal type="string">"true"</literal></expr>)
       )</block></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>assertInsert</name><argument_list>(<argument><expr><name>cache</name></expr></argument>, <argument><expr><name>statPre</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>assertInsert</name><argument_list>(<argument><expr><call><name><name>mm</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>statPre</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
      <expr_stmt><expr><name>statPre</name> <operator>=</operator> <call><name><name>cache</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>statPre</name> <operator>=</operator> <call><name><name>mm</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>repeat</name> <init>= <expr><call><name><name>h</name><operator>.</operator><name>query</name></name><argument_list>(<argument><expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"q"</literal></expr></argument>, <argument><expr><literal type="string">"{!join from="</literal> <operator>+</operator> <name>from</name> <operator>+</operator> <literal type="string">" to="</literal> <operator>+</operator> <name>to</name> <operator>+</operator> <literal type="string">" score="</literal> <operator>+</operator> <call><name><name>score</name><operator>.</operator><name>toLowerCase</name></name><argument_list>(<argument><expr><name><name>Locale</name><operator>.</operator><name>ROOT</name></name></expr></argument>)</argument_list></call> <operator>+</operator>
           <comment type="line">//" b=" + boost</comment>
               <literal type="string">"}"</literal> <operator>+</operator> <name>q</name></expr></argument>, <argument><expr><literal type="string">"fl"</literal></expr></argument>, <argument><expr><literal type="string">"id"</literal></expr></argument>, <argument><expr><literal type="string">"omitHeader"</literal></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>)</argument_list></call></expr></argument>
       )</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name>assertHit</name><argument_list>(<argument><expr><name>cache</name></expr></argument>, <argument><expr><name>statPre</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>assertHit</name><argument_list>(<argument><expr><call><name><name>mm</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>statPre</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
       <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"lowercase shouldn't change anything"</literal></expr></argument>, <argument><expr><name>resp</name></expr></argument>, <argument><expr><name>repeat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">254</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">257</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestScoreJoinQPScore</name> extends <name>SolrTestCaseJ4</name> <block>{
     <comment type="line">// this queries are not overlap, with other in this test case. </comment>
     <comment type="line">// however it might be better to extract this method into the separate suite</comment>
     <comment type="line">// for a while let's nuke a cache content, in case of repetitions</comment>
    <expr><name>SolrCache</name> <name>cache</name> <operator>=</operator> <operator>(</operator><name>SolrCache</name><operator>)</operator><call><name><name>h</name><operator>.</operator><name>getCore</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getInfoRegistry</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"queryResultCache"</literal></expr></argument>)</argument_list></call></expr>;
     <call><name><name>cache</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
   </block_content>}</block>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">264</literal></expr><operator>,</operator><expr><literal type="number">32</literal> <operator>+</operator><literal type="number">268</literal></expr><operator>,</operator><expr><literal type="number">32</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestScoreJoinQPScore</name> extends <name>SolrTestCaseJ4</name> <block>{
     <return>return <expr><call><name><name>l</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>r</name><operator>.</operator><name>nextInt</name></name><argument_list>(<argument><expr><call><name><name>l</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
   }</block></expr></expr_stmt>
 
  <function><type><specifier>private</specifier> <name>void</name></type> <name>assertInsert</name><parameter_list>(<parameter><decl><type><name>SolrCache</name></type> <name>cache</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>NamedList</name></type> <name>statPre</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <function><type><specifier>private</specifier> <name>void</name></type> <name>assertInsert</name><parameter_list>(<parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>current</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>statPre</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"it lookups"</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>,
        <argument><expr><call><name>delta</name><argument_list>(<argument><expr><literal type="string">"lookups"</literal></expr></argument>, <argument><expr><call><name><name>cache</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>statPre</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"it doesn't hit"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name>delta</name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>, <argument><expr><call><name><name>cache</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>statPre</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>delta</name><argument_list>(<argument><expr><literal type="string">"lookups"</literal></expr></argument>, <argument><expr><name>current</name></expr></argument>, <argument><expr><name>statPre</name></expr></argument>)</argument_list></call></expr></expr_stmt>)</block_content></block>;</function>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"it doesn't hit"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name>delta</name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>, <argument><expr><name>current</name></expr></argument>, <argument><expr><name>statPre</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"it inserts"</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>,
        <argument><expr><call><name>delta</name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>, <argument><expr><call><name><name>cache</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>statPre</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>delta</name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>, <argument><expr><name>current</name></expr></argument>, <argument><expr><name>statPre</name></expr></argument>)</argument_list></call></expr></expr_stmt>)</block_content></block>;</function>
   </block_content>}</block></function>
 
  <function><type><specifier>private</specifier> <name>void</name></type> <name>assertHit</name><parameter_list>(<parameter><decl><type><name>SolrCache</name></type> <name>cache</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>NamedList</name></type> <name>statPre</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <function><type><specifier>private</specifier> <name>void</name></type> <name>assertHit</name><parameter_list>(<parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>current</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>statPre</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"it lookups"</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>,
        <argument><expr><call><name>delta</name><argument_list>(<argument><expr><literal type="string">"lookups"</literal></expr></argument>, <argument><expr><call><name><name>cache</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>statPre</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"it hits"</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name>delta</name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>, <argument><expr><call><name><name>cache</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>statPre</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>delta</name><argument_list>(<argument><expr><literal type="string">"lookups"</literal></expr></argument>, <argument><expr><name>current</name></expr></argument>, <argument><expr><name>statPre</name></expr></argument>)</argument_list></call></expr></expr_stmt>)</block_content></block>;</function>
    <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"it hits"</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name>delta</name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>, <argument><expr><name>current</name></expr></argument>, <argument><expr><name>statPre</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"it doesn't insert"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>,
        <argument><expr><call><name>delta</name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>, <argument><expr><call><name><name>cache</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>statPre</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>delta</name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>, <argument><expr><name>current</name></expr></argument>, <argument><expr><name>statPre</name></expr></argument>)</argument_list></call></expr></expr_stmt>)</block_content></block>;</function>
   </block_content>}</block></function>
 
  <function><type><specifier>private</specifier> <name>void</name></type> <name>assertHitOrInsert</name><parameter_list>(<parameter><decl><type><name>SolrCache</name></type> <name>cache</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>NamedList</name></type> <name>statPre</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <function><type><specifier>private</specifier> <name>void</name></type> <name>assertHitOrInsert</name><parameter_list>(<parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>current</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>statPre</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"it lookups"</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>,
        <argument><expr><call><name>delta</name><argument_list>(<argument><expr><literal type="string">"lookups"</literal></expr></argument>, <argument><expr><call><name><name>cache</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>statPre</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><specifier>final</specifier> <name>long</name></type> <name>mayHit</name> <init>= <expr><call><name>delta</name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>, <argument><expr><call><name><name>cache</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>statPre</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>delta</name><argument_list>(<argument><expr><literal type="string">"lookups"</literal></expr></argument>, <argument><expr><name>current</name></expr></argument>, <argument><expr><name>statPre</name></expr></argument>)</argument_list></call></expr></expr_stmt>)</block_content></block>;</function>
    <decl_stmt><decl><type><specifier>final</specifier> <name>long</name></type> <name>mayHit</name> <init>= <expr><call><name>delta</name><argument_list>(<argument><expr><literal type="string">"hits"</literal></expr></argument>, <argument><expr><name>current</name></expr></argument>, <argument><expr><name>statPre</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"it may hit"</literal></expr></argument>, <argument><expr><literal type="number">0</literal> <operator>==</operator> <name>mayHit</name> <operator>||</operator> <literal type="number">1</literal> <operator>==</operator> <name>mayHit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"or insert on cold"</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>,
        <argument><expr><call><name>delta</name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>, <argument><expr><call><name><name>cache</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>statPre</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>mayHit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>delta</name><argument_list>(<argument><expr><literal type="string">"inserts"</literal></expr></argument>, <argument><expr><name>current</name></expr></argument>, <argument><expr><name>statPre</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>mayHit</name></expr></expr_stmt>)</block_content></block>;</function>
   </block_content>}</block>
 
  private long delta(String key<operator>,</operator> NamedList a<operator>,</operator> NamedList b</do>)</block> <block>{<block_content>
  <function><type><specifier>private</specifier> <name>long</name></type> <name>delta</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>key</name></decl></parameter>, <parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>a</name></decl></parameter>, <parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>b</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <return>return <expr><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>a</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call> <operator>-</operator> <operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>b</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></function>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>store</name><operator>/</operator><name>blockcache</name><operator>/</operator><name><name>BufferStoreTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>store</name><operator>/</operator><name>blockcache</name><operator>/</operator><name><name>BufferStoreTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>e91d762f5d4</name><operator>..</operator><literal type="number">534793fbc38</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>store</name><operator>/</operator><name>blockcache</name><operator>/</operator><name><name>BufferStoreTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>store</name><operator>/</operator><name>blockcache</name><operator>/</operator><name><name>BufferStoreTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">17</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>store</name><operator>.</operator><name>blockcache</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>math</name><operator>.</operator><name>BigDecimal</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 
 <import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>LuceneTestCase</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>common</name><operator>.</operator><name>util</name><operator>.</operator><name>NamedList</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>lucene</name><operator>.</operator><name>util</name><operator>.</operator><name>TestUtil</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>MetricsMap</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>metrics</name><operator>.</operator><name>SolrMetricManager</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Before</name></name>;</import>
 <import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">27</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">30</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@ <specifier>public</specifier> <name>class</name> <name>BufferStoreTest</name> extends <name>LuceneTestCase</name> <block>{
   <expr><specifier>private</specifier> <name>final</name> <specifier>static</specifier> <name>int</name> <name>blockSize</name> <operator>=</operator> <literal type="number">1024</literal></expr>;
 
   <specifier>private</specifier> <name>Metrics</name> <name>metrics</name></block></expr>;</expr_stmt>
  <decl_stmt><decl><type><specifier>private</specifier> <name>MetricsMap</name></type> <name>metricsMap</name></decl>;</decl_stmt>
 
   <decl_stmt><decl><type><specifier>private</specifier> <name>Store</name></type> <name>store</name></decl>;</decl_stmt>
 
   <function><annotation>@<name>Before</name></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>setup</name><parameter_list>()</parameter_list> <block>{<block_content>
     <expr_stmt><expr><name>metrics</name> <operator>=</operator> <operator>new</operator> <call><name>Metrics</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>SolrMetricManager</name></type> <name>metricManager</name> <init>= <expr><operator>new</operator> <call><name>SolrMetricManager</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>registry</name> <init>= <expr><call><name><name>TestUtil</name><operator>.</operator><name>randomSimpleString</name></name><argument_list>(<argument><expr><call><name>random</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>scope</name> <init>= <expr><call><name><name>TestUtil</name><operator>.</operator><name>randomSimpleString</name></name><argument_list>(<argument><expr><call><name>random</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>metrics</name><operator>.</operator><name>initializeMetrics</name></name><argument_list>(<argument><expr><name>metricManager</name></expr></argument>, <argument><expr><name>registry</name></expr></argument>, <argument><expr><name>scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>metricsMap</name> <operator>=</operator> <operator>(</operator><name>MetricsMap</name><operator>)</operator> <call><name><name>metricManager</name><operator>.</operator><name>registry</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getMetrics</name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"CACHE."</literal> <operator>+</operator> <name>scope</name> <operator>+</operator> <literal type="string">".hdfsBlockCache"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>BufferStore</name><operator>.</operator><name>initNewBuffer</name></name><argument_list>(<argument><expr><name>blockSize</name></expr></argument>, <argument><expr><name>blockSize</name></expr></argument>, <argument><expr><name>metrics</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>store</name> <operator>=</operator> <call><name><name>BufferStore</name><operator>.</operator><name>instance</name></name><argument_list>(<argument><expr><name>blockSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">77</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">86</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>BufferStoreTest</name> extends <name>LuceneTestCase</name> <block>{
    <expr><operator>*</operator>          <name>whether</name> <name>buffers</name> <name>should</name> <name>have</name> <name>been</name> <name>lost</name> <name>since</name> <name>the</name> <name>last</name> <name>call</name>
    <operator>*</operator><operator>/</operator>
   <specifier>private</specifier> <name>void</name> <call><name>assertGaugeMetricsChanged</name><argument_list>(<argument><expr><name>boolean</name> <name>allocated</name></expr></argument>, <argument><expr><name>boolean</name> <name>lost</name></expr></argument>)</argument_list></call> <block>{
    <expr><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Number</name></argument>&gt;</argument_list></name> <name>stats</name> <operator>=</operator> <call><name><name>metrics</name><operator>.</operator><name>getStatistics</name></name><argument_list>()</argument_list></call></expr>;
    <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name> <name>stats</name> <operator>=</operator> <call><name><name>metricsMap</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></block></expr>;
 
     <call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"Buffer allocation metric not updating correctly."</literal></expr></argument>,
         <argument><expr><name>allocated</name></expr></argument>, <argument><expr><call><name>isMetricPositive</name><argument_list>(<argument><expr><name>stats</name></expr></argument>, <argument><expr><literal type="string">"buffercache.allocations"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">85</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">94</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>BufferStoreTest</name> extends <name>LuceneTestCase</name> <block>{
         <expr><name>lost</name></expr>, <expr><call><name>isMetricPositive</name><argument_list>(<argument><expr><name>stats</name></expr></argument>, <argument><expr><literal type="string">"buffercache.lost"</literal></expr></argument>)</argument_list></call></expr>)</block></expr>;</expr_stmt>
   </block_content>}</block></class>
 
  <function><type><specifier>private</specifier> <name>boolean</name></type> <name>isMetricPositive</name><parameter_list>(<parameter><decl><type><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Number</name></argument>&gt;</argument_list></name></type> <name>stats</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>metric</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <function><type><specifier>private</specifier> <name>boolean</name></type> <name>isMetricPositive</name><parameter_list>(<parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>stats</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>metric</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <return>return <expr><operator>new</operator> <call><name>BigDecimal</name><argument_list>(<argument><expr><call><name><name>stats</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>metric</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>compareTo</name><argument_list>(<argument><expr><name><name>BigDecimal</name><operator>.</operator><name>ZERO</name></name></expr></argument>)</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>;</return>
   </block_content>}</block></function>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>util</name><operator>/</operator><name>stats</name><operator>/</operator><name><name>MetricUtilsTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>util</name><operator>/</operator><name>stats</name><operator>/</operator><name><name>MetricUtilsTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>aa02de5cdf1</name><operator>..</operator><name>b852a28502a</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>util</name><operator>/</operator><name>stats</name><operator>/</operator><name><name>MetricUtilsTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>util</name><operator>/</operator><name>stats</name><operator>/</operator><name><name>MetricUtilsTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">18</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt>
 <package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>solr</name><operator>.</operator><name>util</name><operator>.</operator><name>stats</name></name>;</package>
 
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashMap</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>concurrent</name><operator>.</operator><name>TimeUnit</name></name>;</import>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">45</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">46</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> <name>class</name> <name>MetricUtilsTest</name> extends <name>SolrTestCaseJ4</name> <block>{
       <expr><call><name><name>timer</name><operator>.</operator><name>update</name></name><argument_list>(<argument><expr><call><name><name>Math</name><operator>.</operator><name>abs</name></name><argument_list>(<argument><expr><call><name>random</name><argument_list>()</argument_list></call><operator>.</operator><call><name>nextInt</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><name><name>TimeUnit</name><operator>.</operator><name>NANOSECONDS</name></name></expr></argument>)</argument_list></call></expr>;
     }</block></expr></expr_stmt>
     <comment type="line">// obtain timer metrics</comment>
    <decl_stmt><decl><type><name>NamedList</name></type> <name>lst</name> <init>= <expr><operator>new</operator> <call><name>NamedList</name><argument_list>(<argument><expr><call><name><name>MetricUtils</name><operator>.</operator><name>convertTimer</name></name><argument_list>(<argument><expr><name>timer</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>map</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>MetricUtils</name><operator>.</operator><name>convertTimer</name></name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><name>timer</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><lambda><parameter_list>(<parameter><decl><name>k</name></decl></parameter>, <parameter><decl><name>v</name></decl></parameter>)</parameter_list> -&gt; <block>{<block_content>
      <expr_stmt><expr><call><name><name>map</name><operator>.</operator><name>putAll</name></name><argument_list>(<argument><expr><operator>(</operator><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name><operator>)</operator><name>v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>NamedList</name></type> <name>lst</name> <init>= <expr><operator>new</operator> <call><name>NamedList</name><argument_list>(<argument><expr><name>map</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <comment type="line">// check that expected metrics were obtained</comment>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">14</literal></expr></argument>, <argument><expr><call><name><name>lst</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>Snapshot</name></type> <name>snapshot</name> <init>= <expr><call><name><name>timer</name><operator>.</operator><name>getSnapshot</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">84</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">89</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MetricUtilsTest</name> extends <name>SolrTestCaseJ4</name> <block>{
     <expr><name><name>Gauge</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name> <name>error</name> <operator>=</operator> <lambda><parameter_list>()</parameter_list> -&gt; <block>{<block_content><throw>throw <expr><operator>new</operator> <call><name>InternalError</name><argument_list>(<argument><expr><literal type="string">"Memory Pool not found error"</literal></expr></argument>)</argument_list></call></expr>;</throw><expr_stmt/>}</block_content></block></lambda></expr>;
     <call><name><name>registry</name><operator>.</operator><name>register</name></name><argument_list>(<argument><expr><literal type="string">"memory.expected.error"</literal></expr></argument>, <argument><expr><name>error</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>MetricUtils</name><operator>.</operator><name>toMaps</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><call><name><name>Collections</name><operator>.</operator><name>singletonList</name></name><argument_list>(<argument><expr><name><name>MetricFilter</name><operator>.</operator><name>ALL</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>MetricFilter</name><operator>.</operator><name>ALL</name></name></expr></argument>,
        <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><lambda><parameter_list>(<parameter><decl><name>k</name></decl></parameter>, <parameter><decl><name>o</name></decl></parameter>)</parameter_list> -&gt; <block>{<block_content>
        <expr_stmt><expr><literal type="boolean">false</literal></expr><operator>,</operator> <expr><literal type="boolean">false</literal></expr><operator>,</operator> <expr><literal type="boolean">false</literal></expr><operator>,</operator> <expr><literal type="boolean">false</literal></expr><operator>,</operator> <expr><lambda><parameter_list>(<parameter><decl><name>k</name></decl></parameter>, <parameter><decl><name>o</name></decl></parameter>)</parameter_list> -&gt; <block>{<block_content>
       <decl_stmt><decl><type><name>Map</name></type> <name>v</name> <init>= <expr><operator>(</operator><name>Map</name><operator>)</operator><name>o</name></expr></init></decl>;</decl_stmt>
       <if_stmt><if>if <condition>(<expr><call><name><name>k</name><operator>.</operator><name>startsWith</name></name><argument_list>(<argument><expr><literal type="string">"counter"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
         <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1L</literal></expr></argument>, <argument><expr><call><name><name>v</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"count"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">114</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">119</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>MetricUtilsTest</name> extends <name>SolrTestCaseJ4</name> <block>{<block_content>
     </block_content>}</block></expr></expr_stmt><expr_stmt><expr/></expr_stmt></block_content></block></if></if_stmt></block_content></block></lambda></expr></expr_stmt></block_content></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <comment type="line">// test compact format</comment>
     <expr_stmt><expr><call><name><name>MetricUtils</name><operator>.</operator><name>toMaps</name></name><argument_list>(<argument><expr><name>registry</name></expr></argument>, <argument><expr><call><name><name>Collections</name><operator>.</operator><name>singletonList</name></name><argument_list>(<argument><expr><name><name>MetricFilter</name><operator>.</operator><name>ALL</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>MetricFilter</name><operator>.</operator><name>ALL</name></name></expr></argument>,
        <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><lambda><parameter_list>(<parameter><decl><name>k</name></decl></parameter>, <parameter><decl><name>o</name></decl></parameter>)</parameter_list> -&gt; <block>{<block_content>
        <expr_stmt><expr><literal type="boolean">false</literal></expr><operator>,</operator> <expr><literal type="boolean">false</literal></expr><operator>,</operator> <expr><literal type="boolean">true</literal></expr><operator>,</operator> <expr><literal type="boolean">false</literal></expr><operator>,</operator> <expr><lambda><parameter_list>(<parameter><decl><name>k</name></decl></parameter>, <parameter><decl><name>o</name></decl></parameter>)</parameter_list> -&gt; <block>{<block_content>
           <if_stmt><if>if <condition>(<expr><call><name><name>k</name><operator>.</operator><name>startsWith</name></name><argument_list>(<argument><expr><literal type="string">"counter"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
             <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><name>o</name> <operator>instanceof</operator> <name>Long</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1L</literal></expr></argument>, <argument><expr><name>o</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>client</name><operator>/</operator><name>solrj</name><operator>/</operator><name>impl</name><operator>/</operator><name><name>CloudSolrClientTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>client</name><operator>/</operator><name>solrj</name><operator>/</operator><name>impl</name><operator>/</operator><name><name>CloudSolrClientTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d22b37c24be</name><operator>..</operator><literal type="number">5ebb650c05d</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>client</name><operator>/</operator><name>solrj</name><operator>/</operator><name>impl</name><operator>/</operator><name><name>CloudSolrClientTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>client</name><operator>/</operator><name>solrj</name><operator>/</operator><name>impl</name><operator>/</operator><name><name>CloudSolrClientTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">418</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">418</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> class <name>CloudSolrClientTest</name> extends <name>SolrCloudTestCase</name> <block>{<block_content>
 
   <function><type><specifier>private</specifier> <name>Long</name></type> <name>getNumRequests</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>baseUrl</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>collectionName</name></decl></parameter>)</parameter_list> <throws>throws
       <argument><expr><name>SolrServerException</name></expr></argument>, <argument><expr><name>IOException</name> <block>{<block_content>
    <return>return <expr><call><name>getNumRequests</name><argument_list>(<argument><expr><name>baseUrl</name></expr></argument>, <argument><expr><name>collectionName</name></expr></argument>, <argument><expr><literal type="string">"QUERY"</literal></expr></argument>, <argument><expr><literal type="string">"standard"</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</return>
    <return>return <expr><call><name>getNumRequests</name><argument_list>(<argument><expr><name>baseUrl</name></expr></argument>, <argument><expr><name>collectionName</name></expr></argument>, <argument><expr><literal type="string">"QUERY"</literal></expr></argument>, <argument><expr><literal type="string">"standard"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</return>
   </block_content>}</block></expr></argument></throws></function>
 
  <decl_stmt><decl><type><specifier>private</specifier> <name>Long</name></type> <name>getNumRequests</name><argument_list>(<argument><expr><name>String</name> <name>baseUrl</name></expr></argument>, <argument><expr><name>String</name> <name>collectionName</name></expr></argument>, <argument><expr><name>String</name> <name>category</name></expr></argument>, <argument><expr><name>String</name> <name>key</name></expr></argument>, <argument><expr><name>boolean</name> <name>returnNumErrors</name></expr></argument>)</argument_list> <throws>throws
  <argument><expr><specifier>private</specifier> <name>Long</name> <call><name>getNumRequests</name><argument_list>(<argument><expr><name>String</name> <name>baseUrl</name></expr></argument>, <argument><expr><name>String</name> <name>collectionName</name></expr></argument>, <argument><expr><name>String</name> <name>category</name></expr></argument>, <argument><expr><name>String</name> <name>key</name></expr></argument>, <argument><expr><name>String</name> <name>scope</name></expr></argument>, <argument><expr><name>boolean</name> <name>returnNumErrors</name></expr></argument>)</argument_list></call></expr></argument></throws> <throws>throws
       <argument><expr><name>SolrServerException</name></expr></argument>, <argument><expr><name>IOException</name> <block>{
 
     <expr><name><name>NamedList</name><argument_list type="generic">&lt;<argument><name>Object</name></argument>&gt;</argument_list></name> <name>resp</name></expr></block></expr></argument></throws></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">437</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">437</literal></expr><operator>,</operator><expr><literal type="number">21</literal> @@ <specifier>public</specifier> class <name>CloudSolrClientTest</name> extends <name>SolrCloudTestCase</name> <block>{<block_content>
       <decl_stmt><decl><type><name>QueryRequest</name></type> <name>req</name> <init>= <expr><operator>new</operator> <call><name>QueryRequest</name><argument_list>(<argument><expr><name>params</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><name>resp</name> <operator>=</operator> <call><name><name>client</name><operator>.</operator><name>request</name></name><argument_list>(<argument><expr><name>req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></expr></expr_stmt>
    <return>return <expr><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>resp</name><operator>.</operator><name>findRecursive</name></name><argument_list>(<argument><expr><literal type="string">"solr-mbeans"</literal></expr></argument>, <argument><expr><name>category</name></expr></argument>, <argument><expr><name>key</name></expr></argument>, <argument><expr><literal type="string">"stats"</literal></expr></argument>, <argument><expr><ternary><condition><expr><name>returnNumErrors</name></expr> ?</condition><then> <expr><literal type="string">"errors"</literal></expr> </then><else>: <expr><literal type="string">"requests"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</return>
    <decl_stmt><decl><type><name>String</name></type> <name>name</name></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>returnNumErrors</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>name</name> <operator>=</operator> <name>category</name> <operator>+</operator> <literal type="string">"."</literal> <operator>+</operator> <operator>(</operator><ternary><condition><expr><name>scope</name> <operator>!=</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><name>scope</name></expr> </then><else>: <expr><name>key</name></expr></else></ternary><operator>)</operator> <operator>+</operator> <literal type="string">".errors"</literal></expr>;</expr_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <expr_stmt><expr><name>name</name> <operator>=</operator> <name>category</name> <operator>+</operator> <literal type="string">"."</literal> <operator>+</operator> <operator>(</operator><ternary><condition><expr><name>scope</name> <operator>!=</operator> <literal type="null">null</literal></expr> ?</condition><then> <expr><name>scope</name></expr> </then><else>: <expr><name>key</name></expr></else></ternary><operator>)</operator> <operator>+</operator> <literal type="string">".requests"</literal></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>map</name> <init>= <expr><operator>(</operator><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name><operator>)</operator><call><name><name>resp</name><operator>.</operator><name>findRecursive</name></name><argument_list>(<argument><expr><literal type="string">"solr-mbeans"</literal></expr></argument>, <argument><expr><name>category</name></expr></argument>, <argument><expr><name>key</name></expr></argument>, <argument><expr><literal type="string">"stats"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>map</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <return>return <expr><literal type="null">null</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>scope</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content> <comment type="line">// admin handler uses a meter instead of counter here</comment>
      <return>return <expr><operator>(</operator><name>Long</name><operator>)</operator><call><name><name>map</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>name</name> <operator>+</operator> <literal type="string">".count"</literal></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <return>return <expr><operator>(</operator><name>Long</name><operator>)</operator> <call><name><name>map</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></else></if_stmt>
   </block_content>}</block></expr></expr_stmt>
 
   <annotation>@<name>Test</name></annotation>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">458</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">472</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>CloudSolrClientTest</name> extends <name>SolrCloudTestCase</name> <block>{<block_content>
         <for>for <control>(<init><decl><type><name>String</name></type> <name>adminPath</name> <range>: <expr><call><name><name>adminPathToMbean</name><operator>.</operator><name>keySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
           <decl_stmt><decl><type><name>long</name></type> <name>errorsBefore</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
           <for>for <control>(<init><decl><type><name>JettySolrRunner</name></type> <name>runner</name> <range>: <expr><call><name><name>cluster</name><operator>.</operator><name>getJettySolrRunners</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
            <decl_stmt><decl><type><name>Long</name></type> <name>numRequests</name> <init>= <expr><call><name>getNumRequests</name><argument_list>(<argument><expr><call><name><name>runner</name><operator>.</operator><name>getBaseUrl</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"foo"</literal></expr></argument>, <argument><expr><literal type="string">"ADMIN"</literal></expr></argument>, <argument><expr><call><name><name>adminPathToMbean</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>adminPath</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>Long</name></type> <name>numRequests</name> <init>= <expr><call><name>getNumRequests</name><argument_list>(<argument><expr><call><name><name>runner</name><operator>.</operator><name>getBaseUrl</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"foo"</literal></expr></argument>, <argument><expr><literal type="string">"ADMIN"</literal></expr></argument>, <argument><expr><call><name><name>adminPathToMbean</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>adminPath</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>adminPath</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
             <expr_stmt><expr><name>errorsBefore</name> <operator>+=</operator> <name>numRequests</name></expr>;</expr_stmt>
             <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Found {} requests to {} on {}"</literal></expr></argument>, <argument><expr><name>numRequests</name></expr></argument>, <argument><expr><name>adminPath</name></expr></argument>, <argument><expr><call><name><name>runner</name><operator>.</operator><name>getBaseUrl</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           </block_content>}</block></for>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">475</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">489</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>CloudSolrClientTest</name> extends <name>SolrCloudTestCase</name> <block>{<block_content>
           </block_content>}</block></expr></expr_stmt>
           <decl_stmt><decl><type><name>long</name></type> <name>errorsAfter</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
           <for>for <control>(<init><decl><type><name>JettySolrRunner</name></type> <name>runner</name> <range>: <expr><call><name><name>cluster</name><operator>.</operator><name>getJettySolrRunners</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
            <decl_stmt><decl><type><name>Long</name></type> <name>numRequests</name> <init>= <expr><call><name>getNumRequests</name><argument_list>(<argument><expr><call><name><name>runner</name><operator>.</operator><name>getBaseUrl</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"foo"</literal></expr></argument>, <argument><expr><literal type="string">"ADMIN"</literal></expr></argument>, <argument><expr><call><name><name>adminPathToMbean</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>adminPath</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>Long</name></type> <name>numRequests</name> <init>= <expr><call><name>getNumRequests</name><argument_list>(<argument><expr><call><name><name>runner</name><operator>.</operator><name>getBaseUrl</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"foo"</literal></expr></argument>, <argument><expr><literal type="string">"ADMIN"</literal></expr></argument>, <argument><expr><call><name><name>adminPathToMbean</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>adminPath</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>adminPath</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
             <expr_stmt><expr><name>errorsAfter</name> <operator>+=</operator> <name>numRequests</name></expr>;</expr_stmt>
             <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Found {} requests to {} on {}"</literal></expr></argument>, <argument><expr><name>numRequests</name></expr></argument>, <argument><expr><name>adminPath</name></expr></argument>, <argument><expr><call><name><name>runner</name><operator>.</operator><name>getBaseUrl</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           </block_content>}</block></for>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrTestCaseJ4</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrTestCaseJ4</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">0d4cedd4422</literal><operator>..</operator><literal type="number">54ab06d59ea</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrTestCaseJ4</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>SolrTestCaseJ4</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@</expr></expr_stmt> <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>annotation</name><operator>.</operator><name>Target</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>invoke</name><operator>.</operator><name>MethodHandles</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>reflect</name><operator>.</operator><name>Method</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>MalformedURLException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>ServerSocket</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URL</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>Charset</name></name>;</import>
 <import>import <name><name>java</name><operator>.</operator><name>nio</name><operator>.</operator><name>charset</name><operator>.</operator><name>StandardCharsets</name></name>;</import>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">802</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">803</literal></expr><operator>,</operator><expr><literal type="number">19</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> class <name>SolrTestCaseJ4</name> extends <name>LuceneTestCase</name> <block>{<block_content>
     <expr_stmt><expr><name>configString</name> <operator>=</operator> <name>schemaString</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
   </block_content>}</block></expr></expr_stmt>
 
  <comment type="block" format="javadoc">/**
   * Find next available local port.
   * @return available port number or -1 if none could be found
   * @throws Exception on IO errors
   */</comment>
  <function><type><specifier>protected</specifier> <specifier>static</specifier> <name>int</name></type> <name>getNextAvailablePort</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name> <block>{<block_content>
    <decl_stmt><decl><type><name>int</name></type> <name>port</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
    <try>try <init>(<decl><type><name>ServerSocket</name></type> <name>s</name> <init>= <expr><operator>new</operator> <call><name>ServerSocket</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
      <expr_stmt><expr><name>port</name> <operator>=</operator> <call><name><name>s</name><operator>.</operator><name>getLocalPort</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></try>
    <return>return <expr><name>port</name></expr>;</return>
  </block_content>}</block></expr></argument></throws></function>

 
   <comment type="block" format="javadoc">/** Validates an update XML String is successful
    */</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>AbstractFullDistribZkTestBase</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>AbstractFullDistribZkTestBase</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ade1c699af0</name><operator>..</operator><literal type="number">0a06d788c98</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>AbstractFullDistribZkTestBase</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>AbstractFullDistribZkTestBase</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">598</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">598</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> class <name>AbstractFullDistribZkTestBase</name> extends <name>AbstractDistribZkTes</name></expr></expr_stmt>
     <return>return <expr><name>proxy</name></expr>;</return>
   </block_content>}</block></for>
 
  <function><type><specifier>protected</specifier> <name>int</name></type> <name>getNextAvailablePort</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name> <block>{<block_content>
    <decl_stmt><decl><type><name>int</name></type> <name>port</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
    <try>try <init>(<decl><type><name>ServerSocket</name></type> <name>s</name> <init>= <expr><operator>new</operator> <call><name>ServerSocket</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
      <expr_stmt><expr><name>port</name> <operator>=</operator> <call><name><name>s</name><operator>.</operator><name>getLocalPort</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></try>
    <return>return <expr><name>port</name></expr>;</return>
  </block_content>}</block></expr></argument></throws></function>

   <function><type><specifier>private</specifier> <name>File</name></type> <name>getRelativeSolrHomePath</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>solrHome</name></decl></parameter>)</parameter_list> <block>{<block_content>
     <decl_stmt><decl><type><specifier>final</specifier> <name>Path</name></type> <name>solrHomePath</name> <init>= <expr><call><name><name>solrHome</name><operator>.</operator><name>toPath</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><specifier>final</specifier> <name>Path</name></type> <name>curDirPath</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsoluteFile</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toPath</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>MiniSolrCloudCluster</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>MiniSolrCloudCluster</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">15895d33b77</literal><operator>..</operator><literal type="number">06052819f6b</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>MiniSolrCloudCluster</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>MiniSolrCloudCluster</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">87</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">87</literal></expr><operator>,</operator><expr><literal type="number">11</literal> @@ <specifier>public</specifier> class <name>MiniSolrCloudCluster</name> <block>{<block_content>
       <expr_stmt><expr><literal type="string">"    &lt;int name=\"distribUpdateConnTimeout\"&gt;${distribUpdateConnTimeout:45000}&lt;/int&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"    &lt;int name=\"distribUpdateSoTimeout\"&gt;${distribUpdateSoTimeout:340000}&lt;/int&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"  &lt;/solrcloud&gt;\n"</literal> <operator>+</operator>
      <literal type="string">"  &lt;metrics&gt;\n"</literal> <operator>+</operator>
      <literal type="string">"    &lt;reporter name=\"default\" class=\"org.apache.solr.metrics.reporters.SolrJmxReporter\"&gt;\n"</literal> <operator>+</operator>
      <literal type="string">"      &lt;str name=\"rootName\"&gt;solr_${hostPort:8983}&lt;/str&gt;\n"</literal> <operator>+</operator>
      <literal type="string">"    &lt;/reporter&gt;\n"</literal> <operator>+</operator>
      <literal type="string">"  &lt;/metrics&gt;\n"</literal> <operator>+</operator>
       <literal type="string">"  \n"</literal> <operator>+</operator>
       <literal type="string">"&lt;/solr&gt;\n"</literal></expr>;</expr_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestHarness</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestHarness</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">2386681422d</literal><operator>..</operator><literal type="number">982f2b146da</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestHarness</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>util</name><operator>/</operator><name><name>TestHarness</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">193</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">193</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> class <name>TestHarness</name> extends <name>BaseTestHarness</name> <block>{<block_content>
                                        <expr_stmt><expr><literal type="number">30000</literal></expr><operator>,</operator> <expr><literal type="number">30000</literal></expr><operator>,</operator>
                                         <expr><name><name>UpdateShardHandlerConfig</name><operator>.</operator><name>DEFAULT_METRICNAMESTRATEGY</name></name></expr></expr_stmt></block_content></block></expr></expr_stmt></block_content></block></expr></expr_stmt></block_content></block></function></block_content></block></expr></expr_stmt></block_content></block></if></if_stmt></block_content></block></lambda></expr></expr_stmt></block_content></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <comment type="line">// universal default metric reporter</comment>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>attributes</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Object</name></argument>&gt;</argument_list></name></type> <name>attributes</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>attributes</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"name"</literal></expr></argument>, <argument><expr><literal type="string">"default"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>attributes</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"class"</literal></expr></argument>, <argument><expr><call><name><name>SolrJmxReporter</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getName</name></name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>PluginInfo</name></type> <name>defaultPlugin</name> <init>= <expr><operator>new</operator> <call><name>PluginInfo</name><argument_list>(<argument><expr><literal type="string">"reporter"</literal></expr></argument>, <argument><expr><name>attributes</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>PluginInfo</name></type> <name>defaultPlugin</name> <init>= <expr><operator>new</operator> <call><name>PluginInfo</name><argument_list>(<argument><expr><literal type="string">"reporter"</literal></expr></argument>, <argument><expr><name>attributes</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <return>return <expr><operator>new</operator> <call><name><name>NodeConfig</name><operator>.</operator><name>NodeConfigBuilder</name></name><argument_list>(<argument><expr><literal type="string">"testNode"</literal></expr></argument>, <argument><expr><name>loader</name></expr></argument>)</argument_list></call>
         <operator>.</operator><call><name>setUseSchemaCache</name><argument_list>(<argument><expr><call><name><name>Boolean</name><operator>.</operator><name>getBoolean</name></name><argument_list>(<argument><expr><literal type="string">"shareSchema"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>webapp</name><operator>/</operator><name>web</name><operator>/</operator><name>css</name><operator>/</operator><name>angular</name><operator>/</operator><name><name>plugins</name><operator>.</operator><name>css</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>webapp</name><operator>/</operator><name>web</name><operator>/</operator><name>css</name><operator>/</operator><name>angular</name><operator>/</operator><name><name>plugins</name><operator>.</operator><name>css</name></name>
<name>index</name> <literal type="number">0310e0e5d54</literal><operator>..</operator><literal type="number">03dc2eacf40</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>webapp</name><operator>/</operator><name>web</name><operator>/</operator><name>css</name><operator>/</operator><name>angular</name><operator>/</operator><name><name>plugins</name><operator>.</operator><name>css</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>webapp</name><operator>/</operator><name>web</name><operator>/</operator><name>css</name><operator>/</operator><name>angular</name><operator>/</operator><name><name>plugins</name><operator>.</operator><name>css</name></name>
@@ <operator>-</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">33</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
 #<name>content</name> <operator>#</operator><name>plugins</name> <operator>#</operator><name><name>navigation</name> <operator>.</operator><name>PLUGINCHANGES</name></name> <block>{ <expr><name>margin</name><operator>-</operator><name>top</name><operator>:</operator> <literal type="number">20px</literal></expr>; }</block></expr></return>
 #<expr_stmt><expr><name>content</name> <operator>#</operator><name>plugins</name> <operator>#</operator><name><name>navigation</name> <operator>.</operator><name>PLUGINCHANGES</name></name> <name>a</name> <block>{ <expr><name>background</name><operator>-</operator><name>image</name><operator>:</operator> <call><name>url</name><argument_list>( <argument><expr><operator>..</operator><operator>/</operator><operator>..</operator><operator>/</operator><name>img</name><operator>/</operator><name>ico</name><operator>/</operator><name><name>eye</name><operator>.</operator><name>png</name></name></expr></argument> )</argument_list></call></expr>; }</block></expr></expr_stmt>
 #<expr_stmt><expr><name>content</name> <operator>#</operator><name>plugins</name> <operator>#</operator><name><name>navigation</name> <operator>.</operator><name>RELOAD</name></name> <name>a</name> <block>{ <expr><name>background</name><operator>-</operator><name>image</name><operator>:</operator> <call><name>url</name><argument_list>( <argument><expr><operator>..</operator><operator>/</operator><operator>..</operator><operator>/</operator><name>img</name><operator>/</operator><name>ico</name><operator>/</operator><name>arrow</name><operator>-</operator><name><name>circle</name><operator>.</operator><name>png</name></name></expr></argument> )</argument_list></call></expr>; }</block></expr></expr_stmt>
#<expr_stmt><expr><name>content</name> <operator>#</operator><name>plugins</name> <operator>#</operator><name><name>navigation</name> <operator>.</operator><name>NOTE</name></name> <block>{ <expr><name>margin</name><operator>-</operator><name>top</name><operator>:</operator> <literal type="number">20px</literal></expr>; }</block></expr></expr_stmt>
#<expr_stmt><expr><name>content</name> <operator>#</operator><name>plugins</name> <operator>#</operator><name><name>navigation</name> <operator>.</operator><name>NOTE</name></name> <name>p</name> <block>{ <expr><name>color</name><operator>:</operator> <operator>#</operator><name>c0c0c0</name></expr>; <name>font</name><operator>-</operator><name>style</name><operator>:</operator> <name>italic</name></block></expr>;</expr_stmt> </block_content>}</block></function>
 
 
 #<expr_stmt><expr><name>content</name> <operator>#</operator><name>plugins</name> <operator>#</operator><name>navigation</name> <name>a</name>
@@ <operator>-</operator><literal type="number">125</literal></expr><operator>,</operator><expr><literal type="number">14</literal> <operator>+</operator><literal type="number">127</literal></expr><operator>,</operator><expr><literal type="number">14</literal> @@ <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
 #<name>content</name> <operator>#</operator><name>plugins</name> <operator>#</operator><name><name>frame</name> <operator>.</operator><name>entry</name> <operator>.</operator><name>stats</name></name> <name>span</name>
 <block>{
   <expr><name>float</name><operator>:</operator> <name>left</name></expr>;
  <name>width</name><operator>:</operator> <literal type="number">11</literal><operator>%</operator></block></expr>;</expr_stmt>
  <label><name>width</name>:</label> <expr_stmt><expr><literal type="number">9</literal><operator>%</operator></expr>;</expr_stmt>
 </block_content>}</block></try>
 
 #<expr_stmt><expr><name>content</name> <operator>#</operator><name>plugins</name> <operator>#</operator><name><name>frame</name> <operator>.</operator><name>entry</name></name> <name>dd</name></expr><operator>,</operator>
 #<expr><name>content</name> <operator>#</operator><name>plugins</name> <operator>#</operator><name><name>frame</name> <operator>.</operator><name>entry</name> <operator>.</operator><name>stats</name></name> <name>ul</name>
 <block>{
   <expr><name>float</name><operator>:</operator> <name>right</name></expr>;
  <name>width</name><operator>:</operator> <literal type="number">88</literal><operator>%</operator></block></expr>;</expr_stmt>
  <label><name>width</name>:</label> <expr_stmt><expr><literal type="number">90</literal><operator>%</operator></expr>;</expr_stmt>
 }</block></class>
 
 #<expr_stmt><expr><name>content</name> <operator>#</operator><name>plugins</name> <operator>#</operator><name><name>frame</name> <operator>.</operator><name>entry</name> <operator>.</operator><name>stats</name></name> <name>ul</name>
@@ <operator>-</operator><literal type="number">144</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">146</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
 
 #<name>content</name> <operator>#</operator><name>plugins</name> <operator>#</operator><name><name>frame</name> <operator>.</operator><name>entry</name> <operator>.</operator><name>stats</name></name> <name>dt</name>
 <block>{
  <expr><name>width</name><operator>:</operator> <literal type="number">27</literal><operator>%</operator></expr>;
  <name>width</name><operator>:</operator> <literal type="number">40</literal><operator>%</operator></block></expr>;</expr_stmt>
 </block_content>}</block></function>
 
 #<expr_stmt><expr><name>content</name> <operator>#</operator><name>plugins</name> <operator>#</operator><name><name>frame</name> <operator>.</operator><name>entry</name> <operator>.</operator><name>stats</name></name> <name>dd</name>
 <block>{
  <expr><name>width</name><operator>:</operator> <literal type="number">72</literal><operator>%</operator></expr>;
  <name>width</name><operator>:</operator> <literal type="number">59</literal><operator>%</operator></block></expr>;</expr_stmt>
 </block_content>}</block></function>
 
 #<expr_stmt><expr><name>content</name> <operator>#</operator><name>plugins</name> <operator>#</operator><name><name>frame</name> <operator>.</operator><name>entry</name><operator>.</operator><name>expanded</name></name> <name><name>a</name><operator>.</operator><name>linker</name></name> <block>{
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>webapp</name><operator>/</operator><name>web</name><operator>/</operator><name>partials</name><operator>/</operator><name><name>plugins</name><operator>.</operator><name>html</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>webapp</name><operator>/</operator><name>web</name><operator>/</operator><name>partials</name><operator>/</operator><name><name>plugins</name><operator>.</operator><name>html</name></name>
<name>index</name> <name>d95fc9b32dd</name><operator>..</operator><name>bd122a75495</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>webapp</name><operator>/</operator><name>web</name><operator>/</operator><name>partials</name><operator>/</operator><name><name>plugins</name><operator>.</operator><name>html</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>webapp</name><operator>/</operator><name>web</name><operator>/</operator><name>partials</name><operator>/</operator><name><name>plugins</name><operator>.</operator><name>html</name></name>
@@ <operator>-</operator><literal type="number">55</literal></expr>,<expr><literal type="number">8</literal> <operator>+</operator><literal type="number">55</literal></expr>,<expr><literal type="number">8</literal> @@ <name>limitations</name> <name>under</name> <name>the</name> <name><name>License</name><operator>.</operator></name>
         &lt;<operator>/</operator><name>li</name><operator>&gt;</operator>
         <operator>&lt;</operator><name>li</name> <name>class</name><operator>=</operator><literal type="string">"PLUGINCHANGES"</literal><operator>&gt;</operator><operator>&lt;</operator><name>a</name> <name>ng</name><operator>-</operator><name>click</name><operator>=</operator><literal type="string">"startRecording()"</literal><operator>&gt;</operator><name>Watch</name> <name><name>Changes</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>a</name></argument>&gt;</argument_list></name><operator>&lt;</operator><operator>/</operator><name>li</name><operator>&gt;</operator>
         <operator>&lt;</operator><name>li</name> <name>class</name><operator>=</operator><literal type="string">"RELOAD"</literal><operator>&gt;</operator><operator>&lt;</operator><name>a</name> <name>ng</name><operator>-</operator><name>click</name><operator>=</operator><literal type="string">"refresh()"</literal><operator>&gt;</operator><name>Refresh</name> <name><name>Values</name><argument_list type="generic">&lt;<argument><operator>/</operator><name>a</name></argument>&gt;</argument_list></name><operator>&lt;</operator><operator>/</operator><name>li</name><operator>&gt;</operator>
        <operator>&lt;</operator><name>li</name> <name>class</name><operator>=</operator><literal type="string">"NOTE"</literal><operator>&gt;</operator><operator>&lt;</operator><name>p</name><operator>&gt;</operator><name>NOTE</name><operator>:</operator> <name>Only</name> <name>selected</name> <name>metrics</name> <name>are</name> <name>shown</name> <name><name>here</name><operator>.</operator> <name>Full</name></name> <name>metrics</name> <name>can</name> <name>be</name> <name>accessed</name> <name>via</name> <operator>/</operator><name>admin</name><operator>/</operator><name>metrics</name> <name><name>handler</name><operator>.</operator></name>&lt;<operator>/</operator><name>p</name><operator>&gt;</operator><operator>&lt;</operator><operator>/</operator><name>li</name><operator>&gt;</operator>
     <operator>&lt;</operator><operator>/</operator><name>ul</name><operator>&gt;</operator>
  
   <operator>&lt;</operator><operator>/</operator><name>div</name><operator>&gt;</operator>
 
   <operator>&lt;</operator><name>div</name> <name>id</name><operator>=</operator><literal type="string">"recording"</literal> <name>ng</name><operator>-</operator><name>show</name><operator>=</operator><literal type="string">"isRecording"</literal><operator>&gt;</operator>
<operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></block></expr></expr_stmt></block_content></block></function></block></class></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></function></block></interface></block></interface></block></class></expr></init></decl></decl_stmt></block></class></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></block_content></block></function></block></class></block_content></block></try></block_content></block></for></block_content></block></try></block_content></block></for></block_content></block></function></block_content></block></synchronized></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></function></block_content></block></constructor></block></interface></block></class></block_content></block></function></block_content></block></class_decl></block_content></block></function></block_content></block></function></block></class></block></class></block_content></block></class_decl></block></class></block_content></block></else></if_stmt></block></class></block></class></block_content></block></function>

</unit>
