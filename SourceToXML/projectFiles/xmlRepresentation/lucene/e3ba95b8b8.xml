<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/lucene/e3ba95b8b8.java"><expr_stmt><expr><name>From</name> <name>e3ba95b8b84e0dd6161480050dc8dd9a010dbde4</name> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Shalin</name> <name>Shekhar</name> <name><name>Mangar</name> <argument_list type="generic">&lt;<argument><name>shalin</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Thu</name></expr><operator>,</operator> <expr><literal type="number">20</literal> <name>Nov</name> <literal type="number">2008</literal> <literal type="number">07</literal><operator>:</operator><literal type="number">19</literal><operator>:</operator><literal type="number">41</literal> <operator>+</operator><literal type="number">0000</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>SOLR</name><operator>-</operator><literal type="number">873</literal> <operator>--</operator> <name>Fix</name></expr></expr_stmt> <case>case<expr><operator>-</operator><name>sensitive</name> <name>field</name> <name>names</name> <name>and</name> <name>columns</name>

<name>git</name><operator>-</operator><name>svn</name><operator>-</operator><name>id</name></expr>:</case> <label><name>https</name>:</label><comment type="line">//svn.apache.org/repos/asf/lucene/solr/trunk@719187 13f79535-47bb-0310-9956-ffa450edef68</comment>
<expr_stmt><expr><operator>--</operator>
 <name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>         <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>DataConfig</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">8</literal> <operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>DataImporter</name><operator>.</operator><name>java</name></name> <operator>|</operator> <literal type="number">42</literal> <operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>DocBuilder</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestDocBuilder</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">9</literal> <operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestDocBuilder2</name><operator>.</operator><name>java</name></name>   <operator>|</operator> <literal type="number">21</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator>
 <literal type="number">6</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">36</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">50</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name> <name>b</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<name>index</name> <literal type="number">590ab447299</literal><operator>..</operator><literal type="number">9e4cea22a02</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
@@ <operator>-</operator><literal type="number">58</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">58</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <name>Bug</name> <name>Fixes</name>
 
 <literal type="number">7.</literal> <name>SOLR</name><operator>-</operator><literal type="number">864</literal><operator>:</operator>  <name>DataImportHandler</name> <name>does</name> <name>not</name></expr></expr_stmt> <catch>catch <decl_stmt><decl><type><name>and</name> <name>log</name></type> <name>Errors</name> <argument_list>(<argument><expr><name>shalin</name></expr></argument>)</argument_list>
 
8. <name>SOLR</name>-873<range>:  <expr><name>Fix</name></expr></range></decl></decl_stmt></catch> <case>case<expr><operator>-</operator><name>sensitive</name> <name>field</name> <name>names</name> <name>and</name> <call><name>columns</name> <argument_list>(<argument><expr><name>Jon</name> <name>Baer</name></expr></argument>, <argument><expr><name>shalin</name></expr></argument>)</argument_list></call>

 <name>Documentation</name>
 <operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator>
 
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>DataConfig</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>DataConfig</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">96227a45fea</literal><operator>..</operator><name>c8a92fe08c3</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>DataConfig</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>DataConfig</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">191</literal></expr><operator>,</operator><expr_stmt><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">191</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>DataConfig</name> <block>{
 
     <expr><specifier>public</specifier> <name>boolean</name> <name>multiValued</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;
 
    <expr><specifier>public</specifier> <name>String</name> <name>nameOrColName</name></expr>;

     <expr><specifier>public</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name> <name>allAttributes</name> <operator>=</operator> <operator>new</operator> <class><super><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
       <function><type><specifier>public</specifier> <name>String</name></type> <name>put</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>key</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>value</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <if_stmt><if>if <condition>(<expr><call><name><name>super</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">211</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">209</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>DataConfig</name> <block>{
       <expr><call><name><name>allAttributes</name><operator>.</operator><name>putAll</name></name><argument_list>(<argument><expr><call><name>getAllAttributes</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</block></expr></expr_stmt></block_content></block></if></if_stmt></block_content></block></function></block></class></expr>
     }</block>
 
    <specifier>public</specifier> <call><name>Field</name><argument_list>(<argument><expr><name>String</name> <name>name</name></expr></argument>, <argument><expr><name>boolean</name> <name>b</name></expr></argument>)</argument_list></call> <block>{
      <expr><name>name</name> <operator>=</operator> <name>nameOrColName</name> <operator>=</operator> <name>column</name> <operator>=</operator> <name>name</name></expr>;
      <expr><name>multiValued</name> <operator>=</operator> <name>b</name></expr>;

    }</block>

     <specifier>public</specifier> <name>String</name> <call><name>getName</name><argument_list>()</argument_list></call> <block>{
       <return>return <expr><name>name</name> <operator>==</operator> <literal type="null">null</literal> <operator>?</operator> <name>column</name></expr></return></block></expr></expr_stmt> :</case> <expr_stmt><expr><name>name</name></expr>;</expr_stmt>
     }
diff <expr_stmt><expr><operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>DataImporter</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>DataImporter</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8a361ebe430</literal><operator>..</operator><literal type="number">4b0b2211203</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>DataImporter</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>DataImporter</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">126</literal></expr><operator>,</operator><expr><literal type="number">24</literal> <operator>+</operator><literal type="number">126</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>DataImporter</name> <block>{
     }</block></expr></expr_stmt>
     <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>DataConfig</name><operator>.</operator><name>Field</name></name></argument>&gt;</argument_list></name></name></type> <name>entry</name> <range>: <expr><call><name><name>fields</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
       <decl_stmt><decl><type><name><name>DataConfig</name><operator>.</operator><name>Field</name></name></type> <name>fld</name> <init>= <expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>FieldType</name></type> <name>fieldType</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>

      <try>try <block>{<block_content>
        <expr_stmt><expr><name>fieldType</name> <operator>=</operator> <call><name><name>schema</name><operator>.</operator><name>getDynamicFieldType</name></name><argument_list>(<argument><expr><name><name>fld</name><operator>.</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>RuntimeException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <comment type="line">// Ignore because it may not be a dynamic field</comment>
      </block_content>}</block></catch></try>

      <if_stmt><if>if <condition>(<expr><name><name>fld</name><operator>.</operator><name>name</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name><name>schema</name><operator>.</operator><name>getFields</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>fld</name><operator>.</operator><name>name</name></name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <name>fieldType</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>errors</name>
                  <operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"The field :"</literal>
                          <operator>+</operator> <name><name>fld</name><operator>.</operator><name>name</name></name>
                          <operator>+</operator> <literal type="string">" present in DataConfig does not have a counterpart in Solr Schema"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>SchemaField</name></type> <name>field</name> <init>= <expr><call><name><name>schema</name><operator>.</operator><name>getFieldOrNull</name></name><argument_list>(<argument><expr><call><name><name>fld</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>field</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>field</name> <operator>=</operator> <call><name><name>config</name><operator>.</operator><name>lowerNameVsSchemaField</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>fld</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toLowerCase</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><name>field</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition>  <block>{<block_content>
          <expr_stmt><expr><call><name><name>errors</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="string">"The field :"</literal> <operator>+</operator> <call><name><name>fld</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">" present in DataConfig does not have a counterpart in Solr Schema"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
      </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name><name>schema</name><operator>.</operator><name>getFields</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name><name>fld</name><operator>.</operator><name>column</name></name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="null">null</literal>
              <operator>&amp;&amp;</operator> <name>fieldType</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Column : "</literal> <operator>+</operator> <name><name>fld</name><operator>.</operator><name>column</name></name> <operator>+</operator> <literal type="string">" is not a schema field"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block></if></if_stmt>
     </block_content>}</block></if></if_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">201</literal></expr><operator>,</operator><expr><literal type="number">30</literal> <operator>+</operator><literal type="number">189</literal></expr><operator>,</operator><expr><literal type="number">22</literal> @@ <specifier>public</specifier> <name>class</name> <name>DataImporter</name> <block>{
 
     <if_stmt><if>if <condition>(<expr><name><name>e</name><operator>.</operator><name>fields</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
       <for>for <control>(<init><decl><type><name><name>DataConfig</name><operator>.</operator><name>Field</name></name></type> <name>f</name> <range>: <expr><name><name>e</name><operator>.</operator><name>fields</name></name></expr></range></decl></init>)</control> <block>{<block_content>
        <expr_stmt><expr><name><name>f</name><operator>.</operator><name>nameOrColName</name></name> <operator>=</operator> <call><name><name>f</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         <if_stmt><if>if <condition>(<expr><name>schema</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
           <decl_stmt><decl><type><name>SchemaField</name></type> <name>schemaField</name> <init>= <expr><call><name><name>schema</name><operator>.</operator><name>getFieldOrNull</name></name><argument_list>(<argument><expr><call><name><name>f</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <if_stmt><if>if <condition>(<expr><name>schemaField</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition>  <block>{<block_content>
            <expr_stmt><expr><name>schemaField</name> <operator>=</operator> <call><name><name>config</name><operator>.</operator><name>lowerNameVsSchemaField</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>f</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toLowerCase</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt><if>if<condition>(<expr><name>schemaField</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>f</name><operator>.</operator><name>name</name></name> <operator>=</operator> <call><name><name>schemaField</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
          </block_content>}</block></if></if_stmt>
           <if_stmt><if>if <condition>(<expr><name>schemaField</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
             <expr_stmt><expr><name><name>f</name><operator>.</operator><name>multiValued</name></name> <operator>=</operator> <call><name><name>schemaField</name><operator>.</operator><name>multiValued</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><call><name><name>f</name><operator>.</operator><name>allAttributes</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>MULTI_VALUED</name></expr></argument>, <argument><expr><call><name><name>Boolean</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><call><name><name>schemaField</name>
                     <operator>.</operator><name>multiValued</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><call><name><name>f</name><operator>.</operator><name>allAttributes</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>TYPE</name></expr></argument>, <argument><expr><call><name><name>schemaField</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTypeName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>f</name><operator>.</operator><name>allAttributes</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"indexed"</literal></expr></argument>, <argument><expr><call><name><name>Boolean</name>
                    <operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><call><name><name>schemaField</name><operator>.</operator><name>indexed</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>f</name><operator>.</operator><name>allAttributes</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"indexed"</literal></expr></argument>, <argument><expr><call><name><name>Boolean</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><call><name><name>schemaField</name><operator>.</operator><name>indexed</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><call><name><name>f</name><operator>.</operator><name>allAttributes</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"stored"</literal></expr></argument>, <argument><expr><call><name><name>Boolean</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><call><name><name>schemaField</name><operator>.</operator><name>stored</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><call><name><name>f</name><operator>.</operator><name>allAttributes</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><literal type="string">"defaultValue"</literal></expr></argument>, <argument><expr><call><name><name>schemaField</name><operator>.</operator><name>getDefaultValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           </block_content>}</block></if> <else>else <block>{<block_content>

            <try>try <block>{<block_content>
              <expr_stmt><expr><call><name><name>f</name><operator>.</operator><name>allAttributes</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>TYPE</name></expr></argument>, <argument><expr><call><name><name>schema</name><operator>.</operator><name>getDynamicFieldType</name></name><argument_list>(<argument><expr><call><name><name>f</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
                      <operator>.</operator><call><name>getTypeName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
              <expr_stmt><expr><call><name><name>f</name><operator>.</operator><name>allAttributes</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>MULTI_VALUED</name></expr></argument>, <argument><expr><literal type="string">"true"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
              <expr_stmt><expr><name><name>f</name><operator>.</operator><name>multiValued</name></name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
            </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>RuntimeException</name></type> <name>e2</name></decl></parameter>)</parameter_list> <block>{<block_content>
              <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Field in data-config.xml - "</literal> <operator>+</operator> <call><name><name>f</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call>
                      <operator>+</operator> <literal type="string">" not found in schema.xml"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
              <expr_stmt><expr><name><name>f</name><operator>.</operator><name>toWrite</name></name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
            </block_content>}</block></catch></try>
            <expr_stmt><expr><name><name>f</name><operator>.</operator><name>toWrite</name></name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
           </block_content>}</block></else></if_stmt>
         </block_content>}</block></if></if_stmt>
         <expr_stmt><expr><call><name><name>fields</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><call><name><name>f</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>DocBuilder</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>DocBuilder</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">68822d6e12b</literal><operator>..</operator><name>c9d46fd071e</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>DocBuilder</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>main</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>DocBuilder</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">379</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">379</literal></expr><operator>,</operator><expr><literal type="number">12</literal> @@ <specifier>public</specifier> <name>class</name> <name>DocBuilder</name> <block>{
           <expr><name>sf</name> <operator>=</operator> <call><name><name>dataImporter</name><operator>.</operator><name>getConfig</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name><name>lowerNameVsSchemaField</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>key</name><operator>.</operator><name>toLowerCase</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
         }</block></expr></expr_stmt>
         <if_stmt><if>if <condition>(<expr><name>sf</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name>addFieldToDoc</name><argument_list>(<argument><expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>key</name></expr></argument>, <argument><expr><literal type="number">1.0f</literal></expr></argument>, <argument><expr><call><name><name>sf</name><operator>.</operator><name>multiValued</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name>addFieldToDoc</name><argument_list>(<argument><expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>sf</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">1.0f</literal></expr></argument>, <argument><expr><call><name><name>sf</name><operator>.</operator><name>multiValued</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
         <comment type="line">//else do nothing. if we add it it may fail</comment>
       </block_content>}</block></for> <if_stmt><else>else <block>{<block_content>
         <if_stmt><if>if <condition>(<expr><name>field</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <name><name>field</name><operator>.</operator><name>toWrite</name></name></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name>addFieldToDoc</name><argument_list>(<argument><expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>key</name></expr></argument>, <argument><expr><name><name>field</name><operator>.</operator><name>boost</name></name></expr></argument>, <argument><expr><name><name>field</name><operator>.</operator><name>multiValued</name></name></expr></argument>, <argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name>addFieldToDoc</name><argument_list>(<argument><expr><call><name><name>entry</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>field</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>field</name><operator>.</operator><name>boost</name></name></expr></argument>, <argument><expr><name><name>field</name><operator>.</operator><name>multiValued</name></name></expr></argument>, <argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
       </block_content>}</block></else></if_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestDocBuilder</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestDocBuilder</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">890dfe3e7eb</literal><operator>..</operator><literal type="number">251970821a3</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestDocBuilder</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestDocBuilder</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">49</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">49</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestDocBuilder</name> <block>{
       <expr><call><name><name>di</name><operator>.</operator><name>loadDataConfig</name></name><argument_list>(<argument><expr><name>dc_singleEntity</name></expr></argument>)</argument_list></call></expr>;
       <name>DataConfig</name> <name>cfg</name> <operator>=</operator> <call><name><name>di</name><operator>.</operator><name>getConfig</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
       <decl_stmt><decl><type><name><name>DataConfig</name><operator>.</operator><name>Entity</name></name></type> <name>ent</name> <init>= <expr><call><name><name>cfg</name><operator>.</operator><name>documents</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name><name>entities</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <for>for <control>(<init><decl><type><name><name>DataConfig</name><operator>.</operator><name>Field</name></name></type> <name>field</name> <range>: <expr><name><name>ent</name><operator>.</operator><name>fields</name></name></expr></range></decl></init>)</control> <block>{<block_content>
        <expr_stmt><expr><name><name>field</name><operator>.</operator><name>nameOrColName</name></name> <operator>=</operator> <name><name>field</name><operator>.</operator><name>name</name></name> <operator>=</operator> <name><name>field</name><operator>.</operator><name>column</name></name></expr>;</expr_stmt>
      </block_content>}</block></for>
       <expr_stmt><expr><call><name><name>MockDataSource</name><operator>.</operator><name>setIterator</name></name><argument_list>(<argument><expr><literal type="string">"select * from x"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>ArrayList</name><argument_list>()</argument_list></call><operator>.</operator><call><name>iterator</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><name><name>ent</name><operator>.</operator><name>dataSrc</name></name> <operator>=</operator> <operator>new</operator> <call><name>MockDataSource</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><name><name>ent</name><operator>.</operator><name>isDocRoot</name></name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">80</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">77</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestDocBuilder</name> <block>{
       <expr><call><name><name>di</name><operator>.</operator><name>loadDataConfig</name></name><argument_list>(<argument><expr><name>dc_singleEntity</name></expr></argument>)</argument_list></call></expr>;
       <name>DataConfig</name> <name>cfg</name> <operator>=</operator> <call><name><name>di</name><operator>.</operator><name>getConfig</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
       <decl_stmt><decl><type><name><name>DataConfig</name><operator>.</operator><name>Entity</name></name></type> <name>ent</name> <init>= <expr><call><name><name>cfg</name><operator>.</operator><name>documents</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name><name>entities</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <for>for <control>(<init><decl><type><name><name>DataConfig</name><operator>.</operator><name>Field</name></name></type> <name>field</name> <range>: <expr><name><name>ent</name><operator>.</operator><name>fields</name></name></expr></range></decl></init>)</control> <block>{<block_content>
        <expr_stmt><expr><name><name>field</name><operator>.</operator><name>nameOrColName</name></name> <operator>=</operator> <name><name>field</name><operator>.</operator><name>name</name></name> <operator>=</operator> <name><name>field</name><operator>.</operator><name>column</name></name></expr>;</expr_stmt>
      </block_content>}</block></for>
       <decl_stmt><decl><type><name>List</name></type> <name>l</name> <init>= <expr><operator>new</operator> <call><name>ArrayList</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>l</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name>createMap</name><argument_list>(<argument><expr><literal type="string">"id"</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"desc"</literal></expr></argument>, <argument><expr><literal type="string">"one"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>MockDataSource</name><operator>.</operator><name>setIterator</name></name><argument_list>(<argument><expr><literal type="string">"select * from x"</literal></expr></argument>, <argument><expr><call><name><name>l</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">125</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">119</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestDocBuilder</name> <block>{
       <expr><name><name>ent</name><operator>.</operator><name>isDocRoot</name></name> <operator>=</operator> <literal type="boolean">true</literal></expr>;
       <name><name>DataImporter</name><operator>.</operator><name>RequestParams</name></name> <name>rp</name> <operator>=</operator> <operator>new</operator> <call><name><name>DataImporter</name><operator>.</operator><name>RequestParams</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
       <expr_stmt><expr><name><name>rp</name><operator>.</operator><name>command</name></name> <operator>=</operator> <literal type="string">"full-import"</literal></expr>;</expr_stmt>
      <for>for <control>(<init><decl><type><name><name>DataConfig</name><operator>.</operator><name>Field</name></name></type> <name>field</name> <range>: <expr><name><name>ent</name><operator>.</operator><name>fields</name></name></expr></range></decl></init>)</control> <block>{<block_content>
        <expr_stmt><expr><name><name>field</name><operator>.</operator><name>nameOrColName</name></name> <operator>=</operator> <name><name>field</name><operator>.</operator><name>name</name></name> <operator>=</operator> <name><name>field</name><operator>.</operator><name>column</name></name></expr>;</expr_stmt>
      </block_content>}</block></for>
       <decl_stmt><decl><type><name>List</name></type> <name>l</name> <init>= <expr><operator>new</operator> <call><name>ArrayList</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name><name>l</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name>createMap</name><argument_list>(<argument><expr><literal type="string">"id"</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"desc"</literal></expr></argument>, <argument><expr><literal type="string">"one"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>l</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name>createMap</name><argument_list>(<argument><expr><literal type="string">"id"</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="string">"desc"</literal></expr></argument>, <argument><expr><literal type="string">"two"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestDocBuilder2</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestDocBuilder2</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">910d608be96</literal><operator>..</operator><literal type="number">2d2677f3f5e</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestDocBuilder2</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>contrib</name><operator>/</operator><name>dataimporthandler</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>dataimport</name><operator>/</operator><name><name>TestDocBuilder2</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">68</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">68</literal></expr><operator>,</operator><expr><literal type="number">18</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestDocBuilder2</name> extends <name>AbstractDataImportHandlerTest</name> <block>{
     <expr><call><name>assertQ</name><argument_list>(<argument><expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"id:1"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"//*[@numFound='1']"</literal></expr></argument>)</argument_list></call></expr>;
   }</block></expr></expr_stmt>
 
  <function><annotation>@<name>Test</name></annotation>
  <annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unchecked"</literal></expr></argument>)</argument_list></annotation>
  <type><specifier>public</specifier> <name>void</name></type> <name>testSingleEntity_CaseInsensitive</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>List</name></type> <name>rows</name> <init>= <expr><operator>new</operator> <call><name>ArrayList</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>rows</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name>createMap</name><argument_list>(<argument><expr><literal type="string">"id"</literal></expr></argument>, <argument><expr><literal type="string">"1"</literal></expr></argument>, <argument><expr><literal type="string">"desC"</literal></expr></argument>, <argument><expr><literal type="string">"one"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>MockDataSource</name><operator>.</operator><name>setIterator</name></name><argument_list>(<argument><expr><literal type="string">"select * from x"</literal></expr></argument>, <argument><expr><call><name><name>rows</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>runFullImport</name></name><argument_list>(<argument><expr><name>dataConfigWithCaseInsensitiveFields</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>assertQ</name><argument_list>(<argument><expr><call><name>req</name><argument_list>(<argument><expr><literal type="string">"id:1"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"//*[@numFound='1']"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>

   <function><annotation>@<name>Test</name></annotation>
   <annotation>@<name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unchecked"</literal></expr></argument>)</argument_list></annotation>
   <type><specifier>public</specifier> <name>void</name></type> <name>testDynamicFields</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">144</literal></expr><operator>,</operator><expr><literal type="number">4</literal> <operator>+</operator><literal type="number">156</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestDocBuilder2</name> extends <name>AbstractDataImportHandlerTest</name> <block>{
           <expr><literal type="string">"        &lt;/entity&gt;\n"</literal> <operator>+</operator>
           <literal type="string">"    &lt;/document&gt;\n"</literal> <operator>+</operator>
           <literal type="string">"&lt;/dataConfig&gt;"</literal></expr>;

  <specifier>private</specifier> <name>final</name> <name>String</name> <name>dataConfigWithCaseInsensitiveFields</name> <operator>=</operator> <literal type="string">"&lt;dataConfig&gt;\n"</literal> <operator>+</operator>
          <literal type="string">"    &lt;document&gt;\n"</literal> <operator>+</operator>
          <literal type="string">"        &lt;entity name=\"books\" query=\"select * from x\"&gt;\n"</literal> <operator>+</operator>
          <literal type="string">"            &lt;field column=\"ID\" /&gt;\n"</literal> <operator>+</operator>
          <literal type="string">"            &lt;field column=\"Desc\" /&gt;\n"</literal> <operator>+</operator>
          <literal type="string">"        &lt;/entity&gt;\n"</literal> <operator>+</operator>
          <literal type="string">"    &lt;/document&gt;\n"</literal> <operator>+</operator>
          <literal type="string">"&lt;/dataConfig&gt;"</literal></block></expr>;</expr_stmt>
 </block_content>}</block></function>
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></if></if_stmt></block></expr></expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

</unit>
