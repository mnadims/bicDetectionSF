<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="E:/01Courses@USASK/CMPT898-HumanDrivenSoftwareEngineeringForScientificResearch/ProjectProgress/data_files/final_dataset/gen_patch_codes/filtered/lucene/093a8ce57c.java"><expr_stmt><expr><name>From</name> <literal type="number">093a8ce57c06f1bf2f71ddde52dcc7b40cbd6197</literal> <name>Mon</name> <name>Sep</name> <literal type="number">17</literal> <literal type="number">00</literal><operator>:</operator><literal type="number">00</literal><operator>:</operator><literal type="number">00</literal> <literal type="number">2001</literal>
<name>From</name><operator>:</operator> <name>Shalin</name> <name>Shekhar</name> <name><name>Mangar</name> <argument_list type="generic">&lt;<argument><name>shalin</name><annotation>@<name><name>apache</name><operator>.</operator><name>org</name></name></annotation></argument>&gt;</argument_list></name>
<name>Date</name><operator>:</operator> <name>Mon</name></expr><operator>,</operator> <expr><literal type="number">7</literal> <name>Mar</name> <literal type="number">2016</literal> <literal type="number">15</literal><operator>:</operator><literal type="number">03</literal><operator>:</operator><literal type="number">03</literal> <operator>+</operator><literal type="number">0530</literal>
<name>Subject</name><operator>:</operator> <index>[<expr><name>PATCH</name></expr>]</index> <name>SOLR</name><operator>-</operator><literal type="number">8745</literal><operator>:</operator> <name>Deprecate</name> <name>costly</name>
 <call><name><name>ZkStateReader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr><operator>,</operator> <expr><name>replace</name> <name>with</name> <name>a</name> <name>narrow</name>
 <call><name>forceUpdateCollection</name><argument_list>(<argument><expr><name>collection</name></expr></argument>)</argument_list></call>

<operator>--</operator>
 <name>solr</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>                              <operator>|</operator>  <literal type="number">3</literal> <operator>++</operator>
 <operator>...</operator><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>MorphlineGoLiveMiniMRTest</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">1</literal> <operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ElectionContext</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>cloud</name><operator>/</operator><name><name>LeaderInitiatedRecoveryThread</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">6</literal> <operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>OverseerCollectionMessageHandler</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">1</literal> <operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkController</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>CdcrRequestHandler</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>ClusterStatus</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">3</literal> <operator>--</operator>
 <operator>...</operator><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CollectionsHandler</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">2</literal> <operator>-</operator>
 <operator>...</operator><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CoreAdminOperation</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">6</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>RebalanceLeaders</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>BaseCdcrDistributedZkTest</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">1</literal> <operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>BasicDistributedZkTest</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ChaosMonkeyNothingIsSafeTest</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ChaosMonkeyShardSplitTest</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CollectionReloadTest</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CollectionTooManyReplicasTest</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">6</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name><name>CollectionsAPIDistributedZkTest</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">9</literal> <operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CustomCollectionTest</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">1</literal> <operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>DeleteShardTest</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">2</literal> <operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ForceLeaderTest</name><operator>.</operator><name>java</name></name>    <operator>|</operator> <literal type="number">11</literal> <operator>++</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>HttpPartitionTest</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">9</literal> <operator>+</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>LeaderFailoverAfterPartitionTest</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">2</literal> <operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>LeaderInitiatedRecoveryOnCommitTest</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>MigrateRouteKeyTest</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>OverseerTest</name><operator>.</operator><name>java</name></name>   <operator>|</operator> <literal type="number">12</literal> <operator>++</operator><operator>--</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ReplicaPropertiesBase</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">3</literal> <operator>--</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ShardSplitTest</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">1</literal> <operator>-</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>SyncSliceTest</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">1</literal> <operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestCloudDeleteByQuery</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">1</literal> <operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestCollectionAPI</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name><name>TestLeaderInitiatedRecoveryThread</name><operator>.</operator><name>java</name></name>    <operator>|</operator>  <literal type="number">1</literal> <operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestMiniSolrCloudCluster</name><operator>.</operator><name>java</name></name>  <operator>|</operator> <literal type="number">47</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>+</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestMiniSolrCloudClusterBase</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestRandomRequestDistribution</name><operator>.</operator><name>java</name></name>  <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestRebalanceLeaders</name><operator>.</operator><name>java</name></name>      <operator>|</operator>  <literal type="number">1</literal> <operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestReplicaProperties</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">1</literal> <operator>-</operator>
 <operator>...</operator><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestSolrCloudWithKerberosAlt</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">1</literal> <operator>+</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>UnloadDistributedZkTest</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkControllerTest</name><operator>.</operator><name>java</name></name>   <operator>|</operator>  <literal type="number">2</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>StressHdfsTest</name><operator>.</operator><name>java</name></name>       <operator>|</operator>  <literal type="number">3</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>cloud</name><operator>/</operator><name>overseer</name><operator>/</operator><name><name>ZkStateReaderTest</name><operator>.</operator><name>java</name></name>     <operator>|</operator>  <literal type="number">6</literal> <operator>+</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>cloud</name><operator>/</operator><name>overseer</name><operator>/</operator><name><name>ZkStateWriterTest</name><operator>.</operator><name>java</name></name>     <operator>|</operator> <literal type="number">10</literal> <operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>common</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkStateReader</name><operator>.</operator><name>java</name></name>      <operator>|</operator> <literal type="number">46</literal> <operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator><operator>++</operator>
 <operator>...</operator><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>AbstractDistribZkTestBase</name><operator>.</operator><name>java</name></name> <operator>|</operator>  <literal type="number">4</literal> <operator>+</operator><operator>-</operator>
 <operator>...</operator><operator>/</operator><name>cloud</name><operator>/</operator><name><name>AbstractFullDistribZkTestBase</name><operator>.</operator><name>java</name></name>  <operator>|</operator> <literal type="number">10</literal> <operator>++</operator><operator>--</operator>
 <operator>...</operator><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ChaosMonkey</name><operator>.</operator><name>java</name></name>    <operator>|</operator> <literal type="number">14</literal> <operator>+</operator><operator>--</operator><operator>--</operator><operator>-</operator>
 <literal type="number">47</literal> <name>files</name> <name>changed</name></expr><operator>,</operator> <expr><literal type="number">129</literal> <call><name>insertions</name><argument_list>(<argument><expr><operator>+</operator></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">139</literal> <call><name>deletions</name><argument_list>(<argument><expr><operator>-</operator></expr></argument>)</argument_list></call>

<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<name>index</name> <literal type="number">6834eb56bb2</literal><operator>..</operator><literal type="number">61fcd47e233</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name><name>CHANGES</name><operator>.</operator><name>txt</name></name>
@@ <operator>-</operator><literal type="number">299</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">299</literal></expr><operator>,</operator><expr><literal type="number">9</literal> @@ <name>Optimizations</name>
 
 <operator>*</operator> <name>SOLR</name><operator>-</operator><literal type="number">8720</literal><operator>:</operator> <name>ZkController</name><operator>#</operator><name>publishAndWaitForDownStates</name> <name>should</name> <name>use</name> <operator>#</operator><name><name>publishNodeAsDown</name><operator>.</operator></name> (<name>Mark</name> <name>Miller</name></expr></expr_stmt>)
 
<expr_stmt><expr><operator>*</operator> <name>SOLR</name><operator>-</operator><literal type="number">8745</literal><operator>:</operator> <name>Deprecate</name> <name>costly</name> <call><name><name>ZkStateReader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr><operator>,</operator> <expr><name>replace</name> <name>with</name> <name>a</name> <name>narrow</name>
  <call><name>forceUpdateCollection</name><argument_list>(<argument><expr><name>collection</name></expr></argument>)</argument_list></call> <operator>(</operator><name>Scott</name> <name>Blum</name> <name>via</name> <name>shalin</name><operator>)</operator>

 <name>Other</name> <name>Changes</name>
 <operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator><operator>--</operator>
 
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>map</name><operator>-</operator><name>reduce</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>MorphlineGoLiveMiniMRTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>map</name><operator>-</operator><name>reduce</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>MorphlineGoLiveMiniMRTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">1cc1723db9b</literal><operator>..</operator><literal type="number">95ed9b2b17d</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>map</name><operator>-</operator><name>reduce</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>MorphlineGoLiveMiniMRTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>contrib</name><operator>/</operator><name>map</name><operator>-</operator><name>reduce</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>hadoop</name><operator>/</operator><name><name>MorphlineGoLiveMiniMRTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">646</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">646</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>MorphlineGoLiveMiniMRTest</name> extends <name>AbstractFullDistribZkTestBase</name> <block>{
       }</block>
       
       <call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">200</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>updateClusterState</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     }
     
     if <expr_stmt><expr><operator>(</operator><name>TEST_NIGHTLY</name><operator>)</operator> <block>{
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ElectionContext</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ElectionContext</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">210787757bb</literal><operator>..</operator><literal type="number">38f6083bcb6</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ElectionContext</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ElectionContext</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">462</literal></expr>,<expr><literal type="number">7</literal> <operator>+</operator><literal type="number">462</literal></expr>,<expr><literal type="number">7</literal> @@ <name>final</name> <name>class</name> <name>ShardLeaderElectionContext</name> extends <name>ShardLeaderElectionContextBase</name> <block>{
   <expr><specifier>public</specifier> <name>void</name> <call><name>publishActiveIfRegisteredAndNotActive</name><argument_list>(<argument><expr><name>SolrCore</name> <name>core</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>KeeperException</name></expr></argument>, <argument><expr><name>InterruptedException</name> <block>{</block></expr></argument></throws></expr>
       <if_stmt><if>if <condition>(<expr><call><name><name>core</name><operator>.</operator><name>getCoreDescriptor</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCloudDescriptor</name><argument_list>()</argument_list></call><operator>.</operator><call><name>hasRegistered</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
         <decl_stmt><decl><type><name>ZkStateReader</name></type> <name>zkStateReader</name> <init>= <expr><call><name><name>zkController</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>forceUpdateCollection</name></name><argument_list>(<argument><expr><name>collection</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <decl_stmt><decl><type><name>ClusterState</name></type> <name>clusterState</name> <init>= <expr><call><name><name>zkStateReader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>Replica</name></type> <name>rep</name> <init>= <expr><ternary><condition><expr><operator>(</operator><name>clusterState</name> <operator>==</operator> <literal type="null">null</literal><operator>)</operator></expr> ?</condition><then> <expr><literal type="null">null</literal></expr>
             </then><else>: <expr><call><name><name>clusterState</name><operator>.</operator><name>getReplica</name></name><argument_list>(<argument><expr><name>collection</name></expr></argument>, <argument><expr><call><name><name>leaderProps</name><operator>.</operator><name>getStr</name></name><argument_list>(<argument><expr><name><name>ZkStateReader</name><operator>.</operator><name>CORE_NODE_NAME_PROP</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>LeaderInitiatedRecoveryThread</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>LeaderInitiatedRecoveryThread</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7a72a6782ee</literal><operator>..</operator><literal type="number">589ed83e833</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>LeaderInitiatedRecoveryThread</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>LeaderInitiatedRecoveryThread</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">244</literal></expr><operator>,</operator><expr><literal type="number">12</literal> <operator>+</operator><literal type="number">244</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>LeaderInitiatedRecoveryThread</name> extends <name>Thread</name> <block>{
         
         <comment type="line">// see if the replica's node is still live, if not, no need to keep doing this loop</comment>
         <expr><name>ZkStateReader</name> <name>zkStateReader</name> <operator>=</operator> <call><name><name>zkController</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call></expr>;</block></expr></expr_stmt>
        <try>try <block>{<block_content>
          <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt/></block_content></block></try></block_content></block></if></if_stmt>}</block></expr> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>exc</name></decl></parameter>)</parameter_list> <block>{<block_content>
          <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Error when updating cluster state: "</literal><operator>+</operator><name>exc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt/></block_content></block></catch>}</block></expr></expr_stmt>        
        
         <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>zkStateReader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>liveNodesContain</name><argument_list>(<argument><expr><name>replicaNodeName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
           <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Node "</literal><operator>+</operator><name>replicaNodeName</name><operator>+</operator><literal type="string">" hosting core "</literal><operator>+</operator><name>coreNeedingRecovery</name><operator>+</operator>
               <literal type="string">" is no longer live. No need to keep trying to tell it to recover!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>OverseerCollectionMessageHandler</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>OverseerCollectionMessageHandler</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">6b7f6067d8b</literal><operator>..</operator><name>d7d894bc69b</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>OverseerCollectionMessageHandler</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>OverseerCollectionMessageHandler</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">1371</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1371</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>OverseerCollectionMessageHandler</name> implements <name>OverseerMessageHandler</name></expr></expr_stmt>
         <return>return;</return>
       </block_content>}</block></if></if_stmt>
       <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     }
     throw <expr_stmt><expr><operator>new</operator> <call><name>SolrException</name><argument_list>(<argument><expr><name><name>ErrorCode</name><operator>.</operator><name>SERVER_ERROR</name></name></expr></argument>,
         <argument><expr><literal type="string">"Could not find new slice "</literal> <operator>+</operator> <name>sliceName</name> <operator>+</operator> <literal type="string">" in collection "</literal> <operator>+</operator> <name>collectionName</name>
<name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkController</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkController</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7d2752a75ae</literal><operator>..</operator><literal type="number">81897b717e9</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkController</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkController</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">883</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">883</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>final</name> class <name>ZkController</name> <block>{
       }</block>
       
       <comment type="line">// make sure we have an update cluster state right away</comment>
      <call><name><name>zkStateReader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr></argument>;
      <argument><expr><call><name><name>zkStateReader</name><operator>.</operator><name>forceUpdateCollection</name></name><argument_list>(<argument><expr><name>collection</name></expr></argument>)</argument_list></call></expr></argument>;
       return <argument><expr><name>shardId</name></expr></argument>;</argument_list></call></expr></expr_stmt>
     } finally <block>{<block_content>
       <expr_stmt><expr><call><name><name>MDCLoggingContext</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>CdcrRequestHandler</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>CdcrRequestHandler</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">585c8396d23</literal><operator>..</operator><literal type="number">23e4abac304</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>CdcrRequestHandler</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name><name>CdcrRequestHandler</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">361</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">361</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>CdcrRequestHandler</name> extends <name>RequestHandlerBase</name> implements <name>SolrCoreAw</name>
       <throws>throws <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>SolrServerException</name> <block>{
     <expr><name>ZkController</name> <name>zkController</name> <operator>=</operator> <call><name><name>core</name><operator>.</operator><name>getCoreDescriptor</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCoreContainer</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZkController</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
     <try>try <block>{<block_content>
      <expr_stmt><expr><call><name><name>zkController</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>updateClusterState</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>zkController</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>forceUpdateCollection</name><argument_list>(<argument><expr><name>collection</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
       <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>warn</name></name><argument_list>(<argument><expr><literal type="string">"Error when updating cluster state"</literal></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></catch></try>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>ClusterStatus</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>ClusterStatus</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">667d9fa11f5</literal><operator>..</operator><name>ff60adc465b</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>ClusterStatus</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>ClusterStatus</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">57</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">57</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>ClusterStatus</name> <block>{
   @<expr><call><name>SuppressWarnings</name><argument_list>(<argument><expr><literal type="string">"unchecked"</literal></expr></argument>)</argument_list></call>
   <specifier>public</specifier>  <name>void</name> <call><name>getClusterStatus</name><argument_list>(<argument><expr><name>NamedList</name> <name>results</name></expr></argument>)</argument_list></call>
       <throws>throws <argument><expr><name>KeeperException</name></expr></argument>, <argument><expr><name>InterruptedException</name> <block>{
    <expr><call><name><name>zkStateReader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;


     <comment type="line">// read aliases</comment>
     <expr><name>Aliases</name> <name>aliases</name> <operator>=</operator> <call><name><name>zkStateReader</name><operator>.</operator><name>getAliases</name></name><argument_list>()</argument_list></call></expr>;
     <expr><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name> <name>collectionVsAliases</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;
<expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CollectionsHandler</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CollectionsHandler</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>de2104f4d07</name><operator>..</operator><literal type="number">593dac81bcc</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CollectionsHandler</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CollectionsHandler</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">920</literal></expr>,<expr><literal type="number">8</literal> <operator>+</operator><literal type="number">920</literal></expr>,<expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>CollectionsHandler</name> extends <name>RequestHandlerBase</name> <block>{
         <expr><operator>+</operator> <operator>(</operator><name>checkLeaderOnly</name> <operator>?</operator> <literal type="string">"leaders"</literal> <operator>:</operator> <literal type="string">"replicas"</literal><operator>)</operator></expr>)</block></expr>;
     <expr><name>ZkStateReader</name> <name>zkStateReader</name> <operator>=</operator> <call><name><name>cc</name><operator>.</operator><name>getZkController</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZkStateReader</name><argument_list>()</argument_list></call></expr>;
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>numRetries</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

      <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>ClusterState</name></type> <name>clusterState</name> <init>= <expr><call><name><name>zkStateReader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
       <decl_stmt><decl><type><name><name>Collection</name><argument_list type="generic">&lt;<argument><name>Slice</name></argument>&gt;</argument_list></name></type> <name>shards</name> <init>= <expr><call><name><name>clusterState</name><operator>.</operator><name>getSlices</name></name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CoreAdminOperation</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CoreAdminOperation</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8240189cf04</literal><operator>..</operator><name>e755b82ff49</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CoreAdminOperation</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>CoreAdminOperation</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">461</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">461</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ enum <name>CoreAdminOperation</name> <block>{
             <comment type="line">// to accept updates</comment>
             <expr><name>CloudDescriptor</name> <name>cloudDescriptor</name> <operator>=</operator> <call><name><name>core</name><operator>.</operator><name>getCoreDescriptor</name></name><argument_list>()</argument_list></call>
                 <operator>.</operator><call><name>getCloudDescriptor</name><argument_list>()</argument_list></call></expr>;
            <expr><name>String</name> <name>collection</name> <operator>=</operator> <call><name><name>cloudDescriptor</name><operator>.</operator><name>getCollectionName</name></name><argument_list>()</argument_list></call></expr>;
 
             <if_stmt><if>if <condition>(<expr><name>retry</name> <operator>%</operator> <literal type="number">15</literal> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
               <if_stmt><if>if <condition>(<expr><name>retry</name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <call><name><name>log</name><operator>.</operator><name>isInfoEnabled</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">470</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">471</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ enum <name>CoreAdminOperation</name> <block>{
                     <expr><name>waitForState</name> <operator>+</operator> <literal type="string">"; forcing ClusterState update from ZooKeeper"</literal></expr>)</block></expr>;</expr_stmt></block_content></block></if></if_stmt>
 
               <comment type="line">// force a cluster state update</comment>
              <expr_stmt><expr><call><name><name>coreContainer</name><operator>.</operator><name>getZkController</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZkStateReader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>updateClusterState</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
              <expr_stmt><expr><call><name><name>coreContainer</name><operator>.</operator><name>getZkController</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZkStateReader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>forceUpdateCollection</name><argument_list>(<argument><expr><name>collection</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <expr_stmt/></block_content></block></if></if_stmt>}</block></expr></expr_stmt>
 
             <if_stmt><if>if <condition>(<expr><name>maxTries</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">483</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">484</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ enum <name>CoreAdminOperation</name> <block>{
             }</block>
 
             <name>ClusterState</name> <name>clusterState</name> <operator>=</operator> <call><name><name>coreContainer</name><operator>.</operator><name>getZkController</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterState</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name>String</name></type> <name>collection</name> <init>= <expr><call><name><name>cloudDescriptor</name><operator>.</operator><name>getCollectionName</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
             <decl_stmt><decl><type><name>Slice</name></type> <name>slice</name> <init>= <expr><call><name><name>clusterState</name><operator>.</operator><name>getSlice</name></name><argument_list>(<argument><expr><name>collection</name></expr></argument>, <argument><expr><call><name><name>cloudDescriptor</name><operator>.</operator><name>getShardId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
             <if_stmt><if>if <condition>(<expr><name>slice</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
               <decl_stmt><decl><type><specifier>final</specifier> <name>Replica</name></type> <name>replica</name> <init>= <expr><call><name><name>slice</name><operator>.</operator><name>getReplicasMap</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name>coreNodeName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">937</literal></expr><operator>,</operator><expr><literal type="number">4</literal> <operator>+</operator><literal type="number">937</literal></expr><operator>,</operator><expr><literal type="number">4</literal> @@ enum <name>CoreAdminOperation</name> <block>{
     <return>return <expr><name>size</name></expr>;</return></block></expr></expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for>
   }</block></expr></expr_stmt>
 
</block_content>}</block>
<expr_stmt><expr><operator>\</operator> <name>No</name> <name>newline</name> <name>at</name> <name>end</name> <name>of</name> <name>file</name></expr></expr_stmt>
}
diff <expr_stmt><expr><operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>RebalanceLeaders</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>RebalanceLeaders</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">4626fc92967</literal><operator>..</operator><literal type="number">98e796da73d</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>RebalanceLeaders</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>handler</name><operator>/</operator><name>admin</name><operator>/</operator><name><name>RebalanceLeaders</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">79</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">79</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <name>class</name> <name>RebalanceLeaders</name> <block>{
       <throw>throw <argument_list>new <argument><expr><call><name>SolrException</name><argument_list>(<argument><expr><name><name>SolrException</name><operator>.</operator><name>ErrorCode</name><operator>.</operator><name>BAD_REQUEST</name></name></expr></argument>,
           <argument><expr><call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><name><name>Locale</name><operator>.</operator><name>ROOT</name></name></expr></argument>, <argument><expr><literal type="string">"The "</literal> <operator>+</operator> <name>COLLECTION_PROP</name> <operator>+</operator> <literal type="string">" is required for the Rebalance Leaders command."</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument></argument_list></throw>;
     }</block>
    <call><name><name>coreContainer</name><operator>.</operator><name>getZkController</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZkStateReader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>updateClusterState</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>coreContainer</name><operator>.</operator><name>getZkController</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZkStateReader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>forceUpdateCollection</name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>ClusterState</name></type> <name>clusterState</name> <init>= <expr><call><name><name>coreContainer</name><operator>.</operator><name>getZkController</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterState</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>DocCollection</name></type> <name>dc</name> <init>= <expr><call><name><name>clusterState</name><operator>.</operator><name>getCollection</name></name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <if_stmt><if>if <condition>(<expr><name>dc</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>BaseCdcrDistributedZkTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>BaseCdcrDistributedZkTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f1f3e9167b1</name><operator>..</operator><name>fe94309bba2</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>BaseCdcrDistributedZkTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>BaseCdcrDistributedZkTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">635</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">635</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>BaseCdcrDistributedZkTest</name> extends <name>AbstractDistribZkTestBase</name> <block>{
     <try>try <block>{<block_content>
       <expr_stmt><expr><call><name><name>cloudClient</name><operator>.</operator><name>connect</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>ZkStateReader</name></type> <name>zkStateReader</name> <init>= <expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>ClusterState</name></type> <name>clusterState</name> <init>= <expr><call><name><name>zkStateReader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>DocCollection</name></type> <name>coll</name> <init>= <expr><call><name><name>clusterState</name><operator>.</operator><name>getCollection</name></name><argument_list>(<argument><expr><name>collection</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>BasicDistributedZkTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>BasicDistributedZkTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d25ce664809</name><operator>..</operator><literal type="number">8222e91677f</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>BasicDistributedZkTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>BasicDistributedZkTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">552</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">552</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>BasicDistributedZkTest</name> extends <name>AbstractFullDistribZkTestBase</name> <block>{
 
     <expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">5000</literal></expr></argument>)</argument_list></call></expr>;
     <call><name><name>ChaosMonkey</name><operator>.</operator><name>start</name></name><argument_list>(<argument><expr><call><name><name>cloudJettys</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><name>jetty</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>updateClusterState</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>forceUpdateCollection</name><argument_list>(<argument><expr><literal type="string">"multiunload2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <try>try <block>{<block_content>
       <expr_stmt><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getLeaderRetry</name><argument_list>(<argument><expr><literal type="string">"multiunload2"</literal></expr></argument>, <argument><expr><literal type="string">"shard1"</literal></expr></argument>, <argument><expr><literal type="number">30000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>SolrException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">830</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">830</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>BasicDistributedZkTest</name> extends <name>AbstractFullDistribZkTestBase</name> <block>{
     
     <comment type="line">// we added a role of none on these creates - check for it</comment>
     <expr><name>ZkStateReader</name> <name>zkStateReader</name> <operator>=</operator> <call><name>getCommonCloudSolrClient</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZkStateReader</name><argument_list>()</argument_list></call></expr>;
    <call><name><name>zkStateReader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>forceUpdateCollection</name></name><argument_list>(<argument><expr><name>oneInstanceCollection2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Slice</name></argument>&gt;</argument_list></name></type> <name>slices</name> <init>= <expr><call><name><name>zkStateReader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSlicesMap</name><argument_list>(<argument><expr><name>oneInstanceCollection2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><name>slices</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>roles</name> <init>= <expr><call><name><name>slices</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"slice1"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getReplicasMap</name><argument_list>()</argument_list></call><operator>.</operator><call><name>values</name><argument_list>()</argument_list></call><operator>.</operator><call><name>iterator</name><argument_list>()</argument_list></call><operator>.</operator><call><name>next</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getStr</name><argument_list>(<argument><expr><name><name>ZkStateReader</name><operator>.</operator><name>ROLES_PROP</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ChaosMonkeyNothingIsSafeTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ChaosMonkeyNothingIsSafeTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8cc80d9c843</literal><operator>..</operator><literal type="number">7dceada1668</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ChaosMonkeyNothingIsSafeTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ChaosMonkeyNothingIsSafeTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">205</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">205</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ChaosMonkeyNothingIsSafeTest</name> extends <name>AbstractFullDistribZkTestBase</name>
       
       <comment type="line">// TODO: assert we didnt kill everyone</comment>
       
      <call><name><name>zkStateReader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>updateLiveNodes</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>zkStateReader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getLiveNodes</name><argument_list>()</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       
       
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ChaosMonkeyShardSplitTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ChaosMonkeyShardSplitTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">7a44561d38b</literal><operator>..</operator><literal type="number">190db573a50</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ChaosMonkeyShardSplitTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ChaosMonkeyShardSplitTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">206</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">206</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ChaosMonkeyShardSplitTest</name> extends <name>ShardSplitTest</name> <block>{
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">30</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
       <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">3000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>ZkStateReader</name></type> <name>zkStateReader</name> <init>= <expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>forceUpdateCollection</name></name><argument_list>(<argument><expr><literal type="string">"collection1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>ClusterState</name></type> <name>clusterState</name> <init>= <expr><call><name><name>zkStateReader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>DocCollection</name></type> <name>collection1</name> <init>= <expr><call><name><name>clusterState</name><operator>.</operator><name>getCollection</name></name><argument_list>(<argument><expr><literal type="string">"collection1"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>Slice</name></type> <name>slice</name> <init>= <expr><call><name><name>collection1</name><operator>.</operator><name>getSlice</name></name><argument_list>(<argument><expr><literal type="string">"shard1"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CollectionReloadTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CollectionReloadTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b6eb5e2a494</name><operator>..</operator><literal type="number">65ff78bf06a</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CollectionReloadTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CollectionReloadTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">103</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">103</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>CollectionReloadTest</name> extends <name>AbstractFullDistribZkTestBase</name> <block>{
     <expr><name>timeout</name> <operator>=</operator> <call><name><name>System</name><operator>.</operator><name>nanoTime</name></name><argument_list>()</argument_list></call> <operator>+</operator> <call><name><name>TimeUnit</name><operator>.</operator><name>NANOSECONDS</name><operator>.</operator><name>convert</name></name><argument_list>(<argument><expr><name>timeoutSecs</name></expr></argument>, <argument><expr><name><name>TimeUnit</name><operator>.</operator><name>SECONDS</name></name></expr></argument>)</argument_list></call></expr>;</block></expr></expr_stmt>
     <while>while <condition>(<expr><call><name><name>System</name><operator>.</operator><name>nanoTime</name></name><argument_list>()</argument_list></call> <operator>&lt;</operator> <name>timeout</name></expr>)</condition> <block>{<block_content>
       <comment type="line">// state of leader should be active after session loss recovery - see SOLR-7338</comment>
      <expr_stmt><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>updateClusterState</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>forceUpdateCollection</name><argument_list>(<argument><expr><name>testCollectionName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>ClusterState</name></type> <name>cs</name> <init>= <expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterState</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>Slice</name></type> <name>slice</name> <init>= <expr><call><name><name>cs</name><operator>.</operator><name>getSlice</name></name><argument_list>(<argument><expr><name>testCollectionName</name></expr></argument>, <argument><expr><name>shardId</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><name>replicaState</name> <operator>=</operator> <call><name><name>slice</name><operator>.</operator><name>getReplica</name></name><argument_list>(<argument><expr><call><name><name>leader</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getStr</name><argument_list>(<argument><expr><name><name>ZkStateReader</name><operator>.</operator><name>STATE_PROP</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CollectionTooManyReplicasTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CollectionTooManyReplicasTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">92fea45e335</literal><operator>..</operator><name>afc7c483fb0</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CollectionTooManyReplicasTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CollectionTooManyReplicasTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">97</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">97</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>CollectionTooManyReplicasTest</name> extends <name>AbstractFullDistribZkTestBase</name>
     <call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name><name>response</name><operator>.</operator><name>getStatus</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>ZkStateReader</name></type> <name>zkStateReader</name> <init>= <expr><call><name>getCommonCloudSolrClient</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZkStateReader</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>forceUpdateCollection</name></name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>Slice</name></type> <name>slice</name> <init>= <expr><call><name><name>zkStateReader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSlicesMap</name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"shard1"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name>Replica</name></type> <name>rep</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">194</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">194</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>CollectionTooManyReplicasTest</name> extends <name>AbstractFullDistribZkTestBase</name>
     <comment type="line">// And finally, insure that there are all the replcias we expect. We should have shards 1, 2 and 4 and each</comment>
     <comment type="line">// should have exactly two replicas</comment>
     <name>ZkStateReader</name> <name>zkStateReader</name> <operator>=</operator> <call><name>getCommonCloudSolrClient</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZkStateReader</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>forceUpdateCollection</name></name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Slice</name></argument>&gt;</argument_list></name></type> <name>slices</name> <init>= <expr><call><name><name>zkStateReader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSlicesMap</name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"There should be exaclty four slices"</literal></expr></argument>, <argument><expr><call><name><name>slices</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><literal type="string">"shardstart should exist"</literal></expr></argument>, <argument><expr><call><name><name>slices</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="string">"shardstart"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">275</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">275</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>CollectionTooManyReplicasTest</name> extends <name>AbstractFullDistribZkTestBase</name>
 
   <specifier>private</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name> <call><name>getAllNodeNames</name><argument_list>(<argument><expr><name>String</name> <name>collectionName</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>KeeperException</name></expr></argument>, <argument><expr><name>InterruptedException</name> <block>{
     <expr><name>ZkStateReader</name> <name>zkStateReader</name> <operator>=</operator> <call><name>getCommonCloudSolrClient</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZkStateReader</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>forceUpdateCollection</name></name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>Slice</name></type> <name>slice</name> <init>= <expr><call><name><name>zkStateReader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSlicesMap</name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="string">"shard1"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
     <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>nodes</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CollectionsAPIDistributedZkTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CollectionsAPIDistributedZkTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">93f82acf20d</literal><operator>..</operator><literal type="number">641dadfc236</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CollectionsAPIDistributedZkTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CollectionsAPIDistributedZkTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">368</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">368</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>CollectionsAPIDistributedZkTest</name> extends <name>AbstractFullDistribZkTestBa</name></expr></expr_stmt>
       </block_content>}</block></while>
       
       <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">200</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>updateClusterState</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>
 
     <call><name>assertFalse</name><argument_list>(<argument><expr><literal type="string">"Still found collection that should be gone"</literal></expr></argument>, <argument><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterState</name><argument_list>()</argument_list></call><operator>.</operator><call><name>hasCollection</name><argument_list>(<argument><expr><literal type="string">"halfdeletedcollection2"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">540</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">539</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>CollectionsAPIDistributedZkTest</name> extends <name>AbstractFullDistribZkTestBa</name></expr></expr_stmt>
   </block_content>}</block></catch></try>
   
   <function><type><specifier>private</specifier> <name>void</name></type> <name>testNoCollectionSpecified</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    
    <expr_stmt><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>updateClusterState</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterState</name><argument_list>()</argument_list></call><operator>.</operator><call><name>hasCollection</name><argument_list>(<argument><expr><literal type="string">"corewithnocollection"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterState</name><argument_list>()</argument_list></call><operator>.</operator><call><name>hasCollection</name><argument_list>(<argument><expr><literal type="string">"corewithnocollection2"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">565</literal></expr><operator>,</operator><expr><literal type="number">13</literal> <operator>+</operator><literal type="number">562</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>CollectionsAPIDistributedZkTest</name> extends <name>AbstractFullDistribZkTestBa</name>
     <call><name>makeRequest</name><argument_list>(<argument><expr><call><name>getBaseUrl</name><argument_list>(<argument><expr><operator>(</operator><name>HttpSolrClient</name><operator>)</operator> <call><name><name>clients</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>createCmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     
     <comment type="line">// in both cases, the collection should have default to the core name</comment>
    <expr_stmt><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>updateClusterState</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>forceUpdateCollection</name><argument_list>(<argument><expr><literal type="string">"corewithnocollection"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>forceUpdateCollection</name><argument_list>(<argument><expr><literal type="string">"corewithnocollection2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterState</name><argument_list>()</argument_list></call><operator>.</operator><call><name>hasCollection</name><argument_list>(<argument><expr><literal type="string">"corewithnocollection"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterState</name><argument_list>()</argument_list></call><operator>.</operator><call><name>hasCollection</name><argument_list>(<argument><expr><literal type="string">"corewithnocollection2"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
 
   <function><type><specifier>private</specifier> <name>void</name></type> <name>testNoConfigSetExist</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>updateClusterState</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterState</name><argument_list>()</argument_list></call><operator>.</operator><call><name>hasCollection</name><argument_list>(<argument><expr><literal type="string">"corewithnocollection3"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <comment type="line">// try and create a SolrCore with no collection name</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">592</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">589</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>CollectionsAPIDistributedZkTest</name> extends <name>AbstractFullDistribZkTestBa</name>
     <call><name>assertTrue</name><argument_list>(<argument><expr><name>gotExp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>TimeUnit</name><operator>.</operator><name>MILLISECONDS</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">200</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <comment type="line">// in both cases, the collection should have default to the core name</comment>
    <expr_stmt><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>updateClusterState</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>forceUpdateCollection</name><argument_list>(<argument><expr><literal type="string">"corewithnocollection3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name><name>Collection</name><argument_list type="generic">&lt;<argument><name>Slice</name></argument>&gt;</argument_list></name></type> <name>slices</name> <init>= <expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterState</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getActiveSlices</name><argument_list>(<argument><expr><literal type="string">"corewithnocollection3"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>int</name></type> <name>replicaCount</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CustomCollectionTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CustomCollectionTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">081e96f4f08</literal><operator>..</operator><literal type="number">0951b5d6fc0</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CustomCollectionTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>CustomCollectionTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">409</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">409</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>CustomCollectionTest</name> extends <name>AbstractFullDistribZkTestBase</name> <block>{
     <expr><name>int</name> <name>attempts</name> <operator>=</operator> <literal type="number">0</literal></expr>;</block></expr></expr_stmt>
     <while>while <condition>(<expr><literal type="boolean">true</literal></expr>)</condition> <block>{<block_content>
       <if_stmt><if>if <condition>(<expr><name>attempts</name> <operator>&gt;</operator> <literal type="number">30</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><literal type="string">"Not enough active replicas in the shard 'x'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
      <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><name>attempts</name><operator>++</operator></expr>;</expr_stmt>
       <expr_stmt><expr><name>replicaCount</name> <operator>=</operator> <call><name><name>zkStateReader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSlice</name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>, <argument><expr><literal type="string">"x"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getReplicas</name><argument_list>()</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <if_stmt><if>if <condition>(<expr><name>replicaCount</name> <operator>&gt;=</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content> <break>break;</break></block_content></block></if></if_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>DeleteShardTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>DeleteShardTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">101bfb98c20</literal><operator>..</operator><literal type="number">812fbe93218</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>DeleteShardTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>DeleteShardTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">96</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">96</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>DeleteShardTest</name> extends <name>AbstractFullDistribZkTestBase</name> <block>{
     <expr><name>ClusterState</name> <name>clusterState</name> <operator>=</operator> <call><name><name>zkStateReader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call></expr>;
     <name>int</name> <name>counter</name> <operator>=</operator> <literal type="number">10</literal></block></expr>;</expr_stmt>
     <while>while <condition>(<expr><name>counter</name><operator>--</operator> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><name>clusterState</name> <operator>=</operator> <call><name><name>zkStateReader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <if_stmt><if>if <condition>(<expr><call><name><name>clusterState</name><operator>.</operator><name>getSlice</name></name><argument_list>(<argument><expr><literal type="string">"collection1"</literal></expr></argument>, <argument><expr><name>shard</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
         <break>break;</break>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">142</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">141</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>DeleteShardTest</name> extends <name>AbstractFullDistribZkTestBase</name> <block>{
     <expr><name>boolean</name> <name>transition</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</block></expr></expr_stmt>
 
     <for>for <control>(<init><decl><type><name>int</name></type> <name>counter</name> <init>= <expr><literal type="number">10</literal></expr></init></decl>;</init> <condition><expr><name>counter</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>;</condition> <incr><expr><name>counter</name><operator>--</operator></expr></incr>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>ClusterState</name></type> <name>clusterState</name> <init>= <expr><call><name><name>zkStateReader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>State</name></type> <name>sliceState</name> <init>= <expr><call><name><name>clusterState</name><operator>.</operator><name>getSlice</name></name><argument_list>(<argument><expr><literal type="string">"collection1"</literal></expr></argument>, <argument><expr><name>slice</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getState</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <if_stmt><if>if <condition>(<expr><name>sliceState</name> <operator>==</operator> <name>state</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ForceLeaderTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ForceLeaderTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>c68fe9c3a26</name><operator>..</operator><name>a71c3e61413</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ForceLeaderTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ForceLeaderTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">89</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">89</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ForceLeaderTest</name> extends <name>HttpPartitionTest</name> <block>{
 
       <expr><call><name>putNonLeadersIntoLIR</name><argument_list>(<argument><expr><name>testCollectionName</name></expr></argument>, <argument><expr><name>SHARD1</name></expr></argument>, <argument><expr><name>zkController</name></expr></argument>, <argument><expr><name>leader</name></expr></argument>, <argument><expr><name>notLeaders</name></expr></argument>)</argument_list></call></expr>;
 
      <call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>updateClusterState</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>forceUpdateCollection</name><argument_list>(<argument><expr><name>testCollectionName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>ClusterState</name></type> <name>clusterState</name> <init>= <expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterState</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>int</name></type> <name>numActiveReplicas</name> <init>= <expr><call><name>getNumberOfActiveReplicas</name><argument_list>(<argument><expr><name>clusterState</name></expr></argument>, <argument><expr><name>testCollectionName</name></expr></argument>, <argument><expr><name>SHARD1</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"Expected only 0 active replica but found "</literal> <operator>+</operator> <name>numActiveReplicas</name> <operator>+</operator>
@@ <operator>-</operator><literal type="number">114</literal></expr></argument>,<argument><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">114</literal></expr></argument>,<argument><expr><literal type="number">7</literal> @@ <specifier>public</specifier> class <name>ForceLeaderTest</name> extends <name>HttpPartitionTest</name> <block>{
       <comment type="line">// By now we have an active leader. Wait for recoveries to begin</comment>
       <expr><call><name>waitForRecoveriesToFinish</name><argument_list>(<argument><expr><name>testCollectionName</name></expr></argument>, <argument><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;
 
      <call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>updateClusterState</name><argument_list>()</argument_list></call></block></expr></argument>;</argument_list></call></expr></expr_stmt>
      <expr_stmt><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>forceUpdateCollection</name><argument_list>(<argument><expr><name>testCollectionName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><name>clusterState</name> <operator>=</operator> <call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterState</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"After forcing leader: "</literal> <operator>+</operator> <call><name><name>clusterState</name><operator>.</operator><name>getSlice</name></name><argument_list>(<argument><expr><name>testCollectionName</name></expr></argument>, <argument><expr><name>SHARD1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <comment type="line">// we have a leader</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">187</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">187</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ForceLeaderTest</name> extends <name>HttpPartitionTest</name> <block>{
         <expr><call><name>setReplicaState</name><argument_list>(<argument><expr><name>testCollectionName</name></expr></argument>, <argument><expr><name>SHARD1</name></expr></argument>, <argument><expr><name>rep</name></expr></argument>, <argument><expr><name><name>State</name><operator>.</operator><name>DOWN</name></name></expr></argument>)</argument_list></call></expr>;
       }</block></expr></expr_stmt>
 
      <expr_stmt><expr><call><name><name>zkController</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>updateClusterState</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>zkController</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>forceUpdateCollection</name><argument_list>(<argument><expr><name>testCollectionName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <comment type="line">// Assert all replicas are down and that there is no leader</comment>
       <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name>getActiveOrRecoveringReplicas</name><argument_list>(<argument><expr><name>testCollectionName</name></expr></argument>, <argument><expr><name>SHARD1</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">224</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">224</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>ForceLeaderTest</name> extends <name>HttpPartitionTest</name> <block>{
     <expr><name>ClusterState</name> <name>clusterState</name> <operator>=</operator> <literal type="null">null</literal></expr>;
     <name>boolean</name> <name>transition</name> <operator>=</operator> <literal type="boolean">false</literal></block></expr>;</expr_stmt>
     <for>for <control>(<init><decl><type><name>int</name></type> <name>counter</name> <init>= <expr><literal type="number">10</literal></expr></init></decl>;</init> <condition><expr><name>counter</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>;</condition> <incr><expr><name>counter</name><operator>--</operator></expr></incr>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><name>clusterState</name> <operator>=</operator> <call><name><name>zkStateReader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>Replica</name></type> <name>newLeader</name> <init>= <expr><call><name><name>clusterState</name><operator>.</operator><name>getSlice</name></name><argument_list>(<argument><expr><name>collection</name></expr></argument>, <argument><expr><name>slice</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getLeader</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <if_stmt><if>if <condition>(<expr><name>newLeader</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">259</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">258</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>ForceLeaderTest</name> extends <name>HttpPartitionTest</name> <block>{
 
     <expr><name><name>Replica</name><operator>.</operator><name>State</name></name> <name>replicaState</name> <operator>=</operator> <literal type="null">null</literal></expr>;</block></expr></expr_stmt>
     <for>for <control>(<init><decl><type><name>int</name></type> <name>counter</name> <init>= <expr><literal type="number">10</literal></expr></init></decl>;</init> <condition><expr><name>counter</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>;</condition> <incr><expr><name>counter</name><operator>--</operator></expr></incr>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>ClusterState</name></type> <name>clusterState</name> <init>= <expr><call><name><name>zkStateReader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><name>replicaState</name> <operator>=</operator> <call><name><name>clusterState</name><operator>.</operator><name>getSlice</name></name><argument_list>(<argument><expr><name>collection</name></expr></argument>, <argument><expr><name>slice</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getReplica</name><argument_list>(<argument><expr><call><name><name>replica</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>getState</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <if_stmt><if>if <condition>(<expr><name>replicaState</name> <operator>==</operator> <name>state</name></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">355</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">353</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>ForceLeaderTest</name> extends <name>HttpPartitionTest</name> <block>{
       <for>for <control>(<init><decl><type><name>int</name></type> <name>j</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <call><name><name>notLeaders</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
         <expr_stmt><expr><name><name>lirStates</name><index>[<expr><name>j</name></expr>]</index></name> <operator>=</operator> <call><name><name>zkController</name><operator>.</operator><name>getLeaderInitiatedRecoveryState</name></name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>, <argument><expr><name>shard</name></expr></argument>, <argument><expr><call><name><name>notLeaders</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>j</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getName</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
 
      <call><name><name>zkController</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>updateClusterState</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>ClusterState</name></type> <name>clusterState</name> <init>= <expr><call><name><name>zkController</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterState</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>boolean</name></type> <name>allDown</name> <init>= <expr><literal type="boolean">true</literal></expr></init></decl>;</decl_stmt>
       <for>for <control>(<init><decl><type><name>State</name></type> <name>lirState</name> <range>: <expr><name>lirStates</name></expr></range></decl></init>)</control><block type="pseudo"><block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">391</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">388</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ForceLeaderTest</name> extends <name>HttpPartitionTest</name> <block>{
     <expr><name>JettySolrRunner</name> <name>leaderJetty</name> <operator>=</operator> <call><name>getJettyOnPort</name><argument_list>(<argument><expr><call><name>getReplicaPort</name><argument_list>(<argument><expr><name>leader</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
     <call><name><name>leaderJetty</name><operator>.</operator><name>start</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt></block_content></block></for>
     <expr_stmt><expr><call><name>waitForRecoveriesToFinish</name><argument_list>(<argument><expr><name>collection</name></expr></argument>, <argument><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>updateClusterState</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>forceUpdateCollection</name><argument_list>(<argument><expr><name>collection</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>ClusterState</name></type> <name>clusterState</name> <init>= <expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterState</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"After bringing back leader: "</literal> <operator>+</operator> <call><name><name>clusterState</name><operator>.</operator><name>getSlice</name></name><argument_list>(<argument><expr><name>collection</name></expr></argument>, <argument><expr><name>SHARD1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>int</name></type> <name>numActiveReplicas</name> <init>= <expr><call><name>getNumberOfActiveReplicas</name><argument_list>(<argument><expr><name>clusterState</name></expr></argument>, <argument><expr><name>collection</name></expr></argument>, <argument><expr><name>SHARD1</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>HttpPartitionTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>HttpPartitionTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8fecc84045a</literal><operator>..</operator><name>f1960aa952e</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>HttpPartitionTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>HttpPartitionTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">215</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">215</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>HttpPartitionTest</name> extends <name>AbstractFullDistribZkTestBase</name> <block>{
 
     <comment type="line">// Verify that the partitioned replica is DOWN</comment>
     <expr><name>ZkStateReader</name> <name>zkr</name> <operator>=</operator> <call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call></expr>;
    <call><name><name>zkr</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt> <comment type="line">// force the state to be fresh</comment>
    <expr_stmt><expr><call><name><name>zkr</name><operator>.</operator><name>forceUpdateCollection</name></name><argument_list>(<argument><expr><name>testCollectionName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><empty_stmt>;</empty_stmt> <comment type="line">// force the state to be fresh</comment>
     <decl_stmt><decl><type><name>ClusterState</name></type> <name>cs</name> <init>= <expr><call><name><name>zkr</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name><name>Collection</name><argument_list type="generic">&lt;<argument><name>Slice</name></argument>&gt;</argument_list></name></type> <name>slices</name> <init>= <expr><call><name><name>cs</name><operator>.</operator><name>getActiveSlices</name></name><argument_list>(<argument><expr><name>testCollectionName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>Slice</name></type> <name>slice</name> <init>= <expr><call><name><name>slices</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>next</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">645</literal></expr><operator>,</operator><expr><literal type="number">18</literal> <operator>+</operator><literal type="number">645</literal></expr><operator>,</operator><expr><literal type="number">13</literal> @@ <specifier>public</specifier> <name>class</name> <name>HttpPartitionTest</name> extends <name>AbstractFullDistribZkTestBase</name> <block>{
     <expr><name>final</name> <name>RTimer</name> <name>timer</name> <operator>=</operator> <operator>new</operator> <call><name>RTimer</name><argument_list>()</argument_list></call></expr>;
 
     <name>ZkStateReader</name> <name>zkr</name> <operator>=</operator> <call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>zkr</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt> <comment type="line">// force the state to be fresh</comment>

    <expr_stmt><expr><call><name><name>zkr</name><operator>.</operator><name>forceUpdateCollection</name></name><argument_list>(<argument><expr><name>testCollectionName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>ClusterState</name></type> <name>cs</name> <init>= <expr><call><name><name>zkr</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name><name>Collection</name><argument_list type="generic">&lt;<argument><name>Slice</name></argument>&gt;</argument_list></name></type> <name>slices</name> <init>= <expr><call><name><name>cs</name><operator>.</operator><name>getActiveSlices</name></name><argument_list>(<argument><expr><name>testCollectionName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>boolean</name></type> <name>allReplicasUp</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>long</name></type> <name>waitMs</name> <init>= <expr><literal type="number">0L</literal></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>long</name></type> <name>maxWaitMs</name> <init>= <expr><name>maxWaitSecs</name> <operator>*</operator> <literal type="number">1000L</literal></expr></init></decl>;</decl_stmt>
     <while>while <condition>(<expr><name>waitMs</name> <operator>&lt;</operator> <name>maxWaitMs</name> <operator>&amp;&amp;</operator> <operator>!</operator><name>allReplicasUp</name></expr>)</condition> <block>{<block_content>
      <comment type="line">// refresh state every 2 secs</comment>
      <if_stmt><if>if <condition>(<expr><name>waitMs</name> <operator>%</operator> <literal type="number">2000</literal> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>updateClusterState</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

       <expr_stmt><expr><name>cs</name> <operator>=</operator> <call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterState</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><name>cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>Slice</name></type> <name>shard</name> <init>= <expr><call><name><name>cs</name><operator>.</operator><name>getSlice</name></name><argument_list>(<argument><expr><name>testCollectionName</name></expr></argument>, <argument><expr><name>shardId</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>LeaderFailoverAfterPartitionTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>LeaderFailoverAfterPartitionTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">6fd7c534809</literal><operator>..</operator><literal type="number">0436d5e874b</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>LeaderFailoverAfterPartitionTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>LeaderFailoverAfterPartitionTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">159</literal></expr><operator>,</operator><expr><literal type="number">8</literal> <operator>+</operator><literal type="number">159</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>LeaderFailoverAfterPartitionTest</name> extends <name>HttpPartitionTest</name> <block>{
     
     <expr><name>long</name> <name>timeout</name> <operator>=</operator> <call><name><name>System</name><operator>.</operator><name>nanoTime</name></name><argument_list>()</argument_list></call> <operator>+</operator> <call><name><name>TimeUnit</name><operator>.</operator><name>NANOSECONDS</name><operator>.</operator><name>convert</name></name><argument_list>(<argument><expr><literal type="number">60</literal></expr></argument>, <argument><expr><name><name>TimeUnit</name><operator>.</operator><name>SECONDS</name></name></expr></argument>)</argument_list></call></expr>;</block></expr></expr_stmt>
     <while>while <condition>(<expr><call><name><name>System</name><operator>.</operator><name>nanoTime</name></name><argument_list>()</argument_list></call> <operator>&lt;</operator> <name>timeout</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>updateClusterState</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

       <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Replica</name></argument>&gt;</argument_list></name></type> <name>activeReps</name> <init>= <expr><call><name>getActiveOrRecoveringReplicas</name><argument_list>(<argument><expr><name>testCollectionName</name></expr></argument>, <argument><expr><literal type="string">"shard1"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <if_stmt><if>if <condition>(<expr><call><name><name>activeReps</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>&gt;=</operator> <literal type="number">2</literal></expr>)</condition><block type="pseudo"><block_content> <break>break;</break></block_content></block></if></if_stmt>
       <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>LeaderInitiatedRecoveryOnCommitTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>LeaderInitiatedRecoveryOnCommitTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8d2cc70c786</literal><operator>..</operator><literal type="number">7d6c633f482</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>LeaderInitiatedRecoveryOnCommitTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>LeaderInitiatedRecoveryOnCommitTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">80</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">80</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>LeaderInitiatedRecoveryOnCommitTest</name> extends <name>BasicDistributedZkTest</name>
 
     <call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><name>sleepMsBeforeHealPartition</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <expr_stmt><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>updateClusterState</name><argument_list>()</argument_list></call></expr>;</expr_stmt> <comment type="line">// get the latest state</comment>
    <expr_stmt><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>forceUpdateCollection</name><argument_list>(<argument><expr><name>testCollectionName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// get the latest state</comment>
     <expr_stmt><expr><name>leader</name> <operator>=</operator> <call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getLeaderRetry</name><argument_list>(<argument><expr><name>testCollectionName</name></expr></argument>, <argument><expr><literal type="string">"shard1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertSame</name><argument_list>(<argument><expr><literal type="string">"Leader was not active"</literal></expr></argument>, <argument><expr><name><name>Replica</name><operator>.</operator><name>State</name><operator>.</operator><name>ACTIVE</name></name></expr></argument>, <argument><expr><call><name><name>leader</name><operator>.</operator><name>getState</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">128</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">128</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>LeaderInitiatedRecoveryOnCommitTest</name> extends <name>BasicDistributedZkTest</name>
     <call><name>sendCommitWithRetry</name><argument_list>(<argument><expr><name>replica</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><name>sleepMsBeforeHealPartition</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <expr_stmt><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>updateClusterState</name><argument_list>()</argument_list></call></expr>;</expr_stmt> <comment type="line">// get the latest state</comment>
    <expr_stmt><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>forceUpdateCollection</name><argument_list>(<argument><expr><name>testCollectionName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// get the latest state</comment>
     <expr_stmt><expr><name>leader</name> <operator>=</operator> <call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getLeaderRetry</name><argument_list>(<argument><expr><name>testCollectionName</name></expr></argument>, <argument><expr><literal type="string">"shard1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertSame</name><argument_list>(<argument><expr><literal type="string">"Leader was not active"</literal></expr></argument>, <argument><expr><name><name>Replica</name><operator>.</operator><name>State</name><operator>.</operator><name>ACTIVE</name></name></expr></argument>, <argument><expr><call><name><name>leader</name><operator>.</operator><name>getState</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>MigrateRouteKeyTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>MigrateRouteKeyTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f9566e30f08</name><operator>..</operator><name>c09e0d1dc6a</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>MigrateRouteKeyTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>MigrateRouteKeyTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">72</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">72</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MigrateRouteKeyTest</name> extends <name>BasicDistributedZkTest</name> <block>{
     <expr><name>boolean</name> <name>ruleRemoved</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;
     <name>long</name> <name>expiryTime</name> <operator>=</operator> <name>finishTime</name> <operator>+</operator> <call><name><name>TimeUnit</name><operator>.</operator><name>NANOSECONDS</name><operator>.</operator><name>convert</name></name><argument_list>(<argument><expr><literal type="number">60</literal></expr></argument>, <argument><expr><name><name>TimeUnit</name><operator>.</operator><name>SECONDS</name></name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <while>while <condition>(<expr><call><name><name>System</name><operator>.</operator><name>nanoTime</name></name><argument_list>()</argument_list></call> <operator>&lt;</operator> <name>expiryTime</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name>getCommonCloudSolrClient</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZkStateReader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>updateClusterState</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>getCommonCloudSolrClient</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZkStateReader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>forceUpdateCollection</name><argument_list>(<argument><expr><name><name>AbstractDistribZkTestBase</name><operator>.</operator><name>DEFAULT_COLLECTION</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><name>state</name> <operator>=</operator> <call><name>getCommonCloudSolrClient</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZkStateReader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterState</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><name>slice</name> <operator>=</operator> <call><name><name>state</name><operator>.</operator><name>getSlice</name></name><argument_list>(<argument><expr><name><name>AbstractDistribZkTestBase</name><operator>.</operator><name>DEFAULT_COLLECTION</name></name></expr></argument>, <argument><expr><name>SHARD2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>RoutingRule</name></argument>&gt;</argument_list></name></type> <name>routingRules</name> <init>= <expr><call><name><name>slice</name><operator>.</operator><name>getRoutingRules</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">186</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">186</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>MigrateRouteKeyTest</name> extends <name>BasicDistributedZkTest</name> <block>{
       <expr><call><name><name>log</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Response from target collection: "</literal> <operator>+</operator> <name>response</name></expr></argument>)</argument_list></call></expr>;
       <call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"DocCount on target collection does not match"</literal></expr></argument>, <argument><expr><name><name>splitKeyCount</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><call><name><name>response</name><operator>.</operator><name>getResults</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getNumFound</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
 
      <expr_stmt><expr><call><name>getCommonCloudSolrClient</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZkStateReader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>updateClusterState</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>getCommonCloudSolrClient</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZkStateReader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>forceUpdateCollection</name><argument_list>(<argument><expr><name><name>AbstractDistribZkTestBase</name><operator>.</operator><name>DEFAULT_COLLECTION</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>ClusterState</name></type> <name>state</name> <init>= <expr><call><name>getCommonCloudSolrClient</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZkStateReader</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterState</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>Slice</name></type> <name>slice</name> <init>= <expr><call><name><name>state</name><operator>.</operator><name>getSlice</name></name><argument_list>(<argument><expr><name><name>AbstractDistribZkTestBase</name><operator>.</operator><name>DEFAULT_COLLECTION</name></name></expr></argument>, <argument><expr><name>SHARD2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><literal type="string">"Routing rule map is null"</literal></expr></argument>, <argument><expr><call><name><name>slice</name><operator>.</operator><name>getRoutingRules</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>OverseerTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>OverseerTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">66a214f7fcb</literal><operator>..</operator><literal type="number">85a88ec3ae9</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>OverseerTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>OverseerTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">439</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">439</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>OverseerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
       <expr><name>int</name> <name>cloudStateSliceCount</name> <operator>=</operator> <literal type="number">0</literal></expr>;</block></expr></expr_stmt>
       <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">40</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
         <expr_stmt><expr><name>cloudStateSliceCount</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>reader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         <decl_stmt><decl><type><name>ClusterState</name></type> <name>state</name> <init>= <expr><call><name><name>reader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Slice</name></argument>&gt;</argument_list></name></type> <name>slices</name> <init>= <expr><call><name><name>state</name><operator>.</operator><name>getSlicesMap</name></name><argument_list>(<argument><expr><name>collection</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <if_stmt><if>if <condition>(<expr><name>slices</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">524</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">523</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>OverseerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
   <expr><specifier>private</specifier> <name>void</name> <call><name>waitForCollections</name><argument_list>(<argument><expr><name>ZkStateReader</name> <name>stateReader</name></expr></argument>, <argument><expr><name>String</name><operator>...</operator> <name>collections</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>InterruptedException</name></expr></argument>, <argument><expr><name>KeeperException</name> <block>{
     <expr><name>int</name> <name>maxIterations</name> <operator>=</operator> <literal type="number">100</literal></expr></block></expr></argument></throws></expr>;</block></expr></expr_stmt>
     <while>while <condition>(<expr><literal type="number">0</literal> <operator>&lt;</operator> <name>maxIterations</name><operator>--</operator></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>stateReader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><specifier>final</specifier> <name>ClusterState</name></type> <name>state</name> <init>= <expr><call><name><name>stateReader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>availableCollections</name> <init>= <expr><call><name><name>state</name><operator>.</operator><name>getCollections</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>int</name></type> <name>availableCount</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">605</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">603</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>OverseerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
   <expr><specifier>private</specifier> <name>void</name> <call><name>verifyShardLeader</name><argument_list>(<argument><expr><name>ZkStateReader</name> <name>reader</name></expr></argument>, <argument><expr><name>String</name> <name>collection</name></expr></argument>, <argument><expr><name>String</name> <name>shard</name></expr></argument>, <argument><expr><name>String</name> <name>expectedCore</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>InterruptedException</name></expr></argument>, <argument><expr><name>KeeperException</name> <block>{
     <expr><name>int</name> <name>maxIterations</name> <operator>=</operator> <literal type="number">200</literal></expr></block></expr></argument></throws></expr>;</block></expr></expr_stmt>
     <while>while<condition>(<expr><name>maxIterations</name><operator>--</operator><operator>&gt;</operator><literal type="number">0</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>reader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt> <comment type="line">// poll state</comment>
       <decl_stmt><decl><type><name>ZkNodeProps</name></type> <name>props</name> <init>=  <expr><call><name><name>reader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getLeader</name><argument_list>(<argument><expr><name>collection</name></expr></argument>, <argument><expr><name>shard</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <if_stmt><if>if<condition>(<expr><name>props</name><operator>!=</operator><literal type="null">null</literal></expr>)</condition> <block>{<block_content>
         <if_stmt><if>if<condition>(<expr><call><name><name>expectedCore</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><call><name><name>props</name><operator>.</operator><name>getStr</name></name><argument_list>(<argument><expr><name><name>ZkStateReader</name><operator>.</operator><name>CORE_NAME_PROP</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">832</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">829</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>OverseerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
       <expr><name>killerThread</name> <operator>=</operator> <operator>new</operator> <call><name>Thread</name><argument_list>(<argument><expr><name>killer</name></expr></argument>)</argument_list></call></expr>;
       <call><name><name>killerThread</name><operator>.</operator><name>start</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
 
      <expr_stmt><expr><name>reader</name> <operator>=</operator> <operator>new</operator> <call><name>ZkStateReader</name><argument_list>(<argument><expr><name>controllerClient</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">//no watches, we'll poll</comment>
      <expr_stmt><expr><name>reader</name> <operator>=</operator> <operator>new</operator> <call><name>ZkStateReader</name><argument_list>(<argument><expr><name>controllerClient</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>reader</name><operator>.</operator><name>createClusterStateWatchersAndUpdate</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
       <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>atLeast</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
         <expr_stmt><expr><call><name><name>killCounter</name><operator>.</operator><name>incrementAndGet</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt> <comment type="line">//for each round allow 1 kill</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">905</literal></expr><operator>,</operator><expr><literal type="number">9</literal> <operator>+</operator><literal type="number">903</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>OverseerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
       <expr><name>mockController</name> <operator>=</operator> <operator>new</operator> <call><name>MockZKController</name><argument_list>(<argument><expr><call><name><name>server</name><operator>.</operator><name>getZkAddress</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"node1"</literal></expr></argument>)</argument_list></call></expr>;
       <call><name><name>mockController</name><operator>.</operator><name>publishState</name></name><argument_list>(<argument><expr><name>collection</name></expr></argument>, <argument><expr><literal type="string">"core1"</literal></expr></argument>, <argument><expr><literal type="string">"core_node1"</literal></expr></argument>, <argument><expr><name><name>Replica</name><operator>.</operator><name>State</name><operator>.</operator><name>RECOVERING</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
 
      <while>while <condition>(<expr><name>version</name> <operator>==</operator> <call><name>getClusterStateVersion</name><argument_list>(<argument><expr><name>controllerClient</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content><empty_stmt>;</empty_stmt></block_content></block></while>
      <while>while <condition>(<expr><name>version</name> <operator>==</operator> <call><name><name>reader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZkClusterStateVersion</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></while>
       
      <expr_stmt><expr><call><name><name>reader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>ClusterState</name></type> <name>state</name> <init>= <expr><call><name><name>reader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       
       <decl_stmt><decl><type><name>int</name></type> <name>numFound</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1048</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1047</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>OverseerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
         <expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>overseers</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</block></expr></expr_stmt>
 
         <while>while <condition>(<expr><literal type="boolean">true</literal></expr>)</condition>  <block>{<block_content>
          <expr_stmt><expr><call><name><name>reader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
           <decl_stmt><decl><type><name>ClusterState</name></type> <name>state</name> <init>= <expr><call><name><name>reader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
           <if_stmt><if>if <condition>(<expr><call><name><name>state</name><operator>.</operator><name>hasCollection</name></name><argument_list>(<argument><expr><literal type="string">"perf_sentinel"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
             <break>break;</break>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ReplicaPropertiesBase</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ReplicaPropertiesBase</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8347af09372</literal><operator>..</operator><name>fe83a8431a3</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ReplicaPropertiesBase</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ReplicaPropertiesBase</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">56</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">56</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>ReplicaPropertiesBase</name> extends <name>AbstractFullDistribZkTestBas</name>
     <name>ClusterState</name> <name>clusterState</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>Replica</name></type> <name>replica</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
     <for>for <control>(<init><decl><type><name>int</name></type> <name>idx</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>idx</name> <operator>&lt;</operator> <literal type="number">300</literal></expr>;</condition> <incr><expr><operator>++</operator><name>idx</name></expr></incr>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>client</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>updateClusterState</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><name>clusterState</name> <operator>=</operator> <call><name><name>client</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterState</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><name>replica</name> <operator>=</operator> <call><name><name>clusterState</name><operator>.</operator><name>getReplica</name></name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>, <argument><expr><name>replicaName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <if_stmt><if>if <condition>(<expr><name>replica</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">82</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">81</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>ReplicaPropertiesBase</name> extends <name>AbstractFullDistribZkTestBas</name>
     <name>ClusterState</name> <name>clusterState</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
 
     <for>for <control>(<init><decl><type><name>int</name></type> <name>idx</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>idx</name> <operator>&lt;</operator> <literal type="number">300</literal></expr>;</condition> <incr><expr><operator>++</operator><name>idx</name></expr></incr>)</control> <block>{<block_content> <comment type="line">// Keep trying while Overseer writes the ZK state for up to 30 seconds.</comment>
      <expr_stmt><expr><call><name><name>client</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>updateClusterState</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><name>clusterState</name> <operator>=</operator> <call><name><name>client</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterState</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><name>replica</name> <operator>=</operator> <call><name><name>clusterState</name><operator>.</operator><name>getReplica</name></name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>, <argument><expr><name>replicaName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <if_stmt><if>if <condition>(<expr><name>replica</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">116</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">114</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>ReplicaPropertiesBase</name> extends <name>AbstractFullDistribZkTestBas</name>
 
     <name>DocCollection</name> <name>col</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
     <for>for <control>(<init><decl><type><name>int</name></type> <name>idx</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>idx</name> <operator>&lt;</operator> <literal type="number">300</literal></expr>;</condition> <incr><expr><operator>++</operator><name>idx</name></expr></incr>)</control> <block>{<block_content>
      <expr_stmt><expr><call><name><name>client</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>updateClusterState</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>ClusterState</name></type> <name>clusterState</name> <init>= <expr><call><name><name>client</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterState</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
       <expr_stmt><expr><name>col</name> <operator>=</operator> <call><name><name>clusterState</name><operator>.</operator><name>getCollection</name></name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ShardSplitTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ShardSplitTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">22735abdb25</literal><operator>..</operator><literal type="number">6d4b9cc3b8f</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ShardSplitTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ShardSplitTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">416</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">416</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>ShardSplitTest</name> extends <name>BasicDistributedZkTest</name> <block>{
     <expr><name>int</name> <name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</block></expr></expr_stmt>
     <for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">10</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
       <decl_stmt><decl><type><name>ZkStateReader</name></type> <name>zkStateReader</name> <init>= <expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><name>clusterState</name> <operator>=</operator> <call><name><name>zkStateReader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><name>slice1_0</name> <operator>=</operator> <call><name><name>clusterState</name><operator>.</operator><name>getSlice</name></name><argument_list>(<argument><expr><name><name>AbstractDistribZkTestBase</name><operator>.</operator><name>DEFAULT_COLLECTION</name></name></expr></argument>, <argument><expr><literal type="string">"shard1_0"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><name>slice1_1</name> <operator>=</operator> <call><name><name>clusterState</name><operator>.</operator><name>getSlice</name></name><argument_list>(<argument><expr><name><name>AbstractDistribZkTestBase</name><operator>.</operator><name>DEFAULT_COLLECTION</name></name></expr></argument>, <argument><expr><literal type="string">"shard1_1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>SyncSliceTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>SyncSliceTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>e753be9f459</name><operator>..</operator><literal type="number">362009e684b</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>SyncSliceTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>SyncSliceTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">218</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">218</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>SyncSliceTest</name> extends <name>AbstractFullDistribZkTestBase</name> <block>{
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">60</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content> 
       <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">3000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>ZkStateReader</name></type> <name>zkStateReader</name> <init>= <expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>ClusterState</name></type> <name>clusterState</name> <init>= <expr><call><name><name>zkStateReader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>DocCollection</name></type> <name>collection1</name> <init>= <expr><call><name><name>clusterState</name><operator>.</operator><name>getCollection</name></name><argument_list>(<argument><expr><literal type="string">"collection1"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>Slice</name></type> <name>slice</name> <init>= <expr><call><name><name>collection1</name><operator>.</operator><name>getSlice</name></name><argument_list>(<argument><expr><literal type="string">"shard1"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestCloudDeleteByQuery</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestCloudDeleteByQuery</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>a0bb42a3ee6</name><operator>..</operator><name>f4436eb9e65</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestCloudDeleteByQuery</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestCloudDeleteByQuery</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">119</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">119</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestCloudDeleteByQuery</name> extends <name>SolrCloudTestCase</name> <block>{
       <expr><name>String</name> <name>nodeKey</name> <operator>=</operator> <call><name><name>jettyURL</name><operator>.</operator><name>getHost</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">":"</literal> <operator>+</operator> <call><name><name>jettyURL</name><operator>.</operator><name>getPort</name></name><argument_list>()</argument_list></call> <operator>+</operator> <call><name><name>jettyURL</name><operator>.</operator><name>getPath</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>replace</name><argument_list>(<argument><expr><literal type="string">"/"</literal></expr></argument>,<argument><expr><literal type="string">"_"</literal></expr></argument>)</argument_list></call></expr>;
       <call><name><name>urlMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>nodeKey</name></expr></argument>, <argument><expr><call><name><name>jettyURL</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     </block_content>}</block></for>
    <call><name><name>zkStateReader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>ClusterState</name></type> <name>clusterState</name> <init>= <expr><call><name><name>zkStateReader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <for>for <control>(<init><decl><type><name>Slice</name></type> <name>slice</name> <range>: <expr><call><name><name>clusterState</name><operator>.</operator><name>getSlices</name></name><argument_list>(<argument><expr><name>COLLECTION_NAME</name></expr></argument>)</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
       <decl_stmt><decl><type><name>String</name></type> <name>shardName</name> <init>= <expr><call><name><name>slice</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestCollectionAPI</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestCollectionAPI</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>b203f02c877</name><operator>..</operator><literal type="number">45b6f733bec</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestCollectionAPI</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestCollectionAPI</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">625</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">625</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestCollectionAPI</name> extends <name>ReplicaPropertiesBase</name> <block>{
           <expr><operator>.</operator><call><name>setCollectionName</name><argument_list>(<argument><expr><literal type="string">"testClusterStateMigration"</literal></expr></argument>)</argument_list></call>
           <operator>.</operator><call><name>process</name><argument_list>(<argument><expr><name>client</name></expr></argument>)</argument_list></call></expr>;
 
      <call><name><name>client</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>updateClusterState</name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>client</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>forceUpdateCollection</name><argument_list>(<argument><expr><literal type="string">"testClusterStateMigration"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
       <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><call><name><name>client</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterState</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCollection</name><argument_list>(<argument><expr><literal type="string">"testClusterStateMigration"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getStateFormat</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">735</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">735</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestCollectionAPI</name> extends <name>ReplicaPropertiesBase</name> <block>{
   <expr><specifier>private</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name> <call><name>getProps</name><argument_list>(<argument><expr><name>CloudSolrClient</name> <name>client</name></expr></argument>, <argument><expr><name>String</name> <name>collectionName</name></expr></argument>, <argument><expr><name>String</name> <name>replicaName</name></expr></argument>, <argument><expr><name>String</name><operator>...</operator> <name>props</name></expr></argument>)</argument_list></call>
       <throws>throws <argument><expr><name>KeeperException</name></expr></argument>, <argument><expr><name>InterruptedException</name> <block>{
 
    <expr><call><name><name>client</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>updateClusterState</name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;
    <call><name><name>client</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>forceUpdateCollection</name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>ClusterState</name></type> <name>clusterState</name> <init>= <expr><call><name><name>client</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterState</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>Replica</name></type> <name>replica</name> <init>= <expr><call><name><name>clusterState</name><operator>.</operator><name>getReplica</name></name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>, <argument><expr><name>replicaName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
     <if_stmt><if>if <condition>(<expr><name>replica</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestLeaderInitiatedRecoveryThread</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestLeaderInitiatedRecoveryThread</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>f2c58cf808a</name><operator>..</operator><literal type="number">11858f828b7</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestLeaderInitiatedRecoveryThread</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestLeaderInitiatedRecoveryThread</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">175</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">175</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestLeaderInitiatedRecoveryThread</name> extends <name>AbstractFullDistribZkTest</name>
 
     <name>timeOut</name> <operator>=</operator> <operator>new</operator> <call><name>TimeOut</name><argument_list>(<argument><expr><literal type="number">30</literal></expr></argument>, <argument><expr><name><name>TimeUnit</name><operator>.</operator><name>SECONDS</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <while>while <condition>(<expr><operator>!</operator><call><name><name>timeOut</name><operator>.</operator><name>hasTimedOut</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>updateClusterState</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>Replica</name></type> <name>r</name> <init>= <expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterState</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getReplica</name><argument_list>(<argument><expr><name>DEFAULT_COLLECTION</name></expr></argument>, <argument><expr><call><name><name>replica</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <if_stmt><if>if <condition>(<expr><call><name><name>r</name><operator>.</operator><name>getState</name></name><argument_list>()</argument_list></call> <operator>==</operator> <name><name>Replica</name><operator>.</operator><name>State</name><operator>.</operator><name>DOWN</name></name></expr>)</condition> <block>{<block_content>
         <break>break;</break>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestMiniSolrCloudCluster</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestMiniSolrCloudCluster</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">9be89190d42</literal><operator>..</operator><literal type="number">880051b1f83</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestMiniSolrCloudCluster</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestMiniSolrCloudCluster</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">176</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">176</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestMiniSolrCloudCluster</name> extends <name>LuceneTestCase</name> <block>{
       <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>rsp</name><operator>.</operator><name>getResults</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getNumFound</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
       <comment type="line">// remove a server not hosting any replicas</comment>
      <call><name><name>zkStateReader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>forceUpdateCollection</name></name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>ClusterState</name></type> <name>clusterState</name> <init>= <expr><call><name><name>zkStateReader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>JettySolrRunner</name></argument>&gt;</argument_list></name></type> <name>jettyMap</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>JettySolrRunner</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <for>for <control>(<init><decl><type><name>JettySolrRunner</name></type> <name>jetty</name> <range>: <expr><call><name><name>miniCluster</name><operator>.</operator><name>getJettySolrRunners</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">321</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">321</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestMiniSolrCloudCluster</name> extends <name>LuceneTestCase</name> <block>{
       <try>try <init>(<decl><type><name>SolrZkClient</name></type> <name>zkClient</name> <init>= <expr><operator>new</operator> <call><name>SolrZkClient</name>
           <argument_list>(<argument><expr><call><name><name>miniCluster</name><operator>.</operator><name>getZkServer</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZkAddress</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>AbstractZkTestCase</name><operator>.</operator><name>TIMEOUT</name></name></expr></argument>, <argument><expr><name><name>AbstractZkTestCase</name><operator>.</operator><name>TIMEOUT</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;
           <decl><type><name>ZkStateReader</name></type> <name>zkStateReader</name> <init>= <expr><operator>new</operator> <call><name>ZkStateReader</name><argument_list>(<argument><expr><name>zkClient</name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
        
        <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>createClusterStateWatchersAndUpdate</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

         <comment type="line">// wait for collection to appear</comment>
         <expr_stmt><expr><call><name><name>AbstractDistribZkTestBase</name><operator>.</operator><name>waitForRecoveriesToFinish</name></name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>, <argument><expr><name>zkStateReader</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="number">330</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">368</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">369</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestMiniSolrCloudCluster</name> extends <name>LuceneTestCase</name> <block>{
       <try>try <init>(<decl><type><name>SolrZkClient</name></type> <name>zkClient</name> <init>= <expr><operator>new</operator> <call><name>SolrZkClient</name>
           <argument_list>(<argument><expr><call><name><name>miniCluster</name><operator>.</operator><name>getZkServer</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZkAddress</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>AbstractZkTestCase</name><operator>.</operator><name>TIMEOUT</name></name></expr></argument>, <argument><expr><name><name>AbstractZkTestCase</name><operator>.</operator><name>TIMEOUT</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;
           <decl><type><name>ZkStateReader</name></type> <name>zkStateReader</name> <init>= <expr><operator>new</operator> <call><name>ZkStateReader</name><argument_list>(<argument><expr><name>zkClient</name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
        <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>createClusterStateWatchersAndUpdate</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name><name>AbstractDistribZkTestBase</name><operator>.</operator><name>waitForRecoveriesToFinish</name></name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>, <argument><expr><name>zkStateReader</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="number">330</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
         <comment type="line">// modify collection</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">385</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">387</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestMiniSolrCloudCluster</name> extends <name>LuceneTestCase</name> <block>{
         }</block>
 
         <comment type="line">// the test itself</comment>
        <call><name><name>zkStateReader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>forceUpdateCollection</name></name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <decl_stmt><decl><type><specifier>final</specifier> <name>ClusterState</name></type> <name>clusterState</name> <init>= <expr><call><name><name>zkStateReader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
         <decl_stmt><decl><type><specifier>final</specifier> <name><name>HashSet</name><argument_list type="generic">&lt;<argument><name>Integer</name></argument>&gt;</argument_list></name></type> <name>leaderIndices</name> <init>= <expr><operator>new</operator> <call><name><name>HashSet</name><argument_list type="generic">&lt;<argument><name>Integer</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">444</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">446</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestMiniSolrCloudCluster</name> extends <name>LuceneTestCase</name> <block>{
         }</block>
         <call><name><name>AbstractDistribZkTestBase</name><operator>.</operator><name>waitForRecoveriesToFinish</name></name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>, <argument><expr><name>zkStateReader</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="number">330</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
        <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>forceUpdateCollection</name></name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
         <comment type="line">// re-query collection</comment>
         <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">489</literal></expr><operator>,</operator><expr><literal type="number">32</literal> <operator>+</operator><literal type="number">491</literal></expr><operator>,</operator><expr><literal type="number">29</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestMiniSolrCloudCluster</name> extends <name>LuceneTestCase</name> <block>{
         }</block></expr></expr_stmt>
       </block_content>}</block>
 
      <try>try <init>(<decl><type><name>SolrZkClient</name></type> <name>zkClient</name> <init>= <expr><operator>new</operator> <call><name>SolrZkClient</name>
          <argument_list>(<argument><expr><call><name><name>miniCluster</name><operator>.</operator><name>getZkServer</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZkAddress</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>AbstractZkTestCase</name><operator>.</operator><name>TIMEOUT</name></name></expr></argument>, <argument><expr><literal type="number">45000</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;
          <decl><type><name>ZkStateReader</name></type> <name>zkStateReader</name> <init>= <expr><operator>new</operator> <call><name>ZkStateReader</name><argument_list>(<argument><expr><name>zkClient</name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
        <expr_stmt><expr><call><name><name>AbstractDistribZkTestBase</name><operator>.</operator><name>waitForRecoveriesToFinish</name></name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>, <argument><expr><name>zkStateReader</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="number">330</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>ZkStateReader</name></type> <name>zkStateReader</name> <init>= <expr><call><name><name>cloudSolrClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>AbstractDistribZkTestBase</name><operator>.</operator><name>waitForRecoveriesToFinish</name></name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>, <argument><expr><name>zkStateReader</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="number">330</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
        <comment type="line">// add some documents, then optimize to get merged-sorted segments</comment>
        <expr_stmt><expr><call><name><name>tstes</name><operator>.</operator><name>addDocuments</name></name><argument_list>(<argument><expr><name>cloudSolrClient</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <comment type="line">// add some documents, then optimize to get merged-sorted segments</comment>
      <expr_stmt><expr><call><name><name>tstes</name><operator>.</operator><name>addDocuments</name></name><argument_list>(<argument><expr><name>cloudSolrClient</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
        <comment type="line">// CommonParams.SEGMENT_TERMINATE_EARLY parameter intentionally absent</comment>
        <expr_stmt><expr><call><name><name>tstes</name><operator>.</operator><name>queryTimestampDescending</name></name><argument_list>(<argument><expr><name>cloudSolrClient</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <comment type="line">// CommonParams.SEGMENT_TERMINATE_EARLY parameter intentionally absent</comment>
      <expr_stmt><expr><call><name><name>tstes</name><operator>.</operator><name>queryTimestampDescending</name></name><argument_list>(<argument><expr><name>cloudSolrClient</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
        <comment type="line">// add a few more documents, but don't optimize to have some not-merge-sorted segments</comment>
        <expr_stmt><expr><call><name><name>tstes</name><operator>.</operator><name>addDocuments</name></name><argument_list>(<argument><expr><name>cloudSolrClient</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <comment type="line">// add a few more documents, but don't optimize to have some not-merge-sorted segments</comment>
      <expr_stmt><expr><call><name><name>tstes</name><operator>.</operator><name>addDocuments</name></name><argument_list>(<argument><expr><name>cloudSolrClient</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
        <comment type="line">// CommonParams.SEGMENT_TERMINATE_EARLY parameter now present</comment>
        <expr_stmt><expr><call><name><name>tstes</name><operator>.</operator><name>queryTimestampDescendingSegmentTerminateEarlyYes</name></name><argument_list>(<argument><expr><name>cloudSolrClient</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>tstes</name><operator>.</operator><name>queryTimestampDescendingSegmentTerminateEarlyNo</name></name><argument_list>(<argument><expr><name>cloudSolrClient</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <comment type="line">// CommonParams.SEGMENT_TERMINATE_EARLY parameter now present</comment>
      <expr_stmt><expr><call><name><name>tstes</name><operator>.</operator><name>queryTimestampDescendingSegmentTerminateEarlyYes</name></name><argument_list>(<argument><expr><name>cloudSolrClient</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>tstes</name><operator>.</operator><name>queryTimestampDescendingSegmentTerminateEarlyNo</name></name><argument_list>(<argument><expr><name>cloudSolrClient</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
        <comment type="line">// CommonParams.SEGMENT_TERMINATE_EARLY parameter present but it won't be used</comment>
        <expr_stmt><expr><call><name><name>tstes</name><operator>.</operator><name>queryTimestampDescendingSegmentTerminateEarlyYesGrouped</name></name><argument_list>(<argument><expr><name>cloudSolrClient</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>tstes</name><operator>.</operator><name>queryTimestampAscendingSegmentTerminateEarlyYes</name></name><argument_list>(<argument><expr><name>cloudSolrClient</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// uses a sort order that is _not_ compatible with the merge sort order</comment>
      <comment type="line">// CommonParams.SEGMENT_TERMINATE_EARLY parameter present but it won't be used</comment>
      <expr_stmt><expr><call><name><name>tstes</name><operator>.</operator><name>queryTimestampDescendingSegmentTerminateEarlyYesGrouped</name></name><argument_list>(<argument><expr><name>cloudSolrClient</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>tstes</name><operator>.</operator><name>queryTimestampAscendingSegmentTerminateEarlyYes</name></name><argument_list>(<argument><expr><name>cloudSolrClient</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// uses a sort order that is _not_ compatible with the merge sort order</comment>
 
        <comment type="line">// delete the collection we created earlier</comment>
        <expr_stmt><expr><call><name><name>miniCluster</name><operator>.</operator><name>deleteCollection</name></name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>AbstractDistribZkTestBase</name><operator>.</operator><name>waitForCollectionToDisappear</name></name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>, <argument><expr><name>zkStateReader</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="number">330</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></try>
      <comment type="line">// delete the collection we created earlier</comment>
      <expr_stmt><expr><call><name><name>miniCluster</name><operator>.</operator><name>deleteCollection</name></name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>AbstractDistribZkTestBase</name><operator>.</operator><name>waitForCollectionToDisappear</name></name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>, <argument><expr><name>zkStateReader</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="number">330</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block>
     <finally>finally <block>{<block_content>
       <expr_stmt><expr><call><name><name>miniCluster</name><operator>.</operator><name>shutdown</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestMiniSolrCloudClusterBase</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestMiniSolrCloudClusterBase</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">54b21dff5de</literal><operator>..</operator><literal type="number">18285617d9a</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestMiniSolrCloudClusterBase</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestMiniSolrCloudClusterBase</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">146</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">146</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestMiniSolrCloudClusterBase</name> extends <name>LuceneTestCase</name> <block>{
       <try>try <init>(<decl><type><name>SolrZkClient</name></type> <name>zkClient</name> <init>= <expr><operator>new</operator> <call><name>SolrZkClient</name>
           <argument_list>(<argument><expr><call><name><name>miniCluster</name><operator>.</operator><name>getZkServer</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZkAddress</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>AbstractZkTestCase</name><operator>.</operator><name>TIMEOUT</name></name></expr></argument>, <argument><expr><name><name>AbstractZkTestCase</name><operator>.</operator><name>TIMEOUT</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;
            <decl><type><name>ZkStateReader</name></type> <name>zkStateReader</name> <init>= <expr><operator>new</operator> <call><name>ZkStateReader</name><argument_list>(<argument><expr><name>zkClient</name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
        <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>createClusterStateWatchersAndUpdate</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name><name>AbstractDistribZkTestBase</name><operator>.</operator><name>waitForRecoveriesToFinish</name></name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>, <argument><expr><name>zkStateReader</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="number">330</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
         <comment type="line">// modify/query collection</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">160</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">161</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestMiniSolrCloudClusterBase</name> extends <name>LuceneTestCase</name> <block>{
         <expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name><name>rsp</name><operator>.</operator><name>getResults</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getNumFound</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
         <comment type="line">// remove a server not hosting any replicas</comment>
        <call><name><name>zkStateReader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>forceUpdateCollection</name></name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <decl_stmt><decl><type><name>ClusterState</name></type> <name>clusterState</name> <init>= <expr><call><name><name>zkStateReader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>JettySolrRunner</name></argument>&gt;</argument_list></name></type> <name>jettyMap</name> <init>= <expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>JettySolrRunner</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
         <for>for <control>(<init><decl><type><name>JettySolrRunner</name></type> <name>jetty</name> <range>: <expr><call><name><name>miniCluster</name><operator>.</operator><name>getJettySolrRunners</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestRandomRequestDistribution</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestRandomRequestDistribution</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">25ffe842569</literal><operator>..</operator><literal type="number">256774d08c3</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestRandomRequestDistribution</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestRandomRequestDistribution</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">88</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">88</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestRandomRequestDistribution</name> extends <name>AbstractFullDistribZkTestBase</name>
     <call><name>waitForRecoveriesToFinish</name><argument_list>(<argument><expr><literal type="string">"a1x2"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>waitForRecoveriesToFinish</name><argument_list>(<argument><expr><literal type="string">"b1x1"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <expr_stmt><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>updateClusterState</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>forceUpdateCollection</name><argument_list>(<argument><expr><literal type="string">"b1x1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>ClusterState</name></type> <name>clusterState</name> <init>= <expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterState</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>DocCollection</name></type> <name>b1x1</name> <init>= <expr><call><name><name>clusterState</name><operator>.</operator><name>getCollection</name></name><argument_list>(<argument><expr><literal type="string">"b1x1"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">137</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">137</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestRandomRequestDistribution</name> extends <name>AbstractFullDistribZkTestBase</name>
 
     <call><name>waitForRecoveriesToFinish</name><argument_list>(<argument><expr><literal type="string">"football"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
    <expr_stmt><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>updateClusterState</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>forceUpdateCollection</name><argument_list>(<argument><expr><literal type="string">"football"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>Replica</name></type> <name>leader</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>Replica</name></type> <name>notLeader</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestRebalanceLeaders</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestRebalanceLeaders</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">3c720bfeddf</literal><operator>..</operator><literal type="number">9208229976a</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestRebalanceLeaders</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestRebalanceLeaders</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">310</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">310</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestRebalanceLeaders</name> extends <name>AbstractFullDistribZkTestBase</name> <block>{
     <expr><name>TimeOut</name> <name>timeout</name> <operator>=</operator> <operator>new</operator> <call><name>TimeOut</name><argument_list>(<argument><expr><name>timeoutMs</name></expr></argument>, <argument><expr><name><name>TimeUnit</name><operator>.</operator><name>MILLISECONDS</name></name></expr></argument>)</argument_list></call></expr>;</block></expr></expr_stmt>
     <while>while <condition>(<expr><operator>!</operator> <call><name><name>timeout</name><operator>.</operator><name>hasTimedOut</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
       <expr_stmt><expr><name>goAgain</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>updateClusterState</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Slice</name></argument>&gt;</argument_list></name></type> <name>slices</name> <init>= <expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterState</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCollection</name><argument_list>(<argument><expr><name>COLLECTION_NAME</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getSlicesMap</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
 
       <for>for <control>(<init><decl><type><name><name>Map</name><operator>.</operator><name><name>Entry</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Replica</name></argument>&gt;</argument_list></name></name></type> <name>ent</name> <range>: <expr><call><name><name>expected</name><operator>.</operator><name>entrySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestReplicaProperties</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestReplicaProperties</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">5cc15e2ba36</literal><operator>..</operator><name>fc2a7e25740</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestReplicaProperties</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestReplicaProperties</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">192</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">192</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestReplicaProperties</name> extends <name>ReplicaPropertiesBase</name> <block>{
     <expr><name>String</name> <name>lastFailMsg</name> <operator>=</operator> <literal type="string">""</literal></expr>;</block></expr></expr_stmt>
     <for>for <control>(<init><decl><type><name>int</name></type> <name>idx</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>idx</name> <operator>&lt;</operator> <literal type="number">300</literal></expr>;</condition> <incr><expr><operator>++</operator><name>idx</name></expr></incr>)</control> <block>{<block_content> <comment type="line">// Keep trying while Overseer writes the ZK state for up to 30 seconds.</comment>
       <expr_stmt><expr><name>lastFailMsg</name> <operator>=</operator> <literal type="string">""</literal></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>client</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>updateClusterState</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>ClusterState</name></type> <name>clusterState</name> <init>= <expr><call><name><name>client</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterState</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <for>for <control>(<init><decl><type><name>Slice</name></type> <name>slice</name> <range>: <expr><call><name><name>clusterState</name><operator>.</operator><name>getSlices</name></name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>)</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
         <decl_stmt><decl><type><name>Boolean</name></type> <name>foundLeader</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestSolrCloudWithKerberosAlt</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestSolrCloudWithKerberosAlt</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">4d3ee30ad69</literal><operator>..</operator><name>f4dc97de95b</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestSolrCloudWithKerberosAlt</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>TestSolrCloudWithKerberosAlt</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">205</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">205</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>TestSolrCloudWithKerberosAlt</name> extends <name>LuceneTestCase</name> <block>{
       <try>try <init>(<decl><type><name>SolrZkClient</name></type> <name>zkClient</name> <init>= <expr><operator>new</operator> <call><name>SolrZkClient</name>
           <argument_list>(<argument><expr><call><name><name>miniCluster</name><operator>.</operator><name>getZkServer</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZkAddress</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>AbstractZkTestCase</name><operator>.</operator><name>TIMEOUT</name></name></expr></argument>, <argument><expr><name><name>AbstractZkTestCase</name><operator>.</operator><name>TIMEOUT</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;
            <decl><type><name>ZkStateReader</name></type> <name>zkStateReader</name> <init>= <expr><operator>new</operator> <call><name>ZkStateReader</name><argument_list>(<argument><expr><name>zkClient</name></expr></argument>)</argument_list></call></expr></init></decl>)</init> <block>{<block_content>
        <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>createClusterStateWatchersAndUpdate</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name><name>AbstractDistribZkTestBase</name><operator>.</operator><name>waitForRecoveriesToFinish</name></name><argument_list>(<argument><expr><name>collectionName</name></expr></argument>, <argument><expr><name>zkStateReader</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="number">330</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
         <comment type="line">// modify/query collection</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>UnloadDistributedZkTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>UnloadDistributedZkTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>dd337fb8530</name><operator>..</operator><literal type="number">7d53feebf73</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>UnloadDistributedZkTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>UnloadDistributedZkTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">187</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">187</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>UnloadDistributedZkTest</name> extends <name>BasicDistributedZkTest</name> <block>{
     }</block>
     <name>ZkStateReader</name> <name>zkStateReader</name> <operator>=</operator> <call><name>getCommonCloudSolrClient</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getZkStateReader</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     
    <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>forceUpdateCollection</name></name><argument_list>(<argument><expr><literal type="string">"unloadcollection"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>int</name></type> <name>slices</name> <init>= <expr><call><name><name>zkStateReader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCollection</name><argument_list>(<argument><expr><literal type="string">"unloadcollection"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getSlices</name><argument_list>()</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>slices</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">203</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">203</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>UnloadDistributedZkTest</name> extends <name>BasicDistributedZkTest</name> <block>{
       <expr><call><name><name>createCmd</name><operator>.</operator><name>setDataDir</name></name><argument_list>(<argument><expr><call><name>getDataDir</name><argument_list>(<argument><expr><name>core2dataDir</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
       <call><name><name>adminClient</name><operator>.</operator><name>request</name></name><argument_list>(<argument><expr><name>createCmd</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
     </block_content>}</block></try>
    <call><name><name>zkStateReader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>forceUpdateCollection</name></name><argument_list>(<argument><expr><literal type="string">"unloadcollection"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><name>slices</name> <operator>=</operator> <call><name><name>zkStateReader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCollection</name><argument_list>(<argument><expr><literal type="string">"unloadcollection"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getSlices</name><argument_list>()</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>slices</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkControllerTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkControllerTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>cffbb543e49</name><operator>..</operator><literal type="number">7b293ca5ea6</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkControllerTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkControllerTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">296</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">296</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ZkControllerTest</name> extends <name>SolrTestCaseJ4</name> <block>{
         <expr><name><name>byte</name><index>[]</index></name> <name>bytes</name> <operator>=</operator> <call><name><name>Utils</name><operator>.</operator><name>toJSON</name></name><argument_list>(<argument><expr><name>state</name></expr></argument>)</argument_list></call></expr>;
         <call><name><name>zkController</name><operator>.</operator><name>getZkClient</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>makePath</name><argument_list>(<argument><expr><call><name><name>ZkStateReader</name><operator>.</operator><name>getCollectionPath</name></name><argument_list>(<argument><expr><literal type="string">"testPublishAndWaitForDownStates"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>bytes</name></expr></argument>, <argument><expr><name><name>CreateMode</name><operator>.</operator><name>PERSISTENT</name></name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
 
        <expr_stmt><expr><call><name><name>zkController</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>updateClusterState</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>zkController</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>forceUpdateCollection</name><argument_list>(<argument><expr><literal type="string">"testPublishAndWaitForDownStates"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>zkController</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterState</name><argument_list>()</argument_list></call><operator>.</operator><call><name>hasCollection</name><argument_list>(<argument><expr><literal type="string">"testPublishAndWaitForDownStates"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><call><name><name>zkController</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterState</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCollection</name><argument_list>(<argument><expr><literal type="string">"testPublishAndWaitForDownStates"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>StressHdfsTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>StressHdfsTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">445c4b8f615</literal><operator>..</operator><literal type="number">601f4fe723a</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>StressHdfsTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>hdfs</name><operator>/</operator><name><name>StressHdfsTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">154</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">154</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>StressHdfsTest</name> extends <name>BasicDistributedZkTest</name> <block>{
 
     <expr><call><name>waitForRecoveriesToFinish</name><argument_list>(<argument><expr><name>DELETE_DATA_DIR_COLLECTION</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;
     <call><name><name>cloudClient</name><operator>.</operator><name>setDefaultCollection</name></name><argument_list>(<argument><expr><name>DELETE_DATA_DIR_COLLECTION</name></expr></argument>)</argument_list></call></block></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>updateClusterState</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>forceUpdateCollection</name><argument_list>(<argument><expr><name>DELETE_DATA_DIR_COLLECTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>nShards</name> <operator>+</operator> <literal type="number">1</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
       <expr_stmt><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getLeaderRetry</name><argument_list>(<argument><expr><name>DELETE_DATA_DIR_COLLECTION</name></expr></argument>, <argument><expr><literal type="string">"shard"</literal> <operator>+</operator> <name>i</name></expr></argument>, <argument><expr><literal type="number">30000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">211</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">211</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>StressHdfsTest</name> extends <name>BasicDistributedZkTest</name> <block>{
       }</block>
       
       <call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">200</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>updateClusterState</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     </block_content>}</block></for>
     
     <comment type="line">// check that all dirs are gone</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>overseer</name><operator>/</operator><name><name>ZkStateReaderTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>overseer</name><operator>/</operator><name><name>ZkStateReaderTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">69626b0828b</literal><operator>..</operator><literal type="number">10cc46c5165</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>overseer</name><operator>/</operator><name><name>ZkStateReaderTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>overseer</name><operator>/</operator><name><name>ZkStateReaderTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">94</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">94</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ZkStateReaderTest</name> extends <name>SolrTestCaseJ4</name> <block>{
         <expr><call><name>assertFalse</name><argument_list>(<argument><expr><name>exists</name></expr></argument>)</argument_list></call></expr>;</block></expr></expr_stmt>
 
         <if_stmt><if>if <condition>(<expr><name>explicitRefresh</name></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>reader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>reader</name><operator>.</operator><name>forceUpdateCollection</name></name><argument_list>(<argument><expr><literal type="string">"c1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if> <else>else <block>{<block_content>
           <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">100</literal></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
             <if_stmt><if>if <condition>(<expr><call><name><name>reader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>hasCollection</name><argument_list>(<argument><expr><literal type="string">"c1"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">122</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">122</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ZkStateReaderTest</name> extends <name>SolrTestCaseJ4</name> <block>{
         <expr><call><name>assertTrue</name><argument_list>(<argument><expr><name>exists</name></expr></argument>)</argument_list></call></expr>;</block></expr></expr_stmt>
 
         <if_stmt><if>if <condition>(<expr><name>explicitRefresh</name></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>reader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name>reader</name><operator>.</operator><name>forceUpdateCollection</name></name><argument_list>(<argument><expr><literal type="string">"c1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if> <else>else <block>{<block_content>
           <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">100</literal></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
             <if_stmt><if>if <condition>(<expr><call><name><name>reader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCollection</name><argument_list>(<argument><expr><literal type="string">"c1"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getStateFormat</name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">2</literal></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">167</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">167</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ZkStateReaderTest</name> extends <name>SolrTestCaseJ4</name> <block>{
           <expr><operator>new</operator> <call><name>DocCollection</name><argument_list>(<argument><expr><literal type="string">"c1"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Slice</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>DocRouter</name><operator>.</operator><name>DEFAULT</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>ZkStateReader</name><operator>.</operator><name>COLLECTIONS_ZKNODE</name></name> <operator>+</operator> <literal type="string">"/c1/state.json"</literal></expr></argument>)</argument_list></call></expr>)</block></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>enqueueUpdate</name></name><argument_list>(<argument><expr><call><name><name>reader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>c1</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>writePendingUpdates</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>reader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>reader</name><operator>.</operator><name>forceUpdateCollection</name></name><argument_list>(<argument><expr><literal type="string">"c1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
       <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>reader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getCollectionRef</name><argument_list>(<argument><expr><literal type="string">"c1"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>isLazilyLoaded</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name><name>reader</name><operator>.</operator><name>addCollectionWatch</name></name><argument_list>(<argument><expr><literal type="string">"c1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>overseer</name><operator>/</operator><name><name>ZkStateWriterTest</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>overseer</name><operator>/</operator><name><name>ZkStateWriterTest</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">8e7b0098121</literal><operator>..</operator><name>f5648bf148c</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>overseer</name><operator>/</operator><name><name>ZkStateWriterTest</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>core</name><operator>/</operator><name>src</name><operator>/</operator><name>test</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name>overseer</name><operator>/</operator><name><name>ZkStateWriterTest</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">233</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">233</literal></expr><operator>,</operator><expr><literal type="number">8</literal> @@ <specifier>public</specifier> <name>class</name> <name>ZkStateWriterTest</name> extends <name>SolrTestCaseJ4</name> <block>{
       <expr><call><name><name>writer</name><operator>.</operator><name>enqueueUpdate</name></name><argument_list>(<argument><expr><call><name><name>reader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>c1</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;
       <call><name><name>writer</name><operator>.</operator><name>writePendingUpdates</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
 
      <expr_stmt><expr><call><name><name>reader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>reader</name><operator>.</operator><name>forceUpdateCollection</name></name><argument_list>(<argument><expr><literal type="string">"c1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>reader</name><operator>.</operator><name>forceUpdateCollection</name></name><argument_list>(<argument><expr><literal type="string">"c2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>ClusterState</name></type> <name>clusterState</name> <init>= <expr><call><name><name>reader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line">// keep a reference to the current cluster state object</comment>
       <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>clusterState</name><operator>.</operator><name>hasCollection</name></name><argument_list>(<argument><expr><literal type="string">"c1"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>clusterState</name><operator>.</operator><name>hasCollection</name></name><argument_list>(<argument><expr><literal type="string">"c2"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">257</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">258</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>ZkStateWriterTest</name> extends <name>SolrTestCaseJ4</name> <block>{
         <comment type="line">// expected</comment>
       }</block>
 
      <call><name><name>reader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <try>try <block>{<block_content>
         <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>enqueueUpdate</name></name><argument_list>(<argument><expr><call><name><name>reader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>c2</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><literal type="string">"enqueueUpdate after BadVersionException should not have suceeded"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">317</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">317</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ZkStateWriterTest</name> extends <name>SolrTestCaseJ4</name> <block>{
       <expr><call><name><name>zkClient</name><operator>.</operator><name>setData</name></name><argument_list>(<argument><expr><call><name><name>ZkStateReader</name><operator>.</operator><name>getCollectionPath</name></name><argument_list>(<argument><expr><literal type="string">"c2"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>data</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;
 
       <comment type="line">// get the most up-to-date state</comment>
      <call><name><name>reader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>reader</name><operator>.</operator><name>forceUpdateCollection</name></name><argument_list>(<argument><expr><literal type="string">"c2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><name>state</name> <operator>=</operator> <call><name><name>reader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>state</name><operator>.</operator><name>hasCollection</name></name><argument_list>(<argument><expr><literal type="string">"c2"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>sharedClusterStateVersion</name></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator> <call><name><name>state</name><operator>.</operator><name>getZkClusterStateVersion</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">328</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">328</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ZkStateWriterTest</name> extends <name>SolrTestCaseJ4</name> <block>{
       <expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>writer</name><operator>.</operator><name>hasPendingUpdates</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
 
       <comment type="line">// get the most up-to-date state</comment>
      <call><name><name>reader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></block></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>reader</name><operator>.</operator><name>forceUpdateCollection</name></name><argument_list>(<argument><expr><literal type="string">"c2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><name>state</name> <operator>=</operator> <call><name><name>reader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
       <comment type="line">// enqueue a stateFormat=1 collection which should cause a flush</comment>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">336</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">336</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ZkStateWriterTest</name> extends <name>SolrTestCaseJ4</name> <block>{
           <expr><operator>new</operator> <call><name>DocCollection</name><argument_list>(<argument><expr><literal type="string">"c1"</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Slice</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>Object</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>DocRouter</name><operator>.</operator><name>DEFAULT</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>ZkStateReader</name><operator>.</operator><name>CLUSTER_STATE</name></name></expr></argument>)</argument_list></call></expr>)</block></expr>;</expr_stmt>
 
       <try>try <block>{<block_content>
        <expr_stmt><expr><name>state</name> <operator>=</operator> <call><name><name>writer</name><operator>.</operator><name>enqueueUpdate</name></name><argument_list>(<argument><expr><name>state</name></expr></argument>, <argument><expr><name>c1</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>enqueueUpdate</name></name><argument_list>(<argument><expr><name>state</name></expr></argument>, <argument><expr><name>c1</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><literal type="string">"Enqueue should not have succeeded"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name><name>KeeperException</name><operator>.</operator><name>BadVersionException</name></name></type> <name>bve</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <comment type="line">// expected</comment>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>common</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkStateReader</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>common</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkStateReader</name><operator>.</operator><name>java</name></name>
<name>index</name> <literal type="number">3dbc6d2876d</literal><operator>..</operator><literal type="number">308b3e000a5</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>common</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkStateReader</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>solrj</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>common</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ZkStateReader</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">226</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">226</literal></expr><operator>,</operator><expr><literal type="number">10</literal> @@ <specifier>public</specifier> <name>class</name> <name>ZkStateReader</name> implements <name>Closeable</name> <block>{
 
   <comment type="block" format="javadoc">/**
    * Forcibly refresh cluster state from ZK. Do this only to avoid race conditions because it's expensive.
   *
   * @deprecated Don't call this, call {@link #forceUpdateCollection(String)} on a single collection if you must.
    */</comment>
  @<expr><name>Deprecated</name>
   <specifier>public</specifier> <name>void</name> <call><name>updateClusterState</name><argument_list>()</argument_list></call> <throws>throws <argument><expr><name>KeeperException</name></expr></argument>, <argument><expr><name>InterruptedException</name> <block>{
     <expr><specifier>synchronized</specifier> <operator>(</operator><call><name>getUpdateLock</name><argument_list>()</argument_list></call><operator>)</operator> <block>{</block></expr></block></expr></argument></throws></expr>
       <if_stmt><if>if <condition>(<expr><name>clusterState</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">248</literal></expr><operator>,</operator><expr><literal type="number">6</literal> <operator>+</operator><literal type="number">251</literal></expr><operator>,</operator><expr><literal type="number">49</literal> @@ <specifier>public</specifier> <name>class</name> <name>ZkStateReader</name> implements <name>Closeable</name> <block>{
     }</block></expr></expr_stmt>
   </block_content>}</block></if></if_stmt>
 
  <comment type="block" format="javadoc">/**
   * Forcibly refresh a collection's internal state from ZK. Try to avoid having to resort to this when
   * a better design is possible.
   */</comment>
  <specifier>public</specifier> <name>void</name> <call><name>forceUpdateCollection</name><argument_list>(<argument><expr><name>String</name> <name>collection</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>KeeperException</name></expr></argument>, <argument><expr><name>InterruptedException</name> <block>{
    <expr><specifier>synchronized</specifier> <operator>(</operator><call><name>getUpdateLock</name><argument_list>()</argument_list></call><operator>)</operator> <block>{</block></expr></block></expr></argument></throws></block></expr></expr_stmt>
      <if_stmt><if>if <condition>(<expr><name>clusterState</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <return>return;</return>
      </block_content>}</block></if></if_stmt>

      <decl_stmt><decl><type><name><name>ClusterState</name><operator>.</operator><name>CollectionRef</name></name></type> <name>ref</name> <init>= <expr><call><name><name>clusterState</name><operator>.</operator><name>getCollectionRef</name></name><argument_list>(<argument><expr><name>collection</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>ref</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <comment type="line">// We don't know anything about this collection, maybe it's new?</comment>
        <comment type="line">// First try to update the legacy cluster state.</comment>
        <expr_stmt><expr><call><name>refreshLegacyClusterState</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>legacyCollectionStates</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><name>collection</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
          <comment type="line">// No dice, see if a new collection just got created.</comment>
          <decl_stmt><decl><type><name>LazyCollectionRef</name></type> <name>tryLazyCollection</name> <init>= <expr><operator>new</operator> <call><name>LazyCollectionRef</name><argument_list>(<argument><expr><name>collection</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <if_stmt><if>if <condition>(<expr><call><name><name>tryLazyCollection</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <comment type="line">// No dice, just give up.</comment>
            <return>return;</return>
          </block_content>}</block></if></if_stmt>
          <comment type="line">// What do you know, it exists!</comment>
          <expr_stmt><expr><call><name><name>lazyCollectionStates</name><operator>.</operator><name>putIfAbsent</name></name><argument_list>(<argument><expr><name>collection</name></expr></argument>, <argument><expr><name>tryLazyCollection</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
      </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name><name>ref</name><operator>.</operator><name>isLazilyLoaded</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name><name>ref</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
          <return>return;</return>
        </block_content>}</block></if></if_stmt>
        <comment type="line">// Edge case: if there's no external collection, try refreshing legacy cluster state in case it's there.</comment>
        <expr_stmt><expr><call><name>refreshLegacyClusterState</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name><name>legacyCollectionStates</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><name>collection</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <comment type="line">// Exists, and lives in legacy cluster state, force a refresh.</comment>
        <expr_stmt><expr><call><name>refreshLegacyClusterState</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name><name>watchedCollectionStates</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><name>collection</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <comment type="line">// Exists as a watched collection, force a refresh.</comment>
        <decl_stmt><decl><type><name>DocCollection</name></type> <name>newState</name> <init>= <expr><call><name>fetchCollectionState</name><argument_list>(<argument><expr><name>collection</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>updateWatchedCollection</name><argument_list>(<argument><expr><name>collection</name></expr></argument>, <argument><expr><name>newState</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
      <expr_stmt><expr><call><name>constructState</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></catch></try>
  </block_content>}</block></try>

   <comment type="block" format="javadoc">/** Refresh the set of live nodes. */</comment>
   <function><type><specifier>public</specifier> <name>void</name></type> <name>updateLiveNodes</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>KeeperException</name></expr></argument>, <argument><expr><name>InterruptedException</name></expr></argument></throws> <block>{<block_content>
     <expr_stmt><expr><call><name>refreshLiveNodes</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>AbstractDistribZkTestBase</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>AbstractDistribZkTestBase</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>ff423826080</name><operator>..</operator><literal type="number">7b3617ba86c</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>AbstractDistribZkTestBase</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>AbstractDistribZkTestBase</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">145</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">145</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>AbstractDistribZkTestBase</name> extends <name>BaseDistributedSearchTes</name></expr></expr_stmt>
     <while>while <condition>(<expr><name>cont</name></expr>)</condition> <block>{<block_content>
       <if_stmt><if>if <condition>(<expr><name>verbose</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"-"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
       <decl_stmt><decl><type><name>boolean</name></type> <name>sawLiveRecovering</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>ClusterState</name></type> <name>clusterState</name> <init>= <expr><call><name><name>zkStateReader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Slice</name></argument>&gt;</argument_list></name></type> <name>slices</name> <init>= <expr><call><name><name>clusterState</name><operator>.</operator><name>getSlicesMap</name></name><argument_list>(<argument><expr><name>collection</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><literal type="string">"Could not find collection:"</literal> <operator>+</operator> <name>collection</name></expr></argument>, <argument><expr><name>slices</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">195</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">194</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>AbstractDistribZkTestBase</name> extends <name>BaseDistributedSearchTes</name></expr></expr_stmt>
     
     <while>while <condition>(<expr><name>cont</name></expr>)</condition> <block>{<block_content>
       <if_stmt><if>if <condition>(<expr><name>verbose</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"-"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
      <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>ClusterState</name></type> <name>clusterState</name> <init>= <expr><call><name><name>zkStateReader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>clusterState</name><operator>.</operator><name>hasCollection</name></name><argument_list>(<argument><expr><name>collection</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <break>break;</break></block_content></block></if></if_stmt>
       <if_stmt><if>if <condition>(<expr><name>cnt</name> <operator>==</operator> <name>timeoutSeconds</name></expr>)</condition> <block>{<block_content>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">239</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">237</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>AbstractDistribZkTestBase</name> extends <name>BaseDistributedSearchTes</name>
   <specifier>protected</specifier> <name>void</name> <call><name>assertAllActive</name><argument_list>(<argument><expr><name>String</name> <name>collection</name></expr></argument>,<argument><expr><name>ZkStateReader</name> <name>zkStateReader</name></expr></argument>)</argument_list></call>
       <throws>throws <argument><expr><name>KeeperException</name></expr></argument>, <argument><expr><name>InterruptedException</name> <block>{
 
      <expr><call><name><name>zkStateReader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>forceUpdateCollection</name></name><argument_list>(<argument><expr><name>collection</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>ClusterState</name></type> <name>clusterState</name> <init>= <expr><call><name><name>zkStateReader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Slice</name></argument>&gt;</argument_list></name></type> <name>slices</name> <init>= <expr><call><name><name>clusterState</name><operator>.</operator><name>getSlicesMap</name></name><argument_list>(<argument><expr><name>collection</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <if_stmt><if>if <condition>(<expr><name>slices</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>AbstractFullDistribZkTestBase</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>AbstractFullDistribZkTestBase</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>bf8f643656b</name><operator>..</operator><name>a584dbd450b</name> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>AbstractFullDistribZkTestBase</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>AbstractFullDistribZkTestBase</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">626</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">626</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>AbstractFullDistribZkTestBase</name> extends <name>AbstractDistribZkTes</name>
   
   <specifier>protected</specifier> <name>void</name> <call><name>updateMappingsFromZk</name><argument_list>(<argument><expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>JettySolrRunner</name></argument>&gt;</argument_list></name> <name>jettys</name></expr></argument>, <argument><expr><name><name>List</name><argument_list type="generic">&lt;<argument><name>SolrClient</name></argument>&gt;</argument_list></name> <name>clients</name></expr></argument>, <argument><expr><name>boolean</name> <name>allowOverSharding</name></expr></argument>)</argument_list></call> <throws>throws <argument><expr><name>Exception</name> <block>{
     <expr><name>ZkStateReader</name> <name>zkStateReader</name> <operator>=</operator> <call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call></expr></block></expr></argument></throws></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>forceUpdateCollection</name></name><argument_list>(<argument><expr><name>DEFAULT_COLLECTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>cloudJettys</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
     <expr_stmt><expr><call><name><name>shardToJetty</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1814</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1814</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>AbstractFullDistribZkTestBase</name> extends <name>AbstractDistribZkTes</name>
     <name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>,<argument><name>Replica</name></argument>&gt;</argument_list></name> <name>notLeaders</name> <operator>=</operator> <operator>new</operator> <call><name><name>HashMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
 
     <decl_stmt><decl><type><name>ZkStateReader</name></type> <name>zkr</name> <init>= <expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>zkr</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt> <comment type="line">// force the state to be fresh</comment>
    <expr_stmt><expr><call><name><name>zkr</name><operator>.</operator><name>forceUpdateCollection</name></name><argument_list>(<argument><expr><name>testCollectionName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// force the state to be fresh</comment>
 
     <decl_stmt><decl><type><name>ClusterState</name></type> <name>cs</name> <init>= <expr><call><name><name>zkr</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name><name>Collection</name><argument_list type="generic">&lt;<argument><name>Slice</name></argument>&gt;</argument_list></name></type> <name>slices</name> <init>= <expr><call><name><name>cs</name><operator>.</operator><name>getActiveSlices</name></name><argument_list>(<argument><expr><name>testCollectionName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1824</literal></expr><operator>,</operator><expr><literal type="number">10</literal> <operator>+</operator><literal type="number">1824</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>AbstractFullDistribZkTestBase</name> extends <name>AbstractDistribZkTes</name>
     <name>long</name> <name>maxWaitMs</name> <operator>=</operator> <name>maxWaitSecs</name> <operator>*</operator> <literal type="number">1000L</literal></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>Replica</name></type> <name>leader</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
     <while>while <condition>(<expr><name>waitMs</name> <operator>&lt;</operator> <name>maxWaitMs</name> <operator>&amp;&amp;</operator> <operator>!</operator><name>allReplicasUp</name></expr>)</condition> <block>{<block_content>
      <comment type="line">// refresh state every 2 secs</comment>
      <if_stmt><if>if <condition>(<expr><name>waitMs</name> <operator>%</operator> <literal type="number">2000</literal> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>updateClusterState</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

       <expr_stmt><expr><name>cs</name> <operator>=</operator> <call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterState</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
       <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><name>cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>Slice</name></type> <name>shard</name> <init>= <expr><call><name><name>cs</name><operator>.</operator><name>getSlice</name></name><argument_list>(<argument><expr><name>testCollectionName</name></expr></argument>, <argument><expr><name>shardId</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">1879</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">1875</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <specifier>abstract</specifier> <name>class</name> <name>AbstractFullDistribZkTestBase</name> extends <name>AbstractDistribZkTes</name></expr></expr_stmt>
   </block_content>}</block></while>
 
   <function><type><specifier>protected</specifier> <name>String</name></type> <name>printClusterStateInfo</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>collection</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <expr_stmt><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>updateClusterState</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>forceUpdateCollection</name><argument_list>(<argument><expr><name>collection</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     <decl_stmt><decl><type><name>String</name></type> <name>cs</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
     <decl_stmt><decl><type><name>ClusterState</name></type> <name>clusterState</name> <init>= <expr><call><name><name>cloudClient</name><operator>.</operator><name>getZkStateReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getClusterState</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
     <if_stmt><if>if <condition>(<expr><name>collection</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>diff</name> <operator>--</operator><name>git</name> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ChaosMonkey</name><operator>.</operator><name>java</name></name> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ChaosMonkey</name><operator>.</operator><name>java</name></name>
<name>index</name> <name>d13d62f0683</name><operator>..</operator><literal type="number">511fdf34b15</literal> <literal type="number">100644</literal>
<operator>--</operator> <name>a</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ChaosMonkey</name><operator>.</operator><name>java</name></name>
<operator>++</operator> <name>b</name><operator>/</operator><name>solr</name><operator>/</operator><name>test</name><operator>-</operator><name>framework</name><operator>/</operator><name>src</name><operator>/</operator><name>java</name><operator>/</operator><name>org</name><operator>/</operator><name>apache</name><operator>/</operator><name>solr</name><operator>/</operator><name>cloud</name><operator>/</operator><name><name>ChaosMonkey</name><operator>.</operator><name>java</name></name>
@@ <operator>-</operator><literal type="number">425</literal></expr><operator>,</operator><expr><literal type="number">7</literal> <operator>+</operator><literal type="number">425</literal></expr><operator>,</operator><expr><literal type="number">7</literal> @@ <specifier>public</specifier> <name>class</name> <name>ChaosMonkey</name> <block>{
     <for>for <control>(<init><decl><type><name>CloudJettyRunner</name></type> <name>cloudJetty</name> <range>: <expr><call><name><name>shardToJetty</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>slice</name></expr></argument>)</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
       
       <comment type="line">// get latest cloud state</comment>
      <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>forceUpdateCollection</name></name><argument_list>(<argument><expr><name>collection</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       
       <decl_stmt><decl><type><name>Slice</name></type> <name>theShards</name> <init>= <expr><call><name><name>zkStateReader</name><operator>.</operator><name>getClusterState</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSlicesMap</name><argument_list>(<argument><expr><name>collection</name></expr></argument>)</argument_list></call>
           <operator>.</operator><call><name>get</name><argument_list>(<argument><expr><name>slice</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<annotation>@</annotation>@ <expr_stmt><expr><operator>-</operator><literal type="number">447</literal></expr><operator>,</operator><expr><literal type="number">18</literal> <operator>+</operator><literal type="number">447</literal></expr><operator>,</operator><expr><literal type="number">6</literal> @@ <specifier>public</specifier> <name>class</name> <name>ChaosMonkey</name> <block>{
     <return>return <expr><name>numActive</name></expr>;</return>
   }</block></expr></expr_stmt>
   
  <function><type><specifier>public</specifier> <name>SolrClient</name></type> <name>getRandomClient</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>slice</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>KeeperException</name></expr></argument>, <argument><expr><name>InterruptedException</name></expr></argument></throws> <block>{<block_content>
    <comment type="line">// get latest cloud state</comment>
    <expr_stmt><expr><call><name><name>zkStateReader</name><operator>.</operator><name>updateClusterState</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// get random shard</comment>
    <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>SolrClient</name></argument>&gt;</argument_list></name></type> <name>clients</name> <init>= <expr><call><name><name>shardToClient</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>slice</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>index</name> <init>= <expr><call><name><name>LuceneTestCase</name><operator>.</operator><name>random</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>nextInt</name><argument_list>(<argument><expr><call><name><name>clients</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>SolrClient</name></type> <name>client</name> <init>= <expr><call><name><name>clients</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>index</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <return>return <expr><name>client</name></expr>;</return>
  </block_content>}</block></function>
  
   <comment type="line">// synchronously starts and stops shards randomly, unless there is only one</comment>
   <comment type="line">// active shard up for a slice or if there is one active and others recovering</comment>
   <function><type><specifier>public</specifier> <name>void</name></type> <name>startTheMonkey</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>killLeaders</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>int</name></type> <name>roundPauseUpperLimit</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><operator>-</operator> 
<literal type="number">2.19.1.windows</literal><literal type="number">.1</literal></expr></expr_stmt></block_content></block></function></block_content></block></for></block></expr></expr_stmt></block_content></block></if></if_stmt></block_content></block></function></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></while></block_content></block></while></block_content></block></function></block_content></block></if></if_stmt></block_content></block></for></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></else></if_stmt></block_content></block></for></block_content></block></for></block_content></block></for></block_content></block></while></block_content></block></for></block_content></block></try></block></expr></expr_stmt></block_content></block></finally></try></block></expr></expr_stmt></block_content></block></try></block></expr></expr_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></while></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></while></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></while></block_content></block></while></block_content></block></if></if_stmt></block_content></block></for></block_content></block></while></block_content></block></while></block_content></block></while></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></while></block_content></block></while></block_content></block></function></block_content></block></try></block></expr></expr_stmt></block_content></block></if></if_stmt>

</unit>
